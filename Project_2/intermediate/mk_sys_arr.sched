=== Generated schedule for mk_sys_arr ===

Method schedule
---------------
Method: put_A
Ready signal: True
Conflict-free: put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
Conflicts: put_A
 
Method: put_B
Ready signal: True
Conflict-free: put_A,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
Conflicts: put_B
 
Method: put_C
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
Conflicts: put_C
 
Method: put_sel
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
Conflicts: put_sel
 
Method: get_op1
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: get_op2
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: get_op3
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: get_op4
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac1_a
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac1_b
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac1_out
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac1_cnt
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac5_b
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac5_out
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac9_b
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac9_out
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac13_b
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac13_out
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac2_a
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac3_a
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Method: mac4_a
Ready signal: True
Conflict-free: put_A,
	       put_B,
	       put_C,
	       put_sel,
	       get_op1,
	       get_op2,
	       get_op3,
	       get_op4,
	       mac1_a,
	       mac1_b,
	       mac1_out,
	       mac1_cnt,
	       mac5_b,
	       mac5_out,
	       mac9_b,
	       mac9_out,
	       mac13_b,
	       mac13_out,
	       mac2_a,
	       mac3_a,
	       mac4_a
 
Rule schedule
-------------
Rule: mac1_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac1_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac1_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac1_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac1_mac_out
Predicate: mac1_int_8_out.whas && mac1_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac1_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac2_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac2_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac2_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac2_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac2_mac_out
Predicate: mac2_int_8_out.whas && mac2_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac2_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac3_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac3_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac3_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac3_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac3_mac_out
Predicate: mac3_int_8_out.whas && mac3_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac3_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac4_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac4_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac4_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac4_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac4_mac_out
Predicate: mac4_int_8_out.whas && mac4_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac4_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac5_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac5_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac5_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac5_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac5_mac_out
Predicate: mac5_int_8_out.whas && mac5_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac5_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac6_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac6_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac6_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac6_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac6_mac_out
Predicate: mac6_int_8_out.whas && mac6_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac6_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac7_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac7_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac7_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac7_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac7_mac_out
Predicate: mac7_int_8_out.whas && mac7_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac7_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac8_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac8_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac8_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac8_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac8_mac_out
Predicate: mac8_int_8_out.whas && mac8_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac8_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac9_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac9_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac9_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac9_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac9_mac_out
Predicate: mac9_int_8_out.whas && mac9_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac9_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac10_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac10_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac10_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac10_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac10_mac_out
Predicate: mac10_int_8_out.whas && mac10_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac10_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac11_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac11_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac11_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac11_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac11_mac_out
Predicate: mac11_int_8_out.whas && mac11_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac11_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac12_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac12_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac12_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac12_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac12_mac_out
Predicate: mac12_int_8_out.whas && mac12_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac12_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac13_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac13_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac13_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac13_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac13_mac_out
Predicate: mac13_int_8_out.whas && mac13_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac13_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac14_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac14_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac14_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac14_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac14_mac_out
Predicate: mac14_int_8_out.whas && mac14_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac14_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac15_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac15_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac15_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac15_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac15_mac_out
Predicate: mac15_int_8_out.whas && mac15_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac15_count_update
Predicate: True
Blocking rules: (none)
 
Rule: mac16_bfloat_mac
Predicate: True
Blocking rules: (none)
 
Rule: mac16_int_8_r1
Predicate: True
Blocking rules: (none)
 
Rule: mac16_mac_inp
Predicate: True
Blocking rules: (none)
 
Rule: mac16_stall1
Predicate: True
Blocking rules: (none)
 
Rule: mac16_mac_out
Predicate: mac16_int_8_out.whas && mac16_bfloat_out_r.whas
Blocking rules: (none)
 
Rule: mac16_count_update
Predicate: True
Blocking rules: (none)
 
Rule: get_val
Predicate: True
Blocking rules: (none)
 
Rule: put_val
Predicate: rg_A1.whas &&
	   rg_C1.whas &&
	   rg_sel.whas &&
	   a1_1.whas &&
	   rg_C2.whas &&
	   a2_1.whas &&
	   rg_C3.whas &&
	   a3_1.whas &&
	   rg_C4.whas &&
	   rg_A2.whas &&
	   mac1_1.whas &&
	   s1_1.whas &&
	   a5_1.whas &&
	   mac2_1.whas &&
	   s2_1.whas &&
	   a6_1.whas &&
	   mac3_1.whas &&
	   s3_1.whas &&
	   a7_1.whas &&
	   mac4_1_whas____d28948(...) &&
	   s4_1_whas__8949_AND_rg_A3_whas__8950_AND_mac5__ETC___d29029(...)
Blocking rules: (none)
 
Logical execution order: put_A,
			 put_B,
			 put_C,
			 put_sel,
			 get_op1,
			 get_op2,
			 get_op3,
			 get_op4,
			 mac1_a,
			 mac1_b,
			 mac1_out,
			 mac1_cnt,
			 mac5_b,
			 mac5_out,
			 mac9_b,
			 mac9_out,
			 mac13_b,
			 mac13_out,
			 mac2_a,
			 mac3_a,
			 mac4_a,
			 get_val,
			 mac1_bfloat_mac,
			 mac1_int_8_r1,
			 mac1_mac_out,
			 mac1_stall1,
			 mac1_mac_inp,
			 mac2_bfloat_mac,
			 mac2_int_8_r1,
			 mac2_mac_out,
			 mac2_stall1,
			 mac2_mac_inp,
			 mac3_bfloat_mac,
			 mac3_int_8_r1,
			 mac3_mac_out,
			 mac3_stall1,
			 mac3_mac_inp,
			 mac4_bfloat_mac,
			 mac4_int_8_r1,
			 mac4_mac_out,
			 mac4_stall1,
			 mac4_mac_inp,
			 mac5_bfloat_mac,
			 mac5_int_8_r1,
			 mac5_mac_out,
			 mac5_stall1,
			 mac5_mac_inp,
			 mac6_bfloat_mac,
			 mac6_int_8_r1,
			 mac6_mac_out,
			 mac6_stall1,
			 mac6_mac_inp,
			 mac7_bfloat_mac,
			 mac7_int_8_r1,
			 mac7_mac_out,
			 mac7_stall1,
			 mac7_mac_inp,
			 mac8_bfloat_mac,
			 mac8_int_8_r1,
			 mac8_mac_out,
			 mac8_stall1,
			 mac8_mac_inp,
			 mac9_bfloat_mac,
			 mac9_int_8_r1,
			 mac9_mac_out,
			 mac9_stall1,
			 mac9_mac_inp,
			 mac10_bfloat_mac,
			 mac10_int_8_r1,
			 mac10_mac_out,
			 mac10_stall1,
			 mac10_mac_inp,
			 mac11_bfloat_mac,
			 mac11_int_8_r1,
			 mac11_mac_out,
			 mac11_stall1,
			 mac11_mac_inp,
			 mac12_bfloat_mac,
			 mac12_int_8_r1,
			 mac12_mac_out,
			 mac12_stall1,
			 mac12_mac_inp,
			 mac13_bfloat_mac,
			 mac13_int_8_r1,
			 mac13_mac_out,
			 mac13_stall1,
			 mac13_mac_inp,
			 mac14_bfloat_mac,
			 mac14_int_8_r1,
			 mac14_mac_out,
			 mac14_stall1,
			 mac14_mac_inp,
			 mac15_bfloat_mac,
			 mac15_int_8_r1,
			 mac15_mac_out,
			 mac15_stall1,
			 mac15_mac_inp,
			 mac16_bfloat_mac,
			 mac16_int_8_r1,
			 mac16_mac_out,
			 mac16_stall1,
			 mac16_mac_inp,
			 put_val,
			 mac1_count_update,
			 mac2_count_update,
			 mac3_count_update,
			 mac4_count_update,
			 mac5_count_update,
			 mac6_count_update,
			 mac8_count_update,
			 mac7_count_update,
			 mac9_count_update,
			 mac11_count_update,
			 mac10_count_update,
			 mac12_count_update,
			 mac13_count_update,
			 mac14_count_update,
			 mac16_count_update,
			 mac15_count_update

==========================================
