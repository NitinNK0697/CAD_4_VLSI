//
// Generated by Bluespec Compiler, version 2024.07 (build b4f31dbe)
//
// On Mon Oct 21 13:54:49 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mk_Tb(CLK,
	     RST_N);
  input  CLK;
  input  RST_N;

  // register as1
  reg [15 : 0] as1;
  wire [15 : 0] as1$D_IN;
  wire as1$EN;

  // register as10
  reg [15 : 0] as10;
  wire [15 : 0] as10$D_IN;
  wire as10$EN;

  // register as11
  reg [15 : 0] as11;
  wire [15 : 0] as11$D_IN;
  wire as11$EN;

  // register as12
  reg [15 : 0] as12;
  wire [15 : 0] as12$D_IN;
  wire as12$EN;

  // register as2
  reg [15 : 0] as2;
  wire [15 : 0] as2$D_IN;
  wire as2$EN;

  // register as3
  reg [15 : 0] as3;
  wire [15 : 0] as3$D_IN;
  wire as3$EN;

  // register as4
  reg [15 : 0] as4;
  wire [15 : 0] as4$D_IN;
  wire as4$EN;

  // register as5
  reg [15 : 0] as5;
  wire [15 : 0] as5$D_IN;
  wire as5$EN;

  // register as6
  reg [15 : 0] as6;
  wire [15 : 0] as6$D_IN;
  wire as6$EN;

  // register as7
  reg [15 : 0] as7;
  wire [15 : 0] as7$D_IN;
  wire as7$EN;

  // register as8
  reg [15 : 0] as8;
  wire [15 : 0] as8$D_IN;
  wire as8$EN;

  // register as9
  reg [15 : 0] as9;
  wire [15 : 0] as9$D_IN;
  wire as9$EN;

  // register bs1
  reg [15 : 0] bs1;
  wire [15 : 0] bs1$D_IN;
  wire bs1$EN;

  // register bs10
  reg [15 : 0] bs10;
  wire [15 : 0] bs10$D_IN;
  wire bs10$EN;

  // register bs11
  reg [15 : 0] bs11;
  wire [15 : 0] bs11$D_IN;
  wire bs11$EN;

  // register bs12
  reg [15 : 0] bs12;
  wire [15 : 0] bs12$D_IN;
  wire bs12$EN;

  // register bs2
  reg [15 : 0] bs2;
  wire [15 : 0] bs2$D_IN;
  wire bs2$EN;

  // register bs3
  reg [15 : 0] bs3;
  wire [15 : 0] bs3$D_IN;
  wire bs3$EN;

  // register bs4
  reg [15 : 0] bs4;
  wire [15 : 0] bs4$D_IN;
  wire bs4$EN;

  // register bs5
  reg [15 : 0] bs5;
  wire [15 : 0] bs5$D_IN;
  wire bs5$EN;

  // register bs6
  reg [15 : 0] bs6;
  wire [15 : 0] bs6$D_IN;
  wire bs6$EN;

  // register bs7
  reg [15 : 0] bs7;
  wire [15 : 0] bs7$D_IN;
  wire bs7$EN;

  // register bs8
  reg [15 : 0] bs8;
  wire [15 : 0] bs8$D_IN;
  wire bs8$EN;

  // register bs9
  reg [15 : 0] bs9;
  wire [15 : 0] bs9$D_IN;
  wire bs9$EN;

  // register count
  reg [31 : 0] count;
  wire [31 : 0] count$D_IN;
  wire count$EN;

  // register cs1
  reg [31 : 0] cs1;
  wire [31 : 0] cs1$D_IN;
  wire cs1$EN;

  // register cs10
  reg [31 : 0] cs10;
  wire [31 : 0] cs10$D_IN;
  wire cs10$EN;

  // register cs11
  reg [31 : 0] cs11;
  wire [31 : 0] cs11$D_IN;
  wire cs11$EN;

  // register cs12
  reg [31 : 0] cs12;
  wire [31 : 0] cs12$D_IN;
  wire cs12$EN;

  // register cs2
  reg [31 : 0] cs2;
  wire [31 : 0] cs2$D_IN;
  wire cs2$EN;

  // register cs3
  reg [31 : 0] cs3;
  wire [31 : 0] cs3$D_IN;
  wire cs3$EN;

  // register cs4
  reg [31 : 0] cs4;
  wire [31 : 0] cs4$D_IN;
  wire cs4$EN;

  // register cs5
  reg [31 : 0] cs5;
  wire [31 : 0] cs5$D_IN;
  wire cs5$EN;

  // register cs6
  reg [31 : 0] cs6;
  wire [31 : 0] cs6$D_IN;
  wire cs6$EN;

  // register cs7
  reg [31 : 0] cs7;
  wire [31 : 0] cs7$D_IN;
  wire cs7$EN;

  // register cs8
  reg [31 : 0] cs8;
  wire [31 : 0] cs8$D_IN;
  wire cs8$EN;

  // register cs9
  reg [31 : 0] cs9;
  wire [31 : 0] cs9$D_IN;
  wire cs9$EN;

  // register failed_cases
  reg [31 : 0] failed_cases;
  wire [31 : 0] failed_cases$D_IN;
  wire failed_cases$EN;

  // register mac_cyc
  reg [31 : 0] mac_cyc;
  wire [31 : 0] mac_cyc$D_IN;
  wire mac_cyc$EN;

  // register mac_obj_mul_pp00
  reg mac_obj_mul_pp00;
  wire mac_obj_mul_pp00$D_IN, mac_obj_mul_pp00$EN;

  // register mac_obj_mul_pp00_s2
  reg mac_obj_mul_pp00_s2;
  wire mac_obj_mul_pp00_s2$D_IN, mac_obj_mul_pp00_s2$EN;

  // register mac_obj_mul_pp00_s3
  reg mac_obj_mul_pp00_s3;
  wire mac_obj_mul_pp00_s3$D_IN, mac_obj_mul_pp00_s3$EN;

  // register mac_obj_mul_pp00_s4
  reg mac_obj_mul_pp00_s4;
  wire mac_obj_mul_pp00_s4$D_IN, mac_obj_mul_pp00_s4$EN;

  // register mac_obj_mul_pp01
  reg mac_obj_mul_pp01;
  wire mac_obj_mul_pp01$D_IN, mac_obj_mul_pp01$EN;

  // register mac_obj_mul_pp01_s2
  reg mac_obj_mul_pp01_s2;
  wire mac_obj_mul_pp01_s2$D_IN, mac_obj_mul_pp01_s2$EN;

  // register mac_obj_mul_pp01_s3
  reg mac_obj_mul_pp01_s3;
  wire mac_obj_mul_pp01_s3$D_IN, mac_obj_mul_pp01_s3$EN;

  // register mac_obj_mul_pp07
  reg mac_obj_mul_pp07;
  wire mac_obj_mul_pp07$D_IN, mac_obj_mul_pp07$EN;

  // register mac_obj_mul_pp10
  reg mac_obj_mul_pp10;
  wire mac_obj_mul_pp10$D_IN, mac_obj_mul_pp10$EN;

  // register mac_obj_mul_pp10_s2
  reg mac_obj_mul_pp10_s2;
  wire mac_obj_mul_pp10_s2$D_IN, mac_obj_mul_pp10_s2$EN;

  // register mac_obj_mul_pp10_s3
  reg mac_obj_mul_pp10_s3;
  wire mac_obj_mul_pp10_s3$D_IN, mac_obj_mul_pp10_s3$EN;

  // register mac_obj_mul_pp16
  reg mac_obj_mul_pp16;
  wire mac_obj_mul_pp16$D_IN, mac_obj_mul_pp16$EN;

  // register mac_obj_mul_pp21
  reg mac_obj_mul_pp21;
  wire mac_obj_mul_pp21$D_IN, mac_obj_mul_pp21$EN;

  // register mac_obj_mul_pp30
  reg mac_obj_mul_pp30;
  wire mac_obj_mul_pp30$D_IN, mac_obj_mul_pp30$EN;

  // register mac_obj_mul_pp35
  reg mac_obj_mul_pp35;
  wire mac_obj_mul_pp35$D_IN, mac_obj_mul_pp35$EN;

  // register mac_obj_mul_pp35_s2
  reg mac_obj_mul_pp35_s2;
  wire mac_obj_mul_pp35_s2$D_IN, mac_obj_mul_pp35_s2$EN;

  // register mac_obj_mul_pp41
  reg mac_obj_mul_pp41;
  wire mac_obj_mul_pp41$D_IN, mac_obj_mul_pp41$EN;

  // register mac_obj_mul_pp50
  reg mac_obj_mul_pp50;
  wire mac_obj_mul_pp50$D_IN, mac_obj_mul_pp50$EN;

  // register mac_obj_mul_pp57
  reg mac_obj_mul_pp57;
  wire mac_obj_mul_pp57$D_IN, mac_obj_mul_pp57$EN;

  // register mac_obj_mul_pp57_s2
  reg mac_obj_mul_pp57_s2;
  wire mac_obj_mul_pp57_s2$D_IN, mac_obj_mul_pp57_s2$EN;

  // register mac_obj_mul_pp77
  reg mac_obj_mul_pp77;
  wire mac_obj_mul_pp77$D_IN, mac_obj_mul_pp77$EN;

  // register mac_obj_mul_pp77_s2
  reg mac_obj_mul_pp77_s2;
  wire mac_obj_mul_pp77_s2$D_IN, mac_obj_mul_pp77_s2$EN;

  // register mac_obj_mul_pp77_s3
  reg mac_obj_mul_pp77_s3;
  wire mac_obj_mul_pp77_s3$D_IN, mac_obj_mul_pp77_s3$EN;

  // register mac_obj_mul_s11
  reg [4 : 0] mac_obj_mul_s11;
  wire [4 : 0] mac_obj_mul_s11$D_IN;
  wire mac_obj_mul_s11$EN;

  // register mac_obj_mul_s11_s2
  reg [4 : 0] mac_obj_mul_s11_s2;
  wire [4 : 0] mac_obj_mul_s11_s2$D_IN;
  wire mac_obj_mul_s11_s2$EN;

  // register mac_obj_mul_s11_s3
  reg [4 : 0] mac_obj_mul_s11_s3;
  wire [4 : 0] mac_obj_mul_s11_s3$D_IN;
  wire mac_obj_mul_s11_s3$EN;

  // register mac_obj_mul_s12
  reg [4 : 0] mac_obj_mul_s12;
  wire [4 : 0] mac_obj_mul_s12$D_IN;
  wire mac_obj_mul_s12$EN;

  // register mac_obj_mul_s13
  reg [4 : 0] mac_obj_mul_s13;
  wire [4 : 0] mac_obj_mul_s13$D_IN;
  wire mac_obj_mul_s13$EN;

  // register mac_obj_mul_s14
  reg [4 : 0] mac_obj_mul_s14;
  wire [4 : 0] mac_obj_mul_s14$D_IN;
  wire mac_obj_mul_s14$EN;

  // register mac_obj_mul_s15
  reg [4 : 0] mac_obj_mul_s15;
  wire [4 : 0] mac_obj_mul_s15$D_IN;
  wire mac_obj_mul_s15$EN;

  // register mac_obj_mul_s15_s2
  reg [4 : 0] mac_obj_mul_s15_s2;
  wire [4 : 0] mac_obj_mul_s15_s2$D_IN;
  wire mac_obj_mul_s15_s2$EN;

  // register mac_obj_mul_s16
  reg [4 : 0] mac_obj_mul_s16;
  wire [4 : 0] mac_obj_mul_s16$D_IN;
  wire mac_obj_mul_s16$EN;

  // register mac_obj_mul_s16_s2
  reg [4 : 0] mac_obj_mul_s16_s2;
  wire [4 : 0] mac_obj_mul_s16_s2$D_IN;
  wire mac_obj_mul_s16_s2$EN;

  // register mac_obj_mul_s16_s3
  reg [4 : 0] mac_obj_mul_s16_s3;
  wire [4 : 0] mac_obj_mul_s16_s3$D_IN;
  wire mac_obj_mul_s16_s3$EN;

  // register mac_obj_mul_s21
  reg [4 : 0] mac_obj_mul_s21;
  wire [4 : 0] mac_obj_mul_s21$D_IN;
  wire mac_obj_mul_s21$EN;

  // register mac_obj_mul_s21_s3
  reg [4 : 0] mac_obj_mul_s21_s3;
  wire [4 : 0] mac_obj_mul_s21_s3$D_IN;
  wire mac_obj_mul_s21_s3$EN;

  // register mac_obj_mul_s22
  reg [4 : 0] mac_obj_mul_s22;
  wire [4 : 0] mac_obj_mul_s22$D_IN;
  wire mac_obj_mul_s22$EN;

  // register mac_obj_mul_s22_s3
  reg [4 : 0] mac_obj_mul_s22_s3;
  wire [4 : 0] mac_obj_mul_s22_s3$D_IN;
  wire mac_obj_mul_s22_s3$EN;

  // register mac_obj_mul_s23
  reg [4 : 0] mac_obj_mul_s23;
  wire [4 : 0] mac_obj_mul_s23$D_IN;
  wire mac_obj_mul_s23$EN;

  // register mac_obj_mul_s23_s3
  reg [4 : 0] mac_obj_mul_s23_s3;
  wire [4 : 0] mac_obj_mul_s23_s3$D_IN;
  wire mac_obj_mul_s23_s3$EN;

  // register mac_obj_mul_s31
  reg [1 : 0] mac_obj_mul_s31;
  wire [1 : 0] mac_obj_mul_s31$D_IN;
  wire mac_obj_mul_s31$EN;

  // register mac_obj_mul_s32
  reg [1 : 0] mac_obj_mul_s32;
  wire [1 : 0] mac_obj_mul_s32$D_IN;
  wire mac_obj_mul_s32$EN;

  // register mac_obj_mul_s33
  reg [1 : 0] mac_obj_mul_s33;
  wire [1 : 0] mac_obj_mul_s33$D_IN;
  wire mac_obj_mul_s33$EN;

  // register mac_obj_mul_s34
  reg [1 : 0] mac_obj_mul_s34;
  wire [1 : 0] mac_obj_mul_s34$D_IN;
  wire mac_obj_mul_s34$EN;

  // register mac_obj_mul_s35
  reg [1 : 0] mac_obj_mul_s35;
  wire [1 : 0] mac_obj_mul_s35$D_IN;
  wire mac_obj_mul_s35$EN;

  // register mac_obj_mul_s36
  reg [1 : 0] mac_obj_mul_s36;
  wire [1 : 0] mac_obj_mul_s36$D_IN;
  wire mac_obj_mul_s36$EN;

  // register mac_obj_mul_s41
  reg [4 : 0] mac_obj_mul_s41;
  wire [4 : 0] mac_obj_mul_s41$D_IN;
  wire mac_obj_mul_s41$EN;

  // register mac_obj_mul_s42
  reg [4 : 0] mac_obj_mul_s42;
  wire [4 : 0] mac_obj_mul_s42$D_IN;
  wire mac_obj_mul_s42$EN;

  // register mac_obj_mul_s43
  reg [4 : 0] mac_obj_mul_s43;
  wire [4 : 0] mac_obj_mul_s43$D_IN;
  wire mac_obj_mul_s43$EN;

  // register mac_obj_mul_s44
  reg [4 : 0] mac_obj_mul_s44;
  wire [4 : 0] mac_obj_mul_s44$D_IN;
  wire mac_obj_mul_s44$EN;

  // register mac_obj_mul_x
  reg [7 : 0] mac_obj_mul_x;
  wire [7 : 0] mac_obj_mul_x$D_IN;
  wire mac_obj_mul_x$EN;

  // register mac_obj_mul_y
  reg [7 : 0] mac_obj_mul_y;
  wire [7 : 0] mac_obj_mul_y$D_IN;
  wire mac_obj_mul_y$EN;

  // register mac_obj_mul_z
  reg [15 : 0] mac_obj_mul_z;
  wire [15 : 0] mac_obj_mul_z$D_IN;
  wire mac_obj_mul_z$EN;

  // register mac_out
  reg [31 : 0] mac_out;
  wire [31 : 0] mac_out$D_IN;
  wire mac_out$EN;

  // register mac_p1
  reg [15 : 0] mac_p1;
  wire [15 : 0] mac_p1$D_IN;
  wire mac_p1$EN;

  // register mac_rg_a
  reg [7 : 0] mac_rg_a;
  wire [7 : 0] mac_rg_a$D_IN;
  wire mac_rg_a$EN;

  // register mac_rg_b
  reg [7 : 0] mac_rg_b;
  wire [7 : 0] mac_rg_b$D_IN;
  wire mac_rg_b$EN;

  // register mac_rg_c
  reg [31 : 0] mac_rg_c;
  wire [31 : 0] mac_rg_c$D_IN;
  wire mac_rg_c$EN;

  // register macs1
  reg [31 : 0] macs1;
  wire [31 : 0] macs1$D_IN;
  wire macs1$EN;

  // register macs10
  reg [31 : 0] macs10;
  wire [31 : 0] macs10$D_IN;
  wire macs10$EN;

  // register macs11
  reg [31 : 0] macs11;
  wire [31 : 0] macs11$D_IN;
  wire macs11$EN;

  // register macs12
  reg [31 : 0] macs12;
  wire [31 : 0] macs12$D_IN;
  wire macs12$EN;

  // register macs2
  reg [31 : 0] macs2;
  wire [31 : 0] macs2$D_IN;
  wire macs2$EN;

  // register macs3
  reg [31 : 0] macs3;
  wire [31 : 0] macs3$D_IN;
  wire macs3$EN;

  // register macs4
  reg [31 : 0] macs4;
  wire [31 : 0] macs4$D_IN;
  wire macs4$EN;

  // register macs5
  reg [31 : 0] macs5;
  wire [31 : 0] macs5$D_IN;
  wire macs5$EN;

  // register macs6
  reg [31 : 0] macs6;
  wire [31 : 0] macs6$D_IN;
  wire macs6$EN;

  // register macs7
  reg [31 : 0] macs7;
  wire [31 : 0] macs7$D_IN;
  wire macs7$EN;

  // register macs8
  reg [31 : 0] macs8;
  wire [31 : 0] macs8$D_IN;
  wire macs8$EN;

  // register macs9
  reg [31 : 0] macs9;
  wire [31 : 0] macs9$D_IN;
  wire macs9$EN;

  // register rg_a
  reg [15 : 0] rg_a;
  wire [15 : 0] rg_a$D_IN;
  wire rg_a$EN;

  // register rg_af
  reg [15 : 0] rg_af;
  wire [15 : 0] rg_af$D_IN;
  wire rg_af$EN;

  // register rg_b
  reg [15 : 0] rg_b;
  wire [15 : 0] rg_b$D_IN;
  wire rg_b$EN;

  // register rg_bf
  reg [15 : 0] rg_bf;
  wire [15 : 0] rg_bf$D_IN;
  wire rg_bf$EN;

  // register rg_c
  reg [31 : 0] rg_c;
  wire [31 : 0] rg_c$D_IN;
  wire rg_c$EN;

  // register rg_cf
  reg [31 : 0] rg_cf;
  wire [31 : 0] rg_cf$D_IN;
  wire rg_cf$EN;

  // register rg_mac
  reg [31 : 0] rg_mac;
  wire [31 : 0] rg_mac$D_IN;
  wire rg_mac$EN;

  // register rg_macf
  reg [31 : 0] rg_macf;
  wire [31 : 0] rg_macf$D_IN;
  wire rg_macf$EN;

  // register rg_r
  reg rg_r;
  wire rg_r$D_IN, rg_r$EN;

  // ports of submodule obj_inp
  wire [31 : 0] obj_inp$out_c, obj_inp$out_mac;
  wire [7 : 0] obj_inp$out_a, obj_inp$out_b;
  wire obj_inp$EN, obj_inp$read;

  // remaining internal signals
  wire [31 : 0] mac_result__h29694;
  wire [6 : 0] INV_x099__q1,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d10,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d131,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d59,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d6,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82,
	       x__h8099,
	       y__h4427,
	       y__h4561,
	       y__h4999,
	       y__h5733,
	       y__h6170,
	       y__h6906,
	       y__h7343,
	       y__h8101;
  wire [3 : 0] INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247,
	       carrrg_b__h10007,
	       carrrg_b__h11559,
	       carrrg_b__h12492,
	       carrrg_b__h13401,
	       carrrg_b__h16081,
	       carrrg_b__h19079,
	       carrrg_b__h4270,
	       carrrg_b__h5573,
	       carrrg_b__h6746,
	       carrrg_b__h7919,
	       mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61,
	       mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777,
	       mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756,
	       mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819,
	       mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d681,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735,
	       p__h10003,
	       p__h11555,
	       p__h12488,
	       p__h13397,
	       p__h16077,
	       p__h19075,
	       p__h20554,
	       p__h21032,
	       p__h21508,
	       p__h21984,
	       p__h22459,
	       p__h22868,
	       p__h23277,
	       p__h23685,
	       p__h4266,
	       p__h5569,
	       p__h6742,
	       p__h7915,
	       rg_a__h21975,
	       rg_a__h9994,
	       rg_b__h11547,
	       sum__h10009,
	       sum__h11561,
	       sum__h12494,
	       sum__h13403,
	       sum__h16083,
	       sum__h16989,
	       sum__h18013,
	       sum__h19081,
	       sum__h20556,
	       sum__h21034,
	       sum__h21510,
	       sum__h21986,
	       sum__h22461,
	       sum__h22870,
	       sum__h23279,
	       sum__h23687,
	       sum__h4272,
	       sum__h5575,
	       sum__h6748,
	       sum__h7921,
	       sum__h8980,
	       y__h24067,
	       y__h24533,
	       y__h24999,
	       y__h25465,
	       y__h25931,
	       y__h26397,
	       y__h26863,
	       y__h27329;
  wire [2 : 0] mac_obj_mul_s13_49_BITS_2_TO_0_50_AND_mac_obj__ETC___d353,
	       mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d160,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162;
  wire [1 : 0] mac_obj_mul_s13_49_BITS_4_TO_3_85_AND_mac_obj__ETC___d387,
	       mac_obj_mul_s13_49_BITS_4_TO_3_85_XOR_mac_obj__ETC___d389,
	       mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d401,
	       mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405,
	       mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_AND_mac_o_ETC___d541,
	       mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545,
	       mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d575,
	       mac_obj_mul_s34_85_BIT_0_92_XOR_mac_obj_mul_s3_ETC___d630;
  wire cout__h10008,
       cout__h11560,
       cout__h12493,
       cout__h13402,
       cout__h16988,
       cout__h18012,
       cout__h4271,
       cout__h5574,
       cout__h6747,
       cout__h7920,
       cout__h8979,
       mac_obj_mul_pp77_s3_33_AND_mac_obj_mul_s16_s3__ETC___d649,
       mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d839,
       mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d841,
       mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d835,
       mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d837,
       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d843,
       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d845,
       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d847,
       x__h10022,
       x__h10024,
       x__h10026,
       x__h10161,
       x__h10228,
       x__h10318,
       x__h10519,
       x__h10521,
       x__h10591,
       x__h10658,
       x__h10736,
       x__h10806,
       x__h11574,
       x__h11576,
       x__h11578,
       x__h11719,
       x__h11786,
       x__h11876,
       x__h12058,
       x__h12060,
       x__h12130,
       x__h12197,
       x__h12275,
       x__h12345,
       x__h12509,
       x__h12511,
       x__h12654,
       x__h12718,
       x__h12983,
       x__h13050,
       x__h13416,
       x__h13418,
       x__h13420,
       x__h13608,
       x__h13672,
       x__h13758,
       x__h13936,
       x__h13938,
       x__h14005,
       x__h14069,
       x__h14144,
       x__h14211,
       x__h14880,
       x__h14938,
       x__h15065,
       x__h15144,
       x__h15271,
       x__h15350,
       x__h15477,
       x__h15555,
       x__h15682,
       x__h15739,
       x__h16242,
       x__h16306,
       x__h16638,
       x__h17002,
       x__h17004,
       x__h17006,
       x__h17008,
       x__h17184,
       x__h17239,
       x__h17303,
       x__h17389,
       x__h17589,
       x__h17591,
       x__h17658,
       x__h17722,
       x__h17797,
       x__h17864,
       x__h18026,
       x__h18028,
       x__h18030,
       x__h18032,
       x__h18252,
       x__h18307,
       x__h18371,
       x__h18457,
       x__h18657,
       x__h18659,
       x__h18726,
       x__h18790,
       x__h18865,
       x__h18932,
       x__h19612,
       x__h19614,
       x__h19681,
       x__h19745,
       x__h21047,
       x__h21049,
       x__h21051,
       x__h21231,
       x__h21298,
       x__h21388,
       x__h21523,
       x__h21525,
       x__h21527,
       x__h21707,
       x__h21774,
       x__h21864,
       x__h21999,
       x__h22001,
       x__h22003,
       x__h22183,
       x__h22250,
       x__h22340,
       x__h22474,
       x__h22476,
       x__h22478,
       x__h22592,
       x__h22659,
       x__h22749,
       x__h22883,
       x__h22885,
       x__h22887,
       x__h23001,
       x__h23068,
       x__h23158,
       x__h23292,
       x__h23294,
       x__h23296,
       x__h23410,
       x__h23477,
       x__h23567,
       x__h23702,
       x__h23704,
       x__h23818,
       x__h23885,
       x__h24144,
       x__h24214,
       x__h24608,
       x__h24610,
       x__h24680,
       x__h24747,
       x__h24825,
       x__h24895,
       x__h25074,
       x__h25076,
       x__h25146,
       x__h25213,
       x__h25291,
       x__h25361,
       x__h25540,
       x__h25542,
       x__h25612,
       x__h25679,
       x__h25757,
       x__h25827,
       x__h26006,
       x__h26008,
       x__h26078,
       x__h26145,
       x__h26223,
       x__h26293,
       x__h26472,
       x__h26474,
       x__h26544,
       x__h26611,
       x__h26689,
       x__h26759,
       x__h26938,
       x__h26940,
       x__h27010,
       x__h27077,
       x__h27155,
       x__h27225,
       x__h27404,
       x__h27406,
       x__h27476,
       x__h27543,
       x__h27621,
       x__h27691,
       x__h4287,
       x__h4289,
       x__h4291,
       x__h4374,
       x__h4510,
       x__h4667,
       x__h4734,
       x__h4824,
       x__h4948,
       x__h5139,
       x__h5141,
       x__h5211,
       x__h5278,
       x__h5356,
       x__h5426,
       x__h5588,
       x__h5590,
       x__h5592,
       x__h5682,
       x__h5839,
       x__h5906,
       x__h5996,
       x__h6119,
       x__h6310,
       x__h6312,
       x__h6382,
       x__h6449,
       x__h6527,
       x__h6597,
       x__h6761,
       x__h6763,
       x__h6765,
       x__h6855,
       x__h7012,
       x__h7079,
       x__h7169,
       x__h7292,
       x__h7483,
       x__h7485,
       x__h7555,
       x__h7622,
       x__h7700,
       x__h7770,
       x__h7936,
       x__h7938,
       x__h8230,
       x__h8294,
       x__h8560,
       x__h8627,
       x__h8993,
       x__h8995,
       x__h8997,
       x__h8999,
       x__h9203,
       x__h9258,
       x__h9322,
       x__h9585,
       x__h9587,
       x__h9654,
       x__h9793,
       y__h10023,
       y__h10025,
       y__h10027,
       y__h10029,
       y__h10520,
       y__h10522,
       y__h10524,
       y__h10737,
       y__h10739,
       y__h10862,
       y__h11575,
       y__h11577,
       y__h11579,
       y__h11581,
       y__h12059,
       y__h12061,
       y__h12063,
       y__h12276,
       y__h12278,
       y__h12401,
       y__h12510,
       y__h12512,
       y__h12514,
       y__h12719,
       y__h12984,
       y__h12986,
       y__h13192,
       y__h13417,
       y__h13419,
       y__h13421,
       y__h13423,
       y__h13937,
       y__h13939,
       y__h13941,
       y__h14145,
       y__h14147,
       y__h14265,
       y__h14939,
       y__h15145,
       y__h15351,
       y__h15556,
       y__h15740,
       y__h16099,
       y__h16307,
       y__h16572,
       y__h16780,
       y__h17003,
       y__h17005,
       y__h17007,
       y__h17009,
       y__h17185,
       y__h17242,
       y__h17590,
       y__h17592,
       y__h17594,
       y__h17798,
       y__h17800,
       y__h17918,
       y__h18027,
       y__h18029,
       y__h18031,
       y__h18033,
       y__h18253,
       y__h18308,
       y__h18310,
       y__h18372,
       y__h18374,
       y__h18459,
       y__h18658,
       y__h18660,
       y__h18662,
       y__h18866,
       y__h18868,
       y__h18986,
       y__h19327,
       y__h19414,
       y__h19615,
       y__h19821,
       y__h19941,
       y__h21048,
       y__h21050,
       y__h21052,
       y__h21054,
       y__h21524,
       y__h21526,
       y__h21528,
       y__h21530,
       y__h22000,
       y__h22002,
       y__h22004,
       y__h22006,
       y__h22475,
       y__h22477,
       y__h22479,
       y__h22481,
       y__h22884,
       y__h22886,
       y__h22888,
       y__h22890,
       y__h23293,
       y__h23295,
       y__h23297,
       y__h23299,
       y__h23703,
       y__h23705,
       y__h23707,
       y__h24145,
       y__h24147,
       y__h24362,
       y__h24609,
       y__h24611,
       y__h24613,
       y__h24826,
       y__h24828,
       y__h24951,
       y__h25075,
       y__h25077,
       y__h25079,
       y__h25292,
       y__h25294,
       y__h25417,
       y__h25541,
       y__h25543,
       y__h25545,
       y__h25758,
       y__h25760,
       y__h25883,
       y__h26007,
       y__h26009,
       y__h26011,
       y__h26224,
       y__h26226,
       y__h26349,
       y__h26473,
       y__h26475,
       y__h26477,
       y__h26690,
       y__h26692,
       y__h26815,
       y__h26939,
       y__h26941,
       y__h26943,
       y__h27156,
       y__h27158,
       y__h27281,
       y__h27405,
       y__h27407,
       y__h27409,
       y__h27622,
       y__h27624,
       y__h27747,
       y__h4288,
       y__h4290,
       y__h4292,
       y__h4294,
       y__h5140,
       y__h5142,
       y__h5144,
       y__h5357,
       y__h5359,
       y__h5482,
       y__h5589,
       y__h5591,
       y__h5593,
       y__h5595,
       y__h6311,
       y__h6313,
       y__h6315,
       y__h6528,
       y__h6530,
       y__h6653,
       y__h6762,
       y__h6764,
       y__h6766,
       y__h6768,
       y__h7484,
       y__h7486,
       y__h7488,
       y__h7701,
       y__h7703,
       y__h7826,
       y__h7937,
       y__h7939,
       y__h7941,
       y__h8295,
       y__h8561,
       y__h8563,
       y__h8769,
       y__h8994,
       y__h8996,
       y__h8998,
       y__h9000,
       y__h9204,
       y__h9259,
       y__h9261,
       y__h9323,
       y__h9325,
       y__h9410,
       y__h9586,
       y__h9588,
       y__h9590,
       y__h9794,
       y__h9796;

  // submodule obj_inp
  file_read obj_inp(.RST(RST_N),
		    .clk(CLK),
		    .read(obj_inp$read),
		    .EN(obj_inp$EN),
		    .out_a(obj_inp$out_a),
		    .out_b(obj_inp$out_b),
		    .out_c(obj_inp$out_c),
		    .out_mac(obj_inp$out_mac));

  // register as1
  assign as1$D_IN = rg_af ;
  assign as1$EN = 1'd1 ;

  // register as10
  assign as10$D_IN = as9 ;
  assign as10$EN = 1'd1 ;

  // register as11
  assign as11$D_IN = 16'h0 ;
  assign as11$EN = 1'b0 ;

  // register as12
  assign as12$D_IN = 16'h0 ;
  assign as12$EN = 1'b0 ;

  // register as2
  assign as2$D_IN = as1 ;
  assign as2$EN = 1'd1 ;

  // register as3
  assign as3$D_IN = as2 ;
  assign as3$EN = 1'd1 ;

  // register as4
  assign as4$D_IN = as3 ;
  assign as4$EN = 1'd1 ;

  // register as5
  assign as5$D_IN = as4 ;
  assign as5$EN = 1'd1 ;

  // register as6
  assign as6$D_IN = as5 ;
  assign as6$EN = 1'd1 ;

  // register as7
  assign as7$D_IN = as6 ;
  assign as7$EN = 1'd1 ;

  // register as8
  assign as8$D_IN = as7 ;
  assign as8$EN = 1'd1 ;

  // register as9
  assign as9$D_IN = as8 ;
  assign as9$EN = 1'd1 ;

  // register bs1
  assign bs1$D_IN = rg_bf ;
  assign bs1$EN = 1'd1 ;

  // register bs10
  assign bs10$D_IN = bs9 ;
  assign bs10$EN = 1'd1 ;

  // register bs11
  assign bs11$D_IN = 16'h0 ;
  assign bs11$EN = 1'b0 ;

  // register bs12
  assign bs12$D_IN = 16'h0 ;
  assign bs12$EN = 1'b0 ;

  // register bs2
  assign bs2$D_IN = bs1 ;
  assign bs2$EN = 1'd1 ;

  // register bs3
  assign bs3$D_IN = bs2 ;
  assign bs3$EN = 1'd1 ;

  // register bs4
  assign bs4$D_IN = bs3 ;
  assign bs4$EN = 1'd1 ;

  // register bs5
  assign bs5$D_IN = bs4 ;
  assign bs5$EN = 1'd1 ;

  // register bs6
  assign bs6$D_IN = bs5 ;
  assign bs6$EN = 1'd1 ;

  // register bs7
  assign bs7$D_IN = bs6 ;
  assign bs7$EN = 1'd1 ;

  // register bs8
  assign bs8$D_IN = bs7 ;
  assign bs8$EN = 1'd1 ;

  // register bs9
  assign bs9$D_IN = bs8 ;
  assign bs9$EN = 1'd1 ;

  // register count
  assign count$D_IN = count + 32'd1 ;
  assign count$EN = 1'd1 ;

  // register cs1
  assign cs1$D_IN = rg_cf ;
  assign cs1$EN = 1'd1 ;

  // register cs10
  assign cs10$D_IN = cs9 ;
  assign cs10$EN = 1'd1 ;

  // register cs11
  assign cs11$D_IN = 32'h0 ;
  assign cs11$EN = 1'b0 ;

  // register cs12
  assign cs12$D_IN = 32'h0 ;
  assign cs12$EN = 1'b0 ;

  // register cs2
  assign cs2$D_IN = cs1 ;
  assign cs2$EN = 1'd1 ;

  // register cs3
  assign cs3$D_IN = cs2 ;
  assign cs3$EN = 1'd1 ;

  // register cs4
  assign cs4$D_IN = cs3 ;
  assign cs4$EN = 1'd1 ;

  // register cs5
  assign cs5$D_IN = cs4 ;
  assign cs5$EN = 1'd1 ;

  // register cs6
  assign cs6$D_IN = cs5 ;
  assign cs6$EN = 1'd1 ;

  // register cs7
  assign cs7$D_IN = cs6 ;
  assign cs7$EN = 1'd1 ;

  // register cs8
  assign cs8$D_IN = cs7 ;
  assign cs8$EN = 1'd1 ;

  // register cs9
  assign cs9$D_IN = cs8 ;
  assign cs9$EN = 1'd1 ;

  // register failed_cases
  assign failed_cases$D_IN = failed_cases + 32'd1 ;
  assign failed_cases$EN = mac_result__h29694 != macs1 ;

  // register mac_cyc
  assign mac_cyc$D_IN = 32'd1 ;
  assign mac_cyc$EN = 1'b1 ;

  // register mac_obj_mul_pp00
  assign mac_obj_mul_pp00$D_IN =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d6[0] ;
  assign mac_obj_mul_pp00$EN = 1'd1 ;

  // register mac_obj_mul_pp00_s2
  assign mac_obj_mul_pp00_s2$D_IN = mac_obj_mul_pp00 ;
  assign mac_obj_mul_pp00_s2$EN = 1'd1 ;

  // register mac_obj_mul_pp00_s3
  assign mac_obj_mul_pp00_s3$D_IN = mac_obj_mul_pp00_s2 ;
  assign mac_obj_mul_pp00_s3$EN = 1'd1 ;

  // register mac_obj_mul_pp00_s4
  assign mac_obj_mul_pp00_s4$D_IN = mac_obj_mul_pp00_s3 ;
  assign mac_obj_mul_pp00_s4$EN = 1'd1 ;

  // register mac_obj_mul_pp01
  assign mac_obj_mul_pp01$D_IN =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d6[1] ;
  assign mac_obj_mul_pp01$EN = 1'd1 ;

  // register mac_obj_mul_pp01_s2
  assign mac_obj_mul_pp01_s2$D_IN = mac_obj_mul_pp01 ;
  assign mac_obj_mul_pp01_s2$EN = 1'd1 ;

  // register mac_obj_mul_pp01_s3
  assign mac_obj_mul_pp01_s3$D_IN = mac_obj_mul_pp01_s2 ;
  assign mac_obj_mul_pp01_s3$EN = 1'd1 ;

  // register mac_obj_mul_pp07
  assign mac_obj_mul_pp07$D_IN = ~x__h4374 ;
  assign mac_obj_mul_pp07$EN = 1'd1 ;

  // register mac_obj_mul_pp10
  assign mac_obj_mul_pp10$D_IN =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d10[0] ;
  assign mac_obj_mul_pp10$EN = 1'd1 ;

  // register mac_obj_mul_pp10_s2
  assign mac_obj_mul_pp10_s2$D_IN = mac_obj_mul_pp10 ;
  assign mac_obj_mul_pp10_s2$EN = 1'd1 ;

  // register mac_obj_mul_pp10_s3
  assign mac_obj_mul_pp10_s3$D_IN = mac_obj_mul_pp10_s2 ;
  assign mac_obj_mul_pp10_s3$EN = 1'd1 ;

  // register mac_obj_mul_pp16
  assign mac_obj_mul_pp16$D_IN =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d10[6] ;
  assign mac_obj_mul_pp16$EN = 1'd1 ;

  // register mac_obj_mul_pp21
  assign mac_obj_mul_pp21$D_IN =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33[1] ;
  assign mac_obj_mul_pp21$EN = 1'd1 ;

  // register mac_obj_mul_pp30
  assign mac_obj_mul_pp30$D_IN =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d59[0] ;
  assign mac_obj_mul_pp30$EN = 1'd1 ;

  // register mac_obj_mul_pp35
  assign mac_obj_mul_pp35$D_IN =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d59[5] ;
  assign mac_obj_mul_pp35$EN = 1'd1 ;

  // register mac_obj_mul_pp35_s2
  assign mac_obj_mul_pp35_s2$D_IN = mac_obj_mul_pp35 ;
  assign mac_obj_mul_pp35_s2$EN = 1'd1 ;

  // register mac_obj_mul_pp41
  assign mac_obj_mul_pp41$D_IN =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82[1] ;
  assign mac_obj_mul_pp41$EN = 1'd1 ;

  // register mac_obj_mul_pp50
  assign mac_obj_mul_pp50$D_IN =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108[0] ;
  assign mac_obj_mul_pp50$EN = 1'd1 ;

  // register mac_obj_mul_pp57
  assign mac_obj_mul_pp57$D_IN = ~x__h6855 ;
  assign mac_obj_mul_pp57$EN = 1'd1 ;

  // register mac_obj_mul_pp57_s2
  assign mac_obj_mul_pp57_s2$D_IN = mac_obj_mul_pp57 ;
  assign mac_obj_mul_pp57_s2$EN = 1'd1 ;

  // register mac_obj_mul_pp77
  assign mac_obj_mul_pp77$D_IN = mac_obj_mul_x[7] & mac_obj_mul_y[7] ;
  assign mac_obj_mul_pp77$EN = 1'd1 ;

  // register mac_obj_mul_pp77_s2
  assign mac_obj_mul_pp77_s2$D_IN = mac_obj_mul_pp77 ;
  assign mac_obj_mul_pp77_s2$EN = 1'd1 ;

  // register mac_obj_mul_pp77_s3
  assign mac_obj_mul_pp77_s3$D_IN = mac_obj_mul_pp77_s2 ;
  assign mac_obj_mul_pp77_s3$EN = 1'd1 ;

  // register mac_obj_mul_s11
  assign mac_obj_mul_s11$D_IN = { cout__h4271, sum__h4272 } ;
  assign mac_obj_mul_s11$EN = 1'd1 ;

  // register mac_obj_mul_s11_s2
  assign mac_obj_mul_s11_s2$D_IN = mac_obj_mul_s11 ;
  assign mac_obj_mul_s11_s2$EN = 1'd1 ;

  // register mac_obj_mul_s11_s3
  assign mac_obj_mul_s11_s3$D_IN = mac_obj_mul_s11_s2 ;
  assign mac_obj_mul_s11_s3$EN = 1'd1 ;

  // register mac_obj_mul_s12
  assign mac_obj_mul_s12$D_IN = { cout__h5574, sum__h5575 } ;
  assign mac_obj_mul_s12$EN = 1'd1 ;

  // register mac_obj_mul_s13
  assign mac_obj_mul_s13$D_IN = { cout__h6747, sum__h6748 } ;
  assign mac_obj_mul_s13$EN = 1'd1 ;

  // register mac_obj_mul_s14
  assign mac_obj_mul_s14$D_IN = { cout__h7920, sum__h7921 } ;
  assign mac_obj_mul_s14$EN = 1'd1 ;

  // register mac_obj_mul_s15
  assign mac_obj_mul_s15$D_IN = { cout__h8979, sum__h8980 } ;
  assign mac_obj_mul_s15$EN = 1'd1 ;

  // register mac_obj_mul_s15_s2
  assign mac_obj_mul_s15_s2$D_IN = mac_obj_mul_s15 ;
  assign mac_obj_mul_s15_s2$EN = 1'd1 ;

  // register mac_obj_mul_s16
  assign mac_obj_mul_s16$D_IN = { cout__h10008, sum__h10009 } ;
  assign mac_obj_mul_s16$EN = 1'd1 ;

  // register mac_obj_mul_s16_s2
  assign mac_obj_mul_s16_s2$D_IN = mac_obj_mul_s16 ;
  assign mac_obj_mul_s16_s2$EN = 1'd1 ;

  // register mac_obj_mul_s16_s3
  assign mac_obj_mul_s16_s3$D_IN = mac_obj_mul_s16_s2 ;
  assign mac_obj_mul_s16_s3$EN = 1'd1 ;

  // register mac_obj_mul_s21
  assign mac_obj_mul_s21$D_IN = { cout__h11560, sum__h11561 } ;
  assign mac_obj_mul_s21$EN = 1'd1 ;

  // register mac_obj_mul_s21_s3
  assign mac_obj_mul_s21_s3$D_IN = mac_obj_mul_s21 ;
  assign mac_obj_mul_s21_s3$EN = 1'd1 ;

  // register mac_obj_mul_s22
  assign mac_obj_mul_s22$D_IN = { cout__h12493, sum__h12494 } ;
  assign mac_obj_mul_s22$EN = 1'd1 ;

  // register mac_obj_mul_s22_s3
  assign mac_obj_mul_s22_s3$D_IN = mac_obj_mul_s22 ;
  assign mac_obj_mul_s22_s3$EN = 1'd1 ;

  // register mac_obj_mul_s23
  assign mac_obj_mul_s23$D_IN = { cout__h13402, sum__h13403 } ;
  assign mac_obj_mul_s23$EN = 1'd1 ;

  // register mac_obj_mul_s23_s3
  assign mac_obj_mul_s23_s3$D_IN = mac_obj_mul_s23 ;
  assign mac_obj_mul_s23_s3$EN = 1'd1 ;

  // register mac_obj_mul_s31
  assign mac_obj_mul_s31$D_IN =
	     { mac_obj_mul_s21[4] & mac_obj_mul_s22[2],
	       mac_obj_mul_s21[4] ^ mac_obj_mul_s22[2] } ;
  assign mac_obj_mul_s31$EN = 1'd1 ;

  // register mac_obj_mul_s32
  assign mac_obj_mul_s32$D_IN =
	     { x__h14938 | y__h14939, x__h14880 ^ mac_obj_mul_s23[1] } ;
  assign mac_obj_mul_s32$EN = 1'd1 ;

  // register mac_obj_mul_s33
  assign mac_obj_mul_s33$D_IN =
	     { x__h15144 | y__h15145, x__h15065 ^ mac_obj_mul_s23[2] } ;
  assign mac_obj_mul_s33$EN = 1'd1 ;

  // register mac_obj_mul_s34
  assign mac_obj_mul_s34$D_IN =
	     { x__h15350 | y__h15351, x__h15271 ^ mac_obj_mul_s23[3] } ;
  assign mac_obj_mul_s34$EN = 1'd1 ;

  // register mac_obj_mul_s35
  assign mac_obj_mul_s35$D_IN =
	     { x__h15555 | y__h15556, x__h15477 ^ mac_obj_mul_s23[4] } ;
  assign mac_obj_mul_s35$EN = 1'd1 ;

  // register mac_obj_mul_s36
  assign mac_obj_mul_s36$D_IN =
	     { x__h15739 | y__h15740, x__h15682 ^ mac_obj_mul_pp57_s2 } ;
  assign mac_obj_mul_s36$EN = 1'd1 ;

  // register mac_obj_mul_s41
  assign mac_obj_mul_s41$D_IN = { y__h16099, sum__h16083 } ;
  assign mac_obj_mul_s41$EN = 1'd1 ;

  // register mac_obj_mul_s42
  assign mac_obj_mul_s42$D_IN = { cout__h16988, sum__h16989 } ;
  assign mac_obj_mul_s42$EN = 1'd1 ;

  // register mac_obj_mul_s43
  assign mac_obj_mul_s43$D_IN = { cout__h18012, sum__h18013 } ;
  assign mac_obj_mul_s43$EN = 1'd1 ;

  // register mac_obj_mul_s44
  assign mac_obj_mul_s44$D_IN = { 1'd0, sum__h19081 } ;
  assign mac_obj_mul_s44$EN = 1'd1 ;

  // register mac_obj_mul_x
  assign mac_obj_mul_x$D_IN = obj_inp$out_a ;
  assign mac_obj_mul_x$EN = 1'd1 ;

  // register mac_obj_mul_y
  assign mac_obj_mul_y$D_IN = obj_inp$out_b ;
  assign mac_obj_mul_y$EN = 1'd1 ;

  // register mac_obj_mul_z
  assign mac_obj_mul_z$D_IN =
	     { mac_obj_mul_s44[2:0],
	       mac_obj_mul_s43[3:0],
	       mac_obj_mul_s42[3:0],
	       mac_obj_mul_s41[3:0],
	       mac_obj_mul_pp00_s4 } ;
  assign mac_obj_mul_z$EN = 1'd1 ;

  // register mac_out
  assign mac_out$D_IN =
	     { sum__h20556,
	       sum__h21034,
	       sum__h21510,
	       sum__h21986,
	       sum__h22461,
	       sum__h22870,
	       sum__h23279,
	       sum__h23687 } ;
  assign mac_out$EN = mac_cyc == 32'd7 ;

  // register mac_p1
  assign mac_p1$D_IN = mac_obj_mul_z ;
  assign mac_p1$EN = mac_cyc == 32'd6 ;

  // register mac_rg_a
  assign mac_rg_a$D_IN = obj_inp$out_a ;
  assign mac_rg_a$EN = 1'd1 ;

  // register mac_rg_b
  assign mac_rg_b$D_IN = obj_inp$out_b ;
  assign mac_rg_b$EN = 1'd1 ;

  // register mac_rg_c
  assign mac_rg_c$D_IN = obj_inp$out_c ;
  assign mac_rg_c$EN = 1'd1 ;

  // register macs1
  assign macs1$D_IN = rg_macf ;
  assign macs1$EN = 1'd1 ;

  // register macs10
  assign macs10$D_IN = macs9 ;
  assign macs10$EN = 1'd1 ;

  // register macs11
  assign macs11$D_IN = 32'h0 ;
  assign macs11$EN = 1'b0 ;

  // register macs12
  assign macs12$D_IN = 32'h0 ;
  assign macs12$EN = 1'b0 ;

  // register macs2
  assign macs2$D_IN = macs1 ;
  assign macs2$EN = 1'd1 ;

  // register macs3
  assign macs3$D_IN = macs2 ;
  assign macs3$EN = 1'd1 ;

  // register macs4
  assign macs4$D_IN = macs3 ;
  assign macs4$EN = 1'd1 ;

  // register macs5
  assign macs5$D_IN = macs4 ;
  assign macs5$EN = 1'd1 ;

  // register macs6
  assign macs6$D_IN = macs5 ;
  assign macs6$EN = 1'd1 ;

  // register macs7
  assign macs7$D_IN = macs6 ;
  assign macs7$EN = 1'd1 ;

  // register macs8
  assign macs8$D_IN = macs7 ;
  assign macs8$EN = 1'd1 ;

  // register macs9
  assign macs9$D_IN = macs8 ;
  assign macs9$EN = 1'd1 ;

  // register rg_a
  assign rg_a$D_IN = 16'h0 ;
  assign rg_a$EN = 1'b0 ;

  // register rg_af
  assign rg_af$D_IN = { 8'd0, obj_inp$out_a } ;
  assign rg_af$EN = 1'd1 ;

  // register rg_b
  assign rg_b$D_IN = 16'h0 ;
  assign rg_b$EN = 1'b0 ;

  // register rg_bf
  assign rg_bf$D_IN = { 8'd0, obj_inp$out_b } ;
  assign rg_bf$EN = 1'd1 ;

  // register rg_c
  assign rg_c$D_IN = 32'h0 ;
  assign rg_c$EN = 1'b0 ;

  // register rg_cf
  assign rg_cf$D_IN = obj_inp$out_c ;
  assign rg_cf$EN = 1'd1 ;

  // register rg_mac
  assign rg_mac$D_IN = 32'h0 ;
  assign rg_mac$EN = 1'b0 ;

  // register rg_macf
  assign rg_macf$D_IN = obj_inp$out_mac ;
  assign rg_macf$EN = 1'd1 ;

  // register rg_r
  assign rg_r$D_IN = 1'b0 ;
  assign rg_r$EN = 1'b0 ;

  // submodule obj_inp
  assign obj_inp$read = 1'b1 ;
  assign obj_inp$EN = 1'd1 ;

  // remaining internal signals
  assign INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247 =
	     rg_a__h9994 & INV_x099__q1[6:3] ;
  assign INV_x099__q1 = ~x__h8099 ;
  assign carrrg_b__h10007 =
	     { x__h10519 | y__h10520,
	       x__h10736 | y__h10737,
	       INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247[0] |
	       y__h10862,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108[5] } ;
  assign carrrg_b__h11559 =
	     { x__h12058 | y__h12059,
	       x__h12275 | y__h12276,
	       mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308[0] |
	       y__h12401,
	       mac_obj_mul_pp30 } ;
  assign carrrg_b__h12492 =
	     { x__h12983 | y__h12984,
	       mac_obj_mul_s13_49_BITS_2_TO_0_50_AND_mac_obj__ETC___d353[0] |
	       y__h13192,
	       y__h12719,
	       1'b0 } ;
  assign carrrg_b__h13401 =
	     { x__h13936 | y__h13937,
	       x__h14144 | y__h14145,
	       mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d401[0] |
	       y__h14265,
	       mac_obj_mul_pp16 } ;
  assign carrrg_b__h16081 = { y__h16572, y__h16780, y__h16307, 1'b0 } ;
  assign carrrg_b__h19079 =
	     { mac_obj_mul_pp77_s3_33_AND_mac_obj_mul_s16_s3__ETC___d649,
	       mac_obj_mul_pp77_s3_33_AND_mac_obj_mul_s16_s3__ETC___d649,
	       y__h19327 | y__h19941,
	       mac_obj_mul_s43[4] } ;
  assign carrrg_b__h4270 =
	     { x__h5139 | y__h5140,
	       x__h5356 | y__h5357,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12[0] |
	       y__h5482,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33[0] } ;
  assign carrrg_b__h5573 =
	     { x__h6310 | y__h6311,
	       x__h6527 | y__h6528,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61[0] |
	       y__h6653,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82[0] } ;
  assign carrrg_b__h6746 =
	     { x__h7483 | y__h7484,
	       x__h7700 | y__h7701,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110[0] |
	       y__h7826,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d131[0] } ;
  assign carrrg_b__h7919 =
	     { x__h8560 | y__h8561,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d160[0] |
	       y__h8769,
	       y__h8295,
	       1'b0 } ;
  assign cout__h10008 = x__h10022 | y__h10023 ;
  assign cout__h11560 = x__h11574 | y__h11575 ;
  assign cout__h12493 = x__h12509 | y__h12510 ;
  assign cout__h13402 = x__h13416 | y__h13417 ;
  assign cout__h16988 = x__h17002 | y__h17003 ;
  assign cout__h18012 = x__h18026 | y__h18027 ;
  assign cout__h4271 = x__h4287 | y__h4288 ;
  assign cout__h5574 = x__h5588 | y__h5589 ;
  assign cout__h6747 = x__h6761 | y__h6762 ;
  assign cout__h7920 = x__h7936 | y__h7937 ;
  assign cout__h8979 = x__h8993 | y__h8994 ;
  assign mac_obj_mul_pp77_s3_33_AND_mac_obj_mul_s16_s3__ETC___d649 =
	     x__h19612 | y__h19821 ;
  assign mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308 =
	     mac_obj_mul_s11[4:1] & rg_b__h11547 ;
  assign mac_obj_mul_s13_49_BITS_2_TO_0_50_AND_mac_obj__ETC___d353 =
	     mac_obj_mul_s13[2:0] & mac_obj_mul_s14[2:0] ;
  assign mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355 =
	     mac_obj_mul_s13[2:0] ^ mac_obj_mul_s14[2:0] ;
  assign mac_obj_mul_s13_49_BITS_4_TO_3_85_AND_mac_obj__ETC___d387 =
	     mac_obj_mul_s13[4:3] & mac_obj_mul_s14[4:3] ;
  assign mac_obj_mul_s13_49_BITS_4_TO_3_85_XOR_mac_obj__ETC___d389 =
	     mac_obj_mul_s13[4:3] ^ mac_obj_mul_s14[4:3] ;
  assign mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d401 =
	     { mac_obj_mul_s15[0], mac_obj_mul_pp07 } & mac_obj_mul_s12[4:3] ;
  assign mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405 =
	     { mac_obj_mul_s15[0], mac_obj_mul_pp07 } ^ mac_obj_mul_s12[4:3] ;
  assign mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_AND_mac_o_ETC___d541 =
	     mac_obj_mul_s21_s3[3:2] & mac_obj_mul_s22_s3[1:0] ;
  assign mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545 =
	     mac_obj_mul_s21_s3[3:2] ^ mac_obj_mul_s22_s3[1:0] ;
  assign mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d575 =
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545 ^
	     { mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_AND_mac_o_ETC___d541[0] |
	       y__h17918,
	       mac_obj_mul_s41[4] } ;
  assign mac_obj_mul_s34_85_BIT_0_92_XOR_mac_obj_mul_s3_ETC___d630 =
	     { y__h18374 ^ (y__h18372 | y__h18986),
	       y__h18459 ^ mac_obj_mul_s42[4] } ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d10 =
	     mac_obj_mul_x[6:0] & y__h4561 ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108 =
	     mac_obj_mul_x[6:0] & y__h6906 ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82[5:2] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108[4:1] ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d6[5:2] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d10[4:1] ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d131 =
	     mac_obj_mul_x[6:0] & y__h7343 ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d160 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d131[3:1] &
	     INV_x099__q1[2:0] ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d131[3:1] ^
	     INV_x099__q1[2:0] ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33 =
	     mac_obj_mul_x[6:0] & y__h4999 ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d59 =
	     mac_obj_mul_x[6:0] & y__h5733 ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d6 =
	     mac_obj_mul_x[6:0] & y__h4427 ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33[5:2] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d59[4:1] ;
  assign mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82 =
	     mac_obj_mul_x[6:0] & y__h6170 ;
  assign mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777 =
	     mac_p1[11:8] & mac_rg_c[11:8] ;
  assign mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d839 =
	     x__h22883 | y__h22884 ;
  assign mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756 =
	     mac_p1[15:12] & mac_rg_c[15:12] ;
  assign mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d841 =
	     x__h22474 | y__h22475 ;
  assign mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819 =
	     mac_p1[3:0] & mac_rg_c[3:0] ;
  assign mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d835 =
	     x__h23702 | y__h23703 ;
  assign mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798 =
	     mac_p1[7:4] & mac_rg_c[7:4] ;
  assign mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d837 =
	     x__h23292 | y__h23293 ;
  assign mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d681 =
	     rg_a__h21975 & mac_rg_c[31:28] ;
  assign mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695 =
	     rg_a__h21975 & mac_rg_c[27:24] ;
  assign mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715 =
	     rg_a__h21975 & mac_rg_c[23:20] ;
  assign mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735 =
	     rg_a__h21975 & mac_rg_c[19:16] ;
  assign mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d843 =
	     x__h21999 | y__h22000 ;
  assign mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d845 =
	     x__h21523 | y__h21524 ;
  assign mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d847 =
	     x__h21047 | y__h21048 ;
  assign mac_result__h29694 = (mac_cyc == 32'd0) ? mac_out : 32'd0 ;
  assign p__h10003 = rg_a__h9994 ^ INV_x099__q1[6:3] ;
  assign p__h11555 = mac_obj_mul_s11[4:1] ^ rg_b__h11547 ;
  assign p__h12488 =
	     { mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355,
	       mac_obj_mul_pp41 ^ mac_obj_mul_pp50 } ;
  assign p__h13397 =
	     { mac_obj_mul_s13_49_BITS_4_TO_3_85_XOR_mac_obj__ETC___d389,
	       mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405 } ;
  assign p__h16077 =
	     { mac_obj_mul_s21_s3[1:0],
	       mac_obj_mul_s11_s3[0],
	       mac_obj_mul_pp01_s3 ^ mac_obj_mul_pp10_s3 } ;
  assign p__h19075 = { 2'd1, x__h19681, y__h19414 } ;
  assign p__h20554 = rg_a__h21975 ^ mac_rg_c[31:28] ;
  assign p__h21032 = rg_a__h21975 ^ mac_rg_c[27:24] ;
  assign p__h21508 = rg_a__h21975 ^ mac_rg_c[23:20] ;
  assign p__h21984 = rg_a__h21975 ^ mac_rg_c[19:16] ;
  assign p__h22459 = mac_p1[15:12] ^ mac_rg_c[15:12] ;
  assign p__h22868 = mac_p1[11:8] ^ mac_rg_c[11:8] ;
  assign p__h23277 = mac_p1[7:4] ^ mac_rg_c[7:4] ;
  assign p__h23685 = mac_p1[3:0] ^ mac_rg_c[3:0] ;
  assign p__h4266 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d6[5:2] ^
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d10[4:1] ;
  assign p__h5569 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33[5:2] ^
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d59[4:1] ;
  assign p__h6742 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82[5:2] ^
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108[4:1] ;
  assign p__h7915 =
	     { mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d6[6] ^
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d10[5] } ;
  assign rg_a__h21975 = {4{mac_p1[15]}} ;
  assign rg_a__h9994 =
	     { ~x__h7292,
	       mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d131[6:4] } ;
  assign rg_b__h11547 = { mac_obj_mul_s12[2:0], mac_obj_mul_pp21 } ;
  assign sum__h10009 = p__h10003 ^ carrrg_b__h10007 ;
  assign sum__h11561 = p__h11555 ^ carrrg_b__h11559 ;
  assign sum__h12494 = p__h12488 ^ carrrg_b__h12492 ;
  assign sum__h13403 = p__h13397 ^ carrrg_b__h13401 ;
  assign sum__h16083 = p__h16077 ^ carrrg_b__h16081 ;
  assign sum__h16989 =
	     { x__h17184 ^ (x__h17589 | y__h17590),
	       y__h17242 ^ (x__h17797 | y__h17798),
	       mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d575 } ;
  assign sum__h18013 =
	     { x__h18252 ^ (x__h18657 | y__h18658),
	       y__h18310 ^ (x__h18865 | y__h18866),
	       mac_obj_mul_s34_85_BIT_0_92_XOR_mac_obj_mul_s3_ETC___d630 } ;
  assign sum__h19081 = p__h19075 ^ carrrg_b__h19079 ;
  assign sum__h20556 = p__h20554 ^ y__h27329 ;
  assign sum__h21034 = p__h21032 ^ y__h26863 ;
  assign sum__h21510 = p__h21508 ^ y__h26397 ;
  assign sum__h21986 = p__h21984 ^ y__h25931 ;
  assign sum__h22461 = p__h22459 ^ y__h25465 ;
  assign sum__h22870 = p__h22868 ^ y__h24999 ;
  assign sum__h23279 = p__h23277 ^ y__h24533 ;
  assign sum__h23687 = p__h23685 ^ y__h24067 ;
  assign sum__h4272 = p__h4266 ^ carrrg_b__h4270 ;
  assign sum__h5575 = p__h5569 ^ carrrg_b__h5573 ;
  assign sum__h6748 = p__h6742 ^ carrrg_b__h6746 ;
  assign sum__h7921 = p__h7915 ^ carrrg_b__h7919 ;
  assign sum__h8980 =
	     { x__h9203 ^ (x__h9585 | y__h9586),
	       y__h9261 ^ (x__h9793 | y__h9794),
	       y__h9325 ^ (y__h9323 | y__h9410),
	       ~y__h9410 } ;
  assign x__h10022 = x__h10024 | y__h10025 ;
  assign x__h10024 = x__h10026 | y__h10027 ;
  assign x__h10026 =
	     INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247[3] |
	     y__h10029 ;
  assign x__h10161 = p__h10003[3] & p__h10003[2] ;
  assign x__h10228 = x__h10161 & p__h10003[1] ;
  assign x__h10318 = x__h10228 & p__h10003[0] ;
  assign x__h10519 = x__h10521 | y__h10522 ;
  assign x__h10521 =
	     INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247[2] |
	     y__h10524 ;
  assign x__h10591 = p__h10003[2] & p__h10003[1] ;
  assign x__h10658 = x__h10591 & p__h10003[0] ;
  assign x__h10736 =
	     INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247[1] |
	     y__h10739 ;
  assign x__h10806 = p__h10003[1] & p__h10003[0] ;
  assign x__h11574 = x__h11576 | y__h11577 ;
  assign x__h11576 = x__h11578 | y__h11579 ;
  assign x__h11578 =
	     mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308[3] |
	     y__h11581 ;
  assign x__h11719 = p__h11555[3] & p__h11555[2] ;
  assign x__h11786 = x__h11719 & p__h11555[1] ;
  assign x__h11876 = x__h11786 & p__h11555[0] ;
  assign x__h12058 = x__h12060 | y__h12061 ;
  assign x__h12060 =
	     mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308[2] |
	     y__h12063 ;
  assign x__h12130 = p__h11555[2] & p__h11555[1] ;
  assign x__h12197 = x__h12130 & p__h11555[0] ;
  assign x__h12275 =
	     mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308[1] |
	     y__h12278 ;
  assign x__h12345 = p__h11555[1] & p__h11555[0] ;
  assign x__h12509 = x__h12511 | y__h12512 ;
  assign x__h12511 =
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_AND_mac_obj__ETC___d353[2] |
	     y__h12514 ;
  assign x__h12654 =
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355[2] &
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355[1] ;
  assign x__h12718 =
	     x__h12654 &
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355[0] ;
  assign x__h12983 =
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_AND_mac_obj__ETC___d353[1] |
	     y__h12986 ;
  assign x__h13050 =
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355[1] &
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355[0] ;
  assign x__h13416 = x__h13418 | y__h13419 ;
  assign x__h13418 = x__h13420 | y__h13421 ;
  assign x__h13420 =
	     mac_obj_mul_s13_49_BITS_4_TO_3_85_AND_mac_obj__ETC___d387[1] |
	     y__h13423 ;
  assign x__h13608 =
	     mac_obj_mul_s13_49_BITS_4_TO_3_85_XOR_mac_obj__ETC___d389[1] &
	     mac_obj_mul_s13_49_BITS_4_TO_3_85_XOR_mac_obj__ETC___d389[0] ;
  assign x__h13672 =
	     x__h13608 &
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405[1] ;
  assign x__h13758 =
	     x__h13672 &
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405[0] ;
  assign x__h13936 = x__h13938 | y__h13939 ;
  assign x__h13938 =
	     mac_obj_mul_s13_49_BITS_4_TO_3_85_AND_mac_obj__ETC___d387[0] |
	     y__h13941 ;
  assign x__h14005 =
	     mac_obj_mul_s13_49_BITS_4_TO_3_85_XOR_mac_obj__ETC___d389[0] &
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405[1] ;
  assign x__h14069 =
	     x__h14005 &
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405[0] ;
  assign x__h14144 =
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d401[1] |
	     y__h14147 ;
  assign x__h14211 =
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405[1] &
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405[0] ;
  assign x__h14880 = mac_obj_mul_pp35_s2 ^ mac_obj_mul_s22[3] ;
  assign x__h14938 = mac_obj_mul_pp35_s2 & mac_obj_mul_s22[3] ;
  assign x__h15065 = mac_obj_mul_s15_s2[1] ^ mac_obj_mul_s22[4] ;
  assign x__h15144 = mac_obj_mul_s15_s2[1] & mac_obj_mul_s22[4] ;
  assign x__h15271 = mac_obj_mul_s15_s2[2] ^ mac_obj_mul_s16_s2[0] ;
  assign x__h15350 = mac_obj_mul_s15_s2[2] & mac_obj_mul_s16_s2[0] ;
  assign x__h15477 = mac_obj_mul_s15_s2[3] ^ mac_obj_mul_s16_s2[1] ;
  assign x__h15555 = mac_obj_mul_s15_s2[3] & mac_obj_mul_s16_s2[1] ;
  assign x__h15682 = mac_obj_mul_s15_s2[4] ^ mac_obj_mul_s16_s2[2] ;
  assign x__h15739 = mac_obj_mul_s15_s2[4] & mac_obj_mul_s16_s2[2] ;
  assign x__h16242 = mac_obj_mul_s21_s3[1] & mac_obj_mul_s21_s3[0] ;
  assign x__h16306 = x__h16242 & mac_obj_mul_s11_s3[0] ;
  assign x__h16638 = mac_obj_mul_s21_s3[0] & mac_obj_mul_s11_s3[0] ;
  assign x__h17002 = x__h17004 | y__h17005 ;
  assign x__h17004 = x__h17006 | y__h17007 ;
  assign x__h17006 = x__h17008 | y__h17009 ;
  assign x__h17008 = mac_obj_mul_s32[0] & mac_obj_mul_s31[1] ;
  assign x__h17184 = mac_obj_mul_s32[0] ^ mac_obj_mul_s31[1] ;
  assign x__h17239 = x__h17184 & y__h17242 ;
  assign x__h17303 =
	     x__h17239 &
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545[1] ;
  assign x__h17389 =
	     x__h17303 &
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545[0] ;
  assign x__h17589 = x__h17591 | y__h17592 ;
  assign x__h17591 = y__h17185 | y__h17594 ;
  assign x__h17658 =
	     y__h17242 &
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545[1] ;
  assign x__h17722 =
	     x__h17658 &
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545[0] ;
  assign x__h17797 =
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_AND_mac_o_ETC___d541[1] |
	     y__h17800 ;
  assign x__h17864 =
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545[1] &
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545[0] ;
  assign x__h18026 = x__h18028 | y__h18029 ;
  assign x__h18028 = x__h18030 | y__h18031 ;
  assign x__h18030 = x__h18032 | y__h18033 ;
  assign x__h18032 = mac_obj_mul_s36[0] & mac_obj_mul_s35[1] ;
  assign x__h18252 = mac_obj_mul_s36[0] ^ mac_obj_mul_s35[1] ;
  assign x__h18307 = x__h18252 & y__h18310 ;
  assign x__h18371 = x__h18307 & y__h18374 ;
  assign x__h18457 = x__h18371 & y__h18459 ;
  assign x__h18657 = x__h18659 | y__h18660 ;
  assign x__h18659 = y__h18253 | y__h18662 ;
  assign x__h18726 = y__h18310 & y__h18374 ;
  assign x__h18790 = x__h18726 & y__h18459 ;
  assign x__h18865 = y__h18308 | y__h18868 ;
  assign x__h18932 = y__h18374 & y__h18459 ;
  assign x__h19612 = x__h19614 | y__h19615 ;
  assign x__h19614 = mac_obj_mul_pp77_s3 & mac_obj_mul_s16_s3[4] ;
  assign x__h19681 = mac_obj_mul_pp77_s3 ^ mac_obj_mul_s16_s3[4] ;
  assign x__h19745 = x__h19681 & y__h19414 ;
  assign x__h21047 = x__h21049 | y__h21050 ;
  assign x__h21049 = x__h21051 | y__h21052 ;
  assign x__h21051 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695[3] |
	     y__h21054 ;
  assign x__h21231 = p__h21032[3] & p__h21032[2] ;
  assign x__h21298 = x__h21231 & p__h21032[1] ;
  assign x__h21388 = x__h21298 & p__h21032[0] ;
  assign x__h21523 = x__h21525 | y__h21526 ;
  assign x__h21525 = x__h21527 | y__h21528 ;
  assign x__h21527 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715[3] |
	     y__h21530 ;
  assign x__h21707 = p__h21508[3] & p__h21508[2] ;
  assign x__h21774 = x__h21707 & p__h21508[1] ;
  assign x__h21864 = x__h21774 & p__h21508[0] ;
  assign x__h21999 = x__h22001 | y__h22002 ;
  assign x__h22001 = x__h22003 | y__h22004 ;
  assign x__h22003 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735[3] |
	     y__h22006 ;
  assign x__h22183 = p__h21984[3] & p__h21984[2] ;
  assign x__h22250 = x__h22183 & p__h21984[1] ;
  assign x__h22340 = x__h22250 & p__h21984[0] ;
  assign x__h22474 = x__h22476 | y__h22477 ;
  assign x__h22476 = x__h22478 | y__h22479 ;
  assign x__h22478 =
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756[3] |
	     y__h22481 ;
  assign x__h22592 = p__h22459[3] & p__h22459[2] ;
  assign x__h22659 = x__h22592 & p__h22459[1] ;
  assign x__h22749 = x__h22659 & p__h22459[0] ;
  assign x__h22883 = x__h22885 | y__h22886 ;
  assign x__h22885 = x__h22887 | y__h22888 ;
  assign x__h22887 =
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777[3] |
	     y__h22890 ;
  assign x__h23001 = p__h22868[3] & p__h22868[2] ;
  assign x__h23068 = x__h23001 & p__h22868[1] ;
  assign x__h23158 = x__h23068 & p__h22868[0] ;
  assign x__h23292 = x__h23294 | y__h23295 ;
  assign x__h23294 = x__h23296 | y__h23297 ;
  assign x__h23296 =
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798[3] |
	     y__h23299 ;
  assign x__h23410 = p__h23277[3] & p__h23277[2] ;
  assign x__h23477 = x__h23410 & p__h23277[1] ;
  assign x__h23567 = x__h23477 & p__h23277[0] ;
  assign x__h23702 = x__h23704 | y__h23705 ;
  assign x__h23704 =
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819[3] |
	     y__h23707 ;
  assign x__h23818 = p__h23685[3] & p__h23685[2] ;
  assign x__h23885 = x__h23818 & p__h23685[1] ;
  assign x__h24144 =
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819[2] |
	     y__h24147 ;
  assign x__h24214 = p__h23685[2] & p__h23685[1] ;
  assign x__h24608 = x__h24610 | y__h24611 ;
  assign x__h24610 =
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798[2] |
	     y__h24613 ;
  assign x__h24680 = p__h23277[2] & p__h23277[1] ;
  assign x__h24747 = x__h24680 & p__h23277[0] ;
  assign x__h24825 =
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798[1] |
	     y__h24828 ;
  assign x__h24895 = p__h23277[1] & p__h23277[0] ;
  assign x__h25074 = x__h25076 | y__h25077 ;
  assign x__h25076 =
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777[2] |
	     y__h25079 ;
  assign x__h25146 = p__h22868[2] & p__h22868[1] ;
  assign x__h25213 = x__h25146 & p__h22868[0] ;
  assign x__h25291 =
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777[1] |
	     y__h25294 ;
  assign x__h25361 = p__h22868[1] & p__h22868[0] ;
  assign x__h25540 = x__h25542 | y__h25543 ;
  assign x__h25542 =
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756[2] |
	     y__h25545 ;
  assign x__h25612 = p__h22459[2] & p__h22459[1] ;
  assign x__h25679 = x__h25612 & p__h22459[0] ;
  assign x__h25757 =
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756[1] |
	     y__h25760 ;
  assign x__h25827 = p__h22459[1] & p__h22459[0] ;
  assign x__h26006 = x__h26008 | y__h26009 ;
  assign x__h26008 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735[2] |
	     y__h26011 ;
  assign x__h26078 = p__h21984[2] & p__h21984[1] ;
  assign x__h26145 = x__h26078 & p__h21984[0] ;
  assign x__h26223 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735[1] |
	     y__h26226 ;
  assign x__h26293 = p__h21984[1] & p__h21984[0] ;
  assign x__h26472 = x__h26474 | y__h26475 ;
  assign x__h26474 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715[2] |
	     y__h26477 ;
  assign x__h26544 = p__h21508[2] & p__h21508[1] ;
  assign x__h26611 = x__h26544 & p__h21508[0] ;
  assign x__h26689 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715[1] |
	     y__h26692 ;
  assign x__h26759 = p__h21508[1] & p__h21508[0] ;
  assign x__h26938 = x__h26940 | y__h26941 ;
  assign x__h26940 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695[2] |
	     y__h26943 ;
  assign x__h27010 = p__h21032[2] & p__h21032[1] ;
  assign x__h27077 = x__h27010 & p__h21032[0] ;
  assign x__h27155 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695[1] |
	     y__h27158 ;
  assign x__h27225 = p__h21032[1] & p__h21032[0] ;
  assign x__h27404 = x__h27406 | y__h27407 ;
  assign x__h27406 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d681[2] |
	     y__h27409 ;
  assign x__h27476 = p__h20554[2] & p__h20554[1] ;
  assign x__h27543 = x__h27476 & p__h20554[0] ;
  assign x__h27621 =
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d681[1] |
	     y__h27624 ;
  assign x__h27691 = p__h20554[1] & p__h20554[0] ;
  assign x__h4287 = x__h4289 | y__h4290 ;
  assign x__h4289 = x__h4291 | y__h4292 ;
  assign x__h4291 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12[3] |
	     y__h4294 ;
  assign x__h4374 = mac_obj_mul_x[7] & mac_obj_mul_y[0] ;
  assign x__h4510 = mac_obj_mul_x[7] & mac_obj_mul_y[1] ;
  assign x__h4667 = p__h4266[3] & p__h4266[2] ;
  assign x__h4734 = x__h4667 & p__h4266[1] ;
  assign x__h4824 = x__h4734 & p__h4266[0] ;
  assign x__h4948 = mac_obj_mul_x[7] & mac_obj_mul_y[2] ;
  assign x__h5139 = x__h5141 | y__h5142 ;
  assign x__h5141 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12[2] |
	     y__h5144 ;
  assign x__h5211 = p__h4266[2] & p__h4266[1] ;
  assign x__h5278 = x__h5211 & p__h4266[0] ;
  assign x__h5356 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12[1] |
	     y__h5359 ;
  assign x__h5426 = p__h4266[1] & p__h4266[0] ;
  assign x__h5588 = x__h5590 | y__h5591 ;
  assign x__h5590 = x__h5592 | y__h5593 ;
  assign x__h5592 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61[3] |
	     y__h5595 ;
  assign x__h5682 = mac_obj_mul_x[7] & mac_obj_mul_y[3] ;
  assign x__h5839 = p__h5569[3] & p__h5569[2] ;
  assign x__h5906 = x__h5839 & p__h5569[1] ;
  assign x__h5996 = x__h5906 & p__h5569[0] ;
  assign x__h6119 = mac_obj_mul_x[7] & mac_obj_mul_y[4] ;
  assign x__h6310 = x__h6312 | y__h6313 ;
  assign x__h6312 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61[2] |
	     y__h6315 ;
  assign x__h6382 = p__h5569[2] & p__h5569[1] ;
  assign x__h6449 = x__h6382 & p__h5569[0] ;
  assign x__h6527 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61[1] |
	     y__h6530 ;
  assign x__h6597 = p__h5569[1] & p__h5569[0] ;
  assign x__h6761 = x__h6763 | y__h6764 ;
  assign x__h6763 = x__h6765 | y__h6766 ;
  assign x__h6765 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110[3] |
	     y__h6768 ;
  assign x__h6855 = mac_obj_mul_x[7] & mac_obj_mul_y[5] ;
  assign x__h7012 = p__h6742[3] & p__h6742[2] ;
  assign x__h7079 = x__h7012 & p__h6742[1] ;
  assign x__h7169 = x__h7079 & p__h6742[0] ;
  assign x__h7292 = mac_obj_mul_x[7] & mac_obj_mul_y[6] ;
  assign x__h7483 = x__h7485 | y__h7486 ;
  assign x__h7485 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110[2] |
	     y__h7488 ;
  assign x__h7555 = p__h6742[2] & p__h6742[1] ;
  assign x__h7622 = x__h7555 & p__h6742[0] ;
  assign x__h7700 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110[1] |
	     y__h7703 ;
  assign x__h7770 = p__h6742[1] & p__h6742[0] ;
  assign x__h7936 = x__h7938 | y__h7939 ;
  assign x__h7938 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d160[2] |
	     y__h7941 ;
  assign x__h8099 = mac_obj_mul_x[6:0] & y__h8101 ;
  assign x__h8230 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162[2] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162[1] ;
  assign x__h8294 =
	     x__h8230 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162[0] ;
  assign x__h8560 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d160[1] |
	     y__h8563 ;
  assign x__h8627 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162[1] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162[0] ;
  assign x__h8993 = x__h8995 | y__h8996 ;
  assign x__h8995 = x__h8997 | y__h8998 ;
  assign x__h8997 = x__h8999 | y__h9000 ;
  assign x__h8999 =
	     ~x__h6119 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108[6] ;
  assign x__h9203 =
	     ~x__h6119 ^
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108[6] ;
  assign x__h9258 = x__h9203 & y__h9261 ;
  assign x__h9322 = x__h9258 & y__h9325 ;
  assign x__h9585 = x__h9587 | y__h9588 ;
  assign x__h9587 = y__h9204 | y__h9590 ;
  assign x__h9654 = y__h9261 & y__h9325 ;
  assign x__h9793 = y__h9259 | y__h9796 ;
  assign y__h10023 =
	     x__h10318 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108[5] ;
  assign y__h10025 =
	     x__h10228 &
	     INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247[0] ;
  assign y__h10027 =
	     x__h10161 &
	     INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247[1] ;
  assign y__h10029 =
	     p__h10003[3] &
	     INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247[2] ;
  assign y__h10520 =
	     x__h10658 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108[5] ;
  assign y__h10522 =
	     x__h10591 &
	     INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247[0] ;
  assign y__h10524 =
	     p__h10003[2] &
	     INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247[1] ;
  assign y__h10737 =
	     x__h10806 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108[5] ;
  assign y__h10739 =
	     p__h10003[1] &
	     INV_mac_obj_mul_x_BIT_7_92_AND_mac_obj_mul_y_B_ETC___d247[0] ;
  assign y__h10862 =
	     p__h10003[0] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d108[5] ;
  assign y__h11575 = x__h11876 & mac_obj_mul_pp30 ;
  assign y__h11577 =
	     x__h11786 &
	     mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308[0] ;
  assign y__h11579 =
	     x__h11719 &
	     mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308[1] ;
  assign y__h11581 =
	     p__h11555[3] &
	     mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308[2] ;
  assign y__h12059 = x__h12197 & mac_obj_mul_pp30 ;
  assign y__h12061 =
	     x__h12130 &
	     mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308[0] ;
  assign y__h12063 =
	     p__h11555[2] &
	     mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308[1] ;
  assign y__h12276 = x__h12345 & mac_obj_mul_pp30 ;
  assign y__h12278 =
	     p__h11555[1] &
	     mac_obj_mul_s11_02_BITS_4_TO_1_03_AND_mac_obj__ETC___d308[0] ;
  assign y__h12401 = p__h11555[0] & mac_obj_mul_pp30 ;
  assign y__h12510 = x__h12718 & y__h12719 ;
  assign y__h12512 =
	     x__h12654 &
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_AND_mac_obj__ETC___d353[0] ;
  assign y__h12514 =
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355[2] &
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_AND_mac_obj__ETC___d353[1] ;
  assign y__h12719 = mac_obj_mul_pp41 & mac_obj_mul_pp50 ;
  assign y__h12984 = x__h13050 & y__h12719 ;
  assign y__h12986 =
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355[1] &
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_AND_mac_obj__ETC___d353[0] ;
  assign y__h13192 =
	     mac_obj_mul_s13_49_BITS_2_TO_0_50_XOR_mac_obj__ETC___d355[0] &
	     y__h12719 ;
  assign y__h13417 = x__h13758 & mac_obj_mul_pp16 ;
  assign y__h13419 =
	     x__h13672 &
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d401[0] ;
  assign y__h13421 =
	     x__h13608 &
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d401[1] ;
  assign y__h13423 =
	     mac_obj_mul_s13_49_BITS_4_TO_3_85_XOR_mac_obj__ETC___d389[1] &
	     mac_obj_mul_s13_49_BITS_4_TO_3_85_AND_mac_obj__ETC___d387[0] ;
  assign y__h13937 = x__h14069 & mac_obj_mul_pp16 ;
  assign y__h13939 =
	     x__h14005 &
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d401[0] ;
  assign y__h13941 =
	     mac_obj_mul_s13_49_BITS_4_TO_3_85_XOR_mac_obj__ETC___d389[0] &
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d401[1] ;
  assign y__h14145 = x__h14211 & mac_obj_mul_pp16 ;
  assign y__h14147 =
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405[1] &
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d401[0] ;
  assign y__h14265 =
	     mac_obj_mul_s15_96_BIT_0_97_CONCAT_mac_obj_mul_ETC___d405[0] &
	     mac_obj_mul_pp16 ;
  assign y__h14939 = x__h14880 & mac_obj_mul_s23[1] ;
  assign y__h15145 = x__h15065 & mac_obj_mul_s23[2] ;
  assign y__h15351 = x__h15271 & mac_obj_mul_s23[3] ;
  assign y__h15556 = x__h15477 & mac_obj_mul_s23[4] ;
  assign y__h15740 = x__h15682 & mac_obj_mul_pp57_s2 ;
  assign y__h16099 = x__h16306 & y__h16307 ;
  assign y__h16307 = mac_obj_mul_pp01_s3 & mac_obj_mul_pp10_s3 ;
  assign y__h16572 = x__h16638 & y__h16307 ;
  assign y__h16780 = mac_obj_mul_s11_s3[0] & y__h16307 ;
  assign y__h17003 = x__h17389 & mac_obj_mul_s41[4] ;
  assign y__h17005 =
	     x__h17303 &
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_AND_mac_o_ETC___d541[0] ;
  assign y__h17007 =
	     x__h17239 &
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_AND_mac_o_ETC___d541[1] ;
  assign y__h17009 = x__h17184 & y__h17185 ;
  assign y__h17185 = mac_obj_mul_s31[0] & mac_obj_mul_s23_s3[0] ;
  assign y__h17242 = mac_obj_mul_s31[0] ^ mac_obj_mul_s23_s3[0] ;
  assign y__h17590 = x__h17722 & mac_obj_mul_s41[4] ;
  assign y__h17592 =
	     x__h17658 &
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_AND_mac_o_ETC___d541[0] ;
  assign y__h17594 =
	     y__h17242 &
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_AND_mac_o_ETC___d541[1] ;
  assign y__h17798 = x__h17864 & mac_obj_mul_s41[4] ;
  assign y__h17800 =
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545[1] &
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_AND_mac_o_ETC___d541[0] ;
  assign y__h17918 =
	     mac_obj_mul_s21_s3_03_BITS_3_TO_2_38_XOR_mac_o_ETC___d545[0] &
	     mac_obj_mul_s41[4] ;
  assign y__h18027 = x__h18457 & mac_obj_mul_s42[4] ;
  assign y__h18029 = x__h18371 & y__h18372 ;
  assign y__h18031 = x__h18307 & y__h18308 ;
  assign y__h18033 = x__h18252 & y__h18253 ;
  assign y__h18253 = mac_obj_mul_s35[0] & mac_obj_mul_s34[1] ;
  assign y__h18308 = mac_obj_mul_s34[0] & mac_obj_mul_s33[1] ;
  assign y__h18310 = mac_obj_mul_s35[0] ^ mac_obj_mul_s34[1] ;
  assign y__h18372 = mac_obj_mul_s33[0] & mac_obj_mul_s32[1] ;
  assign y__h18374 = mac_obj_mul_s34[0] ^ mac_obj_mul_s33[1] ;
  assign y__h18459 = mac_obj_mul_s33[0] ^ mac_obj_mul_s32[1] ;
  assign y__h18658 = x__h18790 & mac_obj_mul_s42[4] ;
  assign y__h18660 = x__h18726 & y__h18372 ;
  assign y__h18662 = y__h18310 & y__h18308 ;
  assign y__h18866 = x__h18932 & mac_obj_mul_s42[4] ;
  assign y__h18868 = y__h18374 & y__h18372 ;
  assign y__h18986 = y__h18459 & mac_obj_mul_s42[4] ;
  assign y__h19327 = mac_obj_mul_s16[3] & mac_obj_mul_s36[1] ;
  assign y__h19414 = mac_obj_mul_s16[3] ^ mac_obj_mul_s36[1] ;
  assign y__h19615 = x__h19681 & y__h19327 ;
  assign y__h19821 = x__h19745 & mac_obj_mul_s43[4] ;
  assign y__h19941 = y__h19414 & mac_obj_mul_s43[4] ;
  assign y__h21048 =
	     x__h21388 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d845 ;
  assign y__h21050 =
	     x__h21298 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695[0] ;
  assign y__h21052 =
	     x__h21231 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695[1] ;
  assign y__h21054 =
	     p__h21032[3] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695[2] ;
  assign y__h21524 =
	     x__h21864 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d843 ;
  assign y__h21526 =
	     x__h21774 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715[0] ;
  assign y__h21528 =
	     x__h21707 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715[1] ;
  assign y__h21530 =
	     p__h21508[3] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715[2] ;
  assign y__h22000 =
	     x__h22340 &
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d841 ;
  assign y__h22002 =
	     x__h22250 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735[0] ;
  assign y__h22004 =
	     x__h22183 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735[1] ;
  assign y__h22006 =
	     p__h21984[3] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735[2] ;
  assign y__h22475 =
	     x__h22749 &
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d839 ;
  assign y__h22477 =
	     x__h22659 &
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756[0] ;
  assign y__h22479 =
	     x__h22592 &
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756[1] ;
  assign y__h22481 =
	     p__h22459[3] &
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756[2] ;
  assign y__h22884 =
	     x__h23158 &
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d837 ;
  assign y__h22886 =
	     x__h23068 &
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777[0] ;
  assign y__h22888 =
	     x__h23001 &
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777[1] ;
  assign y__h22890 =
	     p__h22868[3] &
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777[2] ;
  assign y__h23293 =
	     x__h23567 &
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d835 ;
  assign y__h23295 =
	     x__h23477 &
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798[0] ;
  assign y__h23297 =
	     x__h23410 &
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798[1] ;
  assign y__h23299 =
	     p__h23277[3] &
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798[2] ;
  assign y__h23703 =
	     x__h23885 &
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819[0] ;
  assign y__h23705 =
	     x__h23818 &
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819[1] ;
  assign y__h23707 =
	     p__h23685[3] &
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819[2] ;
  assign y__h24067 =
	     { x__h24144 | y__h24145,
	       mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819[1] |
	       y__h24362,
	       mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819[0],
	       1'b0 } ;
  assign y__h24145 =
	     x__h24214 &
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819[0] ;
  assign y__h24147 =
	     p__h23685[2] &
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819[1] ;
  assign y__h24362 =
	     p__h23685[1] &
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d819[0] ;
  assign y__h24533 =
	     { x__h24608 | y__h24609,
	       x__h24825 | y__h24826,
	       mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798[0] |
	       y__h24951,
	       mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d835 } ;
  assign y__h24609 =
	     x__h24747 &
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d835 ;
  assign y__h24611 =
	     x__h24680 &
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798[0] ;
  assign y__h24613 =
	     p__h23277[2] &
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798[1] ;
  assign y__h24826 =
	     x__h24895 &
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d835 ;
  assign y__h24828 =
	     p__h23277[1] &
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d798[0] ;
  assign y__h24951 =
	     p__h23277[0] &
	     mac_p1_74_BITS_3_TO_0_17_AND_mac_rg_c_78_BITS__ETC___d835 ;
  assign y__h24999 =
	     { x__h25074 | y__h25075,
	       x__h25291 | y__h25292,
	       mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777[0] |
	       y__h25417,
	       mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d837 } ;
  assign y__h25075 =
	     x__h25213 &
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d837 ;
  assign y__h25077 =
	     x__h25146 &
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777[0] ;
  assign y__h25079 =
	     p__h22868[2] &
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777[1] ;
  assign y__h25292 =
	     x__h25361 &
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d837 ;
  assign y__h25294 =
	     p__h22868[1] &
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d777[0] ;
  assign y__h25417 =
	     p__h22868[0] &
	     mac_p1_74_BITS_7_TO_4_96_AND_mac_rg_c_78_BITS__ETC___d837 ;
  assign y__h25465 =
	     { x__h25540 | y__h25541,
	       x__h25757 | y__h25758,
	       mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756[0] |
	       y__h25883,
	       mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d839 } ;
  assign y__h25541 =
	     x__h25679 &
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d839 ;
  assign y__h25543 =
	     x__h25612 &
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756[0] ;
  assign y__h25545 =
	     p__h22459[2] &
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756[1] ;
  assign y__h25758 =
	     x__h25827 &
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d839 ;
  assign y__h25760 =
	     p__h22459[1] &
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d756[0] ;
  assign y__h25883 =
	     p__h22459[0] &
	     mac_p1_74_BITS_11_TO_8_75_AND_mac_rg_c_78_BITS_ETC___d839 ;
  assign y__h25931 =
	     { x__h26006 | y__h26007,
	       x__h26223 | y__h26224,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735[0] |
	       y__h26349,
	       mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d841 } ;
  assign y__h26007 =
	     x__h26145 &
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d841 ;
  assign y__h26009 =
	     x__h26078 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735[0] ;
  assign y__h26011 =
	     p__h21984[2] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735[1] ;
  assign y__h26224 =
	     x__h26293 &
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d841 ;
  assign y__h26226 =
	     p__h21984[1] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d735[0] ;
  assign y__h26349 =
	     p__h21984[0] &
	     mac_p1_74_BITS_15_TO_12_54_AND_mac_rg_c_78_BIT_ETC___d841 ;
  assign y__h26397 =
	     { x__h26472 | y__h26473,
	       x__h26689 | y__h26690,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715[0] |
	       y__h26815,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d843 } ;
  assign y__h26473 =
	     x__h26611 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d843 ;
  assign y__h26475 =
	     x__h26544 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715[0] ;
  assign y__h26477 =
	     p__h21508[2] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715[1] ;
  assign y__h26690 =
	     x__h26759 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d843 ;
  assign y__h26692 =
	     p__h21508[1] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d715[0] ;
  assign y__h26815 =
	     p__h21508[0] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d843 ;
  assign y__h26863 =
	     { x__h26938 | y__h26939,
	       x__h27155 | y__h27156,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695[0] |
	       y__h27281,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d845 } ;
  assign y__h26939 =
	     x__h27077 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d845 ;
  assign y__h26941 =
	     x__h27010 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695[0] ;
  assign y__h26943 =
	     p__h21032[2] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695[1] ;
  assign y__h27156 =
	     x__h27225 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d845 ;
  assign y__h27158 =
	     p__h21032[1] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d695[0] ;
  assign y__h27281 =
	     p__h21032[0] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d845 ;
  assign y__h27329 =
	     { x__h27404 | y__h27405,
	       x__h27621 | y__h27622,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d681[0] |
	       y__h27747,
	       mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d847 } ;
  assign y__h27405 =
	     x__h27543 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d847 ;
  assign y__h27407 =
	     x__h27476 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d681[0] ;
  assign y__h27409 =
	     p__h20554[2] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d681[1] ;
  assign y__h27622 =
	     x__h27691 &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d847 ;
  assign y__h27624 =
	     p__h20554[1] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d681[0] ;
  assign y__h27747 =
	     p__h20554[0] &
	     mac_p1_74_BIT_15_75_CONCAT_mac_p1_74_BIT_15_75_ETC___d847 ;
  assign y__h4288 =
	     x__h4824 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33[0] ;
  assign y__h4290 =
	     x__h4734 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12[0] ;
  assign y__h4292 =
	     x__h4667 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12[1] ;
  assign y__h4294 =
	     p__h4266[3] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12[2] ;
  assign y__h4427 = {7{mac_obj_mul_y[0]}} ;
  assign y__h4561 = {7{mac_obj_mul_y[1]}} ;
  assign y__h4999 = {7{mac_obj_mul_y[2]}} ;
  assign y__h5140 =
	     x__h5278 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33[0] ;
  assign y__h5142 =
	     x__h5211 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12[0] ;
  assign y__h5144 =
	     p__h4266[2] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12[1] ;
  assign y__h5357 =
	     x__h5426 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33[0] ;
  assign y__h5359 =
	     p__h4266[1] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d12[0] ;
  assign y__h5482 =
	     p__h4266[0] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33[0] ;
  assign y__h5589 =
	     x__h5996 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82[0] ;
  assign y__h5591 =
	     x__h5906 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61[0] ;
  assign y__h5593 =
	     x__h5839 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61[1] ;
  assign y__h5595 =
	     p__h5569[3] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61[2] ;
  assign y__h5733 = {7{mac_obj_mul_y[3]}} ;
  assign y__h6170 = {7{mac_obj_mul_y[4]}} ;
  assign y__h6311 =
	     x__h6449 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82[0] ;
  assign y__h6313 =
	     x__h6382 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61[0] ;
  assign y__h6315 =
	     p__h5569[2] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61[1] ;
  assign y__h6528 =
	     x__h6597 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82[0] ;
  assign y__h6530 =
	     p__h5569[1] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d61[0] ;
  assign y__h6653 =
	     p__h5569[0] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82[0] ;
  assign y__h6762 =
	     x__h7169 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d131[0] ;
  assign y__h6764 =
	     x__h7079 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110[0] ;
  assign y__h6766 =
	     x__h7012 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110[1] ;
  assign y__h6768 =
	     p__h6742[3] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110[2] ;
  assign y__h6906 = {7{mac_obj_mul_y[5]}} ;
  assign y__h7343 = {7{mac_obj_mul_y[6]}} ;
  assign y__h7484 =
	     x__h7622 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d131[0] ;
  assign y__h7486 =
	     x__h7555 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110[0] ;
  assign y__h7488 =
	     p__h6742[2] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110[1] ;
  assign y__h7701 =
	     x__h7770 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d131[0] ;
  assign y__h7703 =
	     p__h6742[1] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d110[0] ;
  assign y__h7826 =
	     p__h6742[0] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d131[0] ;
  assign y__h7937 = x__h8294 & y__h8295 ;
  assign y__h7939 =
	     x__h8230 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d160[0] ;
  assign y__h7941 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162[2] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d160[1] ;
  assign y__h8101 = {7{mac_obj_mul_y[7]}} ;
  assign y__h8295 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d6[6] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d10[5] ;
  assign y__h8561 = x__h8627 & y__h8295 ;
  assign y__h8563 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162[1] &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d160[0] ;
  assign y__h8769 =
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d162[0] &
	     y__h8295 ;
  assign y__h8994 = x__h9322 & y__h9410 ;
  assign y__h8996 = x__h9322 & y__h9323 ;
  assign y__h8998 = x__h9258 & y__h9259 ;
  assign y__h9000 = x__h9203 & y__h9204 ;
  assign y__h9204 =
	     ~x__h5682 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82[6] ;
  assign y__h9259 =
	     ~x__h4948 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d59[6] ;
  assign y__h9261 =
	     ~x__h5682 ^
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d82[6] ;
  assign y__h9323 =
	     ~x__h4510 &
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33[6] ;
  assign y__h9325 =
	     ~x__h4948 ^
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d59[6] ;
  assign y__h9410 =
	     ~x__h4510 ^
	     mac_obj_mul_x_BITS_6_TO_0_AND_SEXT_mac_obj_mul_ETC___d33[6] ;
  assign y__h9586 = x__h9654 & y__h9410 ;
  assign y__h9588 = x__h9654 & y__h9323 ;
  assign y__h9590 = y__h9261 & y__h9259 ;
  assign y__h9794 = y__h9325 & y__h9410 ;
  assign y__h9796 = y__h9325 & y__h9323 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        as1 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as10 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as11 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as12 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as2 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as3 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as4 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as5 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as6 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as7 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as8 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	as9 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs1 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs10 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs11 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs12 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs2 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs3 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs4 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs5 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs6 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs7 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs8 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs9 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	cs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs10 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs11 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs12 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs2 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs3 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs4 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs5 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs6 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs7 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs8 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	cs9 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	failed_cases <= `BSV_ASSIGNMENT_DELAY 32'd0;
	mac_cyc <= `BSV_ASSIGNMENT_DELAY 32'hFFFFFFFF;
	mac_obj_mul_pp00 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp00_s2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp00_s3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp00_s4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp01 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp01_s2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp01_s3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp07 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp10_s2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp10_s3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp35 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp35_s2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp41 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp50 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp57 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp57_s2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp77 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp77_s2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_pp77_s3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mac_obj_mul_s11 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s11_s2 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s11_s3 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s12 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s13 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s14 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s15 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s15_s2 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s16 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s16_s2 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s16_s3 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s21 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s21_s3 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s22 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s22_s3 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s23 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s23_s3 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s31 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	mac_obj_mul_s32 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	mac_obj_mul_s33 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	mac_obj_mul_s34 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	mac_obj_mul_s35 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	mac_obj_mul_s36 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	mac_obj_mul_s41 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s42 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s43 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_s44 <= `BSV_ASSIGNMENT_DELAY 5'd0;
	mac_obj_mul_x <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	mac_obj_mul_y <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	mac_obj_mul_z <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	mac_out <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	mac_p1 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	mac_rg_a <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	mac_rg_b <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	mac_rg_c <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs10 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs11 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs12 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs2 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs3 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs4 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs5 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs6 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs7 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs8 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs9 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_a <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_af <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_b <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_bf <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_c <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_cf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_mac <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_macf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_r <= `BSV_ASSIGNMENT_DELAY 1'b1;
      end
    else
      begin
        if (as1$EN) as1 <= `BSV_ASSIGNMENT_DELAY as1$D_IN;
	if (as10$EN) as10 <= `BSV_ASSIGNMENT_DELAY as10$D_IN;
	if (as11$EN) as11 <= `BSV_ASSIGNMENT_DELAY as11$D_IN;
	if (as12$EN) as12 <= `BSV_ASSIGNMENT_DELAY as12$D_IN;
	if (as2$EN) as2 <= `BSV_ASSIGNMENT_DELAY as2$D_IN;
	if (as3$EN) as3 <= `BSV_ASSIGNMENT_DELAY as3$D_IN;
	if (as4$EN) as4 <= `BSV_ASSIGNMENT_DELAY as4$D_IN;
	if (as5$EN) as5 <= `BSV_ASSIGNMENT_DELAY as5$D_IN;
	if (as6$EN) as6 <= `BSV_ASSIGNMENT_DELAY as6$D_IN;
	if (as7$EN) as7 <= `BSV_ASSIGNMENT_DELAY as7$D_IN;
	if (as8$EN) as8 <= `BSV_ASSIGNMENT_DELAY as8$D_IN;
	if (as9$EN) as9 <= `BSV_ASSIGNMENT_DELAY as9$D_IN;
	if (bs1$EN) bs1 <= `BSV_ASSIGNMENT_DELAY bs1$D_IN;
	if (bs10$EN) bs10 <= `BSV_ASSIGNMENT_DELAY bs10$D_IN;
	if (bs11$EN) bs11 <= `BSV_ASSIGNMENT_DELAY bs11$D_IN;
	if (bs12$EN) bs12 <= `BSV_ASSIGNMENT_DELAY bs12$D_IN;
	if (bs2$EN) bs2 <= `BSV_ASSIGNMENT_DELAY bs2$D_IN;
	if (bs3$EN) bs3 <= `BSV_ASSIGNMENT_DELAY bs3$D_IN;
	if (bs4$EN) bs4 <= `BSV_ASSIGNMENT_DELAY bs4$D_IN;
	if (bs5$EN) bs5 <= `BSV_ASSIGNMENT_DELAY bs5$D_IN;
	if (bs6$EN) bs6 <= `BSV_ASSIGNMENT_DELAY bs6$D_IN;
	if (bs7$EN) bs7 <= `BSV_ASSIGNMENT_DELAY bs7$D_IN;
	if (bs8$EN) bs8 <= `BSV_ASSIGNMENT_DELAY bs8$D_IN;
	if (bs9$EN) bs9 <= `BSV_ASSIGNMENT_DELAY bs9$D_IN;
	if (count$EN) count <= `BSV_ASSIGNMENT_DELAY count$D_IN;
	if (cs1$EN) cs1 <= `BSV_ASSIGNMENT_DELAY cs1$D_IN;
	if (cs10$EN) cs10 <= `BSV_ASSIGNMENT_DELAY cs10$D_IN;
	if (cs11$EN) cs11 <= `BSV_ASSIGNMENT_DELAY cs11$D_IN;
	if (cs12$EN) cs12 <= `BSV_ASSIGNMENT_DELAY cs12$D_IN;
	if (cs2$EN) cs2 <= `BSV_ASSIGNMENT_DELAY cs2$D_IN;
	if (cs3$EN) cs3 <= `BSV_ASSIGNMENT_DELAY cs3$D_IN;
	if (cs4$EN) cs4 <= `BSV_ASSIGNMENT_DELAY cs4$D_IN;
	if (cs5$EN) cs5 <= `BSV_ASSIGNMENT_DELAY cs5$D_IN;
	if (cs6$EN) cs6 <= `BSV_ASSIGNMENT_DELAY cs6$D_IN;
	if (cs7$EN) cs7 <= `BSV_ASSIGNMENT_DELAY cs7$D_IN;
	if (cs8$EN) cs8 <= `BSV_ASSIGNMENT_DELAY cs8$D_IN;
	if (cs9$EN) cs9 <= `BSV_ASSIGNMENT_DELAY cs9$D_IN;
	if (failed_cases$EN)
	  failed_cases <= `BSV_ASSIGNMENT_DELAY failed_cases$D_IN;
	if (mac_cyc$EN) mac_cyc <= `BSV_ASSIGNMENT_DELAY mac_cyc$D_IN;
	if (mac_obj_mul_pp00$EN)
	  mac_obj_mul_pp00 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp00$D_IN;
	if (mac_obj_mul_pp00_s2$EN)
	  mac_obj_mul_pp00_s2 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp00_s2$D_IN;
	if (mac_obj_mul_pp00_s3$EN)
	  mac_obj_mul_pp00_s3 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp00_s3$D_IN;
	if (mac_obj_mul_pp00_s4$EN)
	  mac_obj_mul_pp00_s4 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp00_s4$D_IN;
	if (mac_obj_mul_pp01$EN)
	  mac_obj_mul_pp01 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp01$D_IN;
	if (mac_obj_mul_pp01_s2$EN)
	  mac_obj_mul_pp01_s2 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp01_s2$D_IN;
	if (mac_obj_mul_pp01_s3$EN)
	  mac_obj_mul_pp01_s3 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp01_s3$D_IN;
	if (mac_obj_mul_pp07$EN)
	  mac_obj_mul_pp07 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp07$D_IN;
	if (mac_obj_mul_pp10$EN)
	  mac_obj_mul_pp10 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp10$D_IN;
	if (mac_obj_mul_pp10_s2$EN)
	  mac_obj_mul_pp10_s2 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp10_s2$D_IN;
	if (mac_obj_mul_pp10_s3$EN)
	  mac_obj_mul_pp10_s3 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp10_s3$D_IN;
	if (mac_obj_mul_pp16$EN)
	  mac_obj_mul_pp16 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp16$D_IN;
	if (mac_obj_mul_pp21$EN)
	  mac_obj_mul_pp21 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp21$D_IN;
	if (mac_obj_mul_pp30$EN)
	  mac_obj_mul_pp30 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp30$D_IN;
	if (mac_obj_mul_pp35$EN)
	  mac_obj_mul_pp35 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp35$D_IN;
	if (mac_obj_mul_pp35_s2$EN)
	  mac_obj_mul_pp35_s2 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp35_s2$D_IN;
	if (mac_obj_mul_pp41$EN)
	  mac_obj_mul_pp41 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp41$D_IN;
	if (mac_obj_mul_pp50$EN)
	  mac_obj_mul_pp50 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp50$D_IN;
	if (mac_obj_mul_pp57$EN)
	  mac_obj_mul_pp57 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp57$D_IN;
	if (mac_obj_mul_pp57_s2$EN)
	  mac_obj_mul_pp57_s2 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp57_s2$D_IN;
	if (mac_obj_mul_pp77$EN)
	  mac_obj_mul_pp77 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_pp77$D_IN;
	if (mac_obj_mul_pp77_s2$EN)
	  mac_obj_mul_pp77_s2 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp77_s2$D_IN;
	if (mac_obj_mul_pp77_s3$EN)
	  mac_obj_mul_pp77_s3 <= `BSV_ASSIGNMENT_DELAY
	      mac_obj_mul_pp77_s3$D_IN;
	if (mac_obj_mul_s11$EN)
	  mac_obj_mul_s11 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s11$D_IN;
	if (mac_obj_mul_s11_s2$EN)
	  mac_obj_mul_s11_s2 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s11_s2$D_IN;
	if (mac_obj_mul_s11_s3$EN)
	  mac_obj_mul_s11_s3 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s11_s3$D_IN;
	if (mac_obj_mul_s12$EN)
	  mac_obj_mul_s12 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s12$D_IN;
	if (mac_obj_mul_s13$EN)
	  mac_obj_mul_s13 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s13$D_IN;
	if (mac_obj_mul_s14$EN)
	  mac_obj_mul_s14 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s14$D_IN;
	if (mac_obj_mul_s15$EN)
	  mac_obj_mul_s15 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s15$D_IN;
	if (mac_obj_mul_s15_s2$EN)
	  mac_obj_mul_s15_s2 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s15_s2$D_IN;
	if (mac_obj_mul_s16$EN)
	  mac_obj_mul_s16 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s16$D_IN;
	if (mac_obj_mul_s16_s2$EN)
	  mac_obj_mul_s16_s2 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s16_s2$D_IN;
	if (mac_obj_mul_s16_s3$EN)
	  mac_obj_mul_s16_s3 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s16_s3$D_IN;
	if (mac_obj_mul_s21$EN)
	  mac_obj_mul_s21 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s21$D_IN;
	if (mac_obj_mul_s21_s3$EN)
	  mac_obj_mul_s21_s3 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s21_s3$D_IN;
	if (mac_obj_mul_s22$EN)
	  mac_obj_mul_s22 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s22$D_IN;
	if (mac_obj_mul_s22_s3$EN)
	  mac_obj_mul_s22_s3 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s22_s3$D_IN;
	if (mac_obj_mul_s23$EN)
	  mac_obj_mul_s23 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s23$D_IN;
	if (mac_obj_mul_s23_s3$EN)
	  mac_obj_mul_s23_s3 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s23_s3$D_IN;
	if (mac_obj_mul_s31$EN)
	  mac_obj_mul_s31 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s31$D_IN;
	if (mac_obj_mul_s32$EN)
	  mac_obj_mul_s32 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s32$D_IN;
	if (mac_obj_mul_s33$EN)
	  mac_obj_mul_s33 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s33$D_IN;
	if (mac_obj_mul_s34$EN)
	  mac_obj_mul_s34 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s34$D_IN;
	if (mac_obj_mul_s35$EN)
	  mac_obj_mul_s35 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s35$D_IN;
	if (mac_obj_mul_s36$EN)
	  mac_obj_mul_s36 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s36$D_IN;
	if (mac_obj_mul_s41$EN)
	  mac_obj_mul_s41 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s41$D_IN;
	if (mac_obj_mul_s42$EN)
	  mac_obj_mul_s42 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s42$D_IN;
	if (mac_obj_mul_s43$EN)
	  mac_obj_mul_s43 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s43$D_IN;
	if (mac_obj_mul_s44$EN)
	  mac_obj_mul_s44 <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_s44$D_IN;
	if (mac_obj_mul_x$EN)
	  mac_obj_mul_x <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_x$D_IN;
	if (mac_obj_mul_y$EN)
	  mac_obj_mul_y <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_y$D_IN;
	if (mac_obj_mul_z$EN)
	  mac_obj_mul_z <= `BSV_ASSIGNMENT_DELAY mac_obj_mul_z$D_IN;
	if (mac_out$EN) mac_out <= `BSV_ASSIGNMENT_DELAY mac_out$D_IN;
	if (mac_p1$EN) mac_p1 <= `BSV_ASSIGNMENT_DELAY mac_p1$D_IN;
	if (mac_rg_a$EN) mac_rg_a <= `BSV_ASSIGNMENT_DELAY mac_rg_a$D_IN;
	if (mac_rg_b$EN) mac_rg_b <= `BSV_ASSIGNMENT_DELAY mac_rg_b$D_IN;
	if (mac_rg_c$EN) mac_rg_c <= `BSV_ASSIGNMENT_DELAY mac_rg_c$D_IN;
	if (macs1$EN) macs1 <= `BSV_ASSIGNMENT_DELAY macs1$D_IN;
	if (macs10$EN) macs10 <= `BSV_ASSIGNMENT_DELAY macs10$D_IN;
	if (macs11$EN) macs11 <= `BSV_ASSIGNMENT_DELAY macs11$D_IN;
	if (macs12$EN) macs12 <= `BSV_ASSIGNMENT_DELAY macs12$D_IN;
	if (macs2$EN) macs2 <= `BSV_ASSIGNMENT_DELAY macs2$D_IN;
	if (macs3$EN) macs3 <= `BSV_ASSIGNMENT_DELAY macs3$D_IN;
	if (macs4$EN) macs4 <= `BSV_ASSIGNMENT_DELAY macs4$D_IN;
	if (macs5$EN) macs5 <= `BSV_ASSIGNMENT_DELAY macs5$D_IN;
	if (macs6$EN) macs6 <= `BSV_ASSIGNMENT_DELAY macs6$D_IN;
	if (macs7$EN) macs7 <= `BSV_ASSIGNMENT_DELAY macs7$D_IN;
	if (macs8$EN) macs8 <= `BSV_ASSIGNMENT_DELAY macs8$D_IN;
	if (macs9$EN) macs9 <= `BSV_ASSIGNMENT_DELAY macs9$D_IN;
	if (rg_a$EN) rg_a <= `BSV_ASSIGNMENT_DELAY rg_a$D_IN;
	if (rg_af$EN) rg_af <= `BSV_ASSIGNMENT_DELAY rg_af$D_IN;
	if (rg_b$EN) rg_b <= `BSV_ASSIGNMENT_DELAY rg_b$D_IN;
	if (rg_bf$EN) rg_bf <= `BSV_ASSIGNMENT_DELAY rg_bf$D_IN;
	if (rg_c$EN) rg_c <= `BSV_ASSIGNMENT_DELAY rg_c$D_IN;
	if (rg_cf$EN) rg_cf <= `BSV_ASSIGNMENT_DELAY rg_cf$D_IN;
	if (rg_mac$EN) rg_mac <= `BSV_ASSIGNMENT_DELAY rg_mac$D_IN;
	if (rg_macf$EN) rg_macf <= `BSV_ASSIGNMENT_DELAY rg_macf$D_IN;
	if (rg_r$EN) rg_r <= `BSV_ASSIGNMENT_DELAY rg_r$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    as1 = 16'hAAAA;
    as10 = 16'hAAAA;
    as11 = 16'hAAAA;
    as12 = 16'hAAAA;
    as2 = 16'hAAAA;
    as3 = 16'hAAAA;
    as4 = 16'hAAAA;
    as5 = 16'hAAAA;
    as6 = 16'hAAAA;
    as7 = 16'hAAAA;
    as8 = 16'hAAAA;
    as9 = 16'hAAAA;
    bs1 = 16'hAAAA;
    bs10 = 16'hAAAA;
    bs11 = 16'hAAAA;
    bs12 = 16'hAAAA;
    bs2 = 16'hAAAA;
    bs3 = 16'hAAAA;
    bs4 = 16'hAAAA;
    bs5 = 16'hAAAA;
    bs6 = 16'hAAAA;
    bs7 = 16'hAAAA;
    bs8 = 16'hAAAA;
    bs9 = 16'hAAAA;
    count = 32'hAAAAAAAA;
    cs1 = 32'hAAAAAAAA;
    cs10 = 32'hAAAAAAAA;
    cs11 = 32'hAAAAAAAA;
    cs12 = 32'hAAAAAAAA;
    cs2 = 32'hAAAAAAAA;
    cs3 = 32'hAAAAAAAA;
    cs4 = 32'hAAAAAAAA;
    cs5 = 32'hAAAAAAAA;
    cs6 = 32'hAAAAAAAA;
    cs7 = 32'hAAAAAAAA;
    cs8 = 32'hAAAAAAAA;
    cs9 = 32'hAAAAAAAA;
    failed_cases = 32'hAAAAAAAA;
    mac_cyc = 32'hAAAAAAAA;
    mac_obj_mul_pp00 = 1'h0;
    mac_obj_mul_pp00_s2 = 1'h0;
    mac_obj_mul_pp00_s3 = 1'h0;
    mac_obj_mul_pp00_s4 = 1'h0;
    mac_obj_mul_pp01 = 1'h0;
    mac_obj_mul_pp01_s2 = 1'h0;
    mac_obj_mul_pp01_s3 = 1'h0;
    mac_obj_mul_pp07 = 1'h0;
    mac_obj_mul_pp10 = 1'h0;
    mac_obj_mul_pp10_s2 = 1'h0;
    mac_obj_mul_pp10_s3 = 1'h0;
    mac_obj_mul_pp16 = 1'h0;
    mac_obj_mul_pp21 = 1'h0;
    mac_obj_mul_pp30 = 1'h0;
    mac_obj_mul_pp35 = 1'h0;
    mac_obj_mul_pp35_s2 = 1'h0;
    mac_obj_mul_pp41 = 1'h0;
    mac_obj_mul_pp50 = 1'h0;
    mac_obj_mul_pp57 = 1'h0;
    mac_obj_mul_pp57_s2 = 1'h0;
    mac_obj_mul_pp77 = 1'h0;
    mac_obj_mul_pp77_s2 = 1'h0;
    mac_obj_mul_pp77_s3 = 1'h0;
    mac_obj_mul_s11 = 5'h0A;
    mac_obj_mul_s11_s2 = 5'h0A;
    mac_obj_mul_s11_s3 = 5'h0A;
    mac_obj_mul_s12 = 5'h0A;
    mac_obj_mul_s13 = 5'h0A;
    mac_obj_mul_s14 = 5'h0A;
    mac_obj_mul_s15 = 5'h0A;
    mac_obj_mul_s15_s2 = 5'h0A;
    mac_obj_mul_s16 = 5'h0A;
    mac_obj_mul_s16_s2 = 5'h0A;
    mac_obj_mul_s16_s3 = 5'h0A;
    mac_obj_mul_s21 = 5'h0A;
    mac_obj_mul_s21_s3 = 5'h0A;
    mac_obj_mul_s22 = 5'h0A;
    mac_obj_mul_s22_s3 = 5'h0A;
    mac_obj_mul_s23 = 5'h0A;
    mac_obj_mul_s23_s3 = 5'h0A;
    mac_obj_mul_s31 = 2'h2;
    mac_obj_mul_s32 = 2'h2;
    mac_obj_mul_s33 = 2'h2;
    mac_obj_mul_s34 = 2'h2;
    mac_obj_mul_s35 = 2'h2;
    mac_obj_mul_s36 = 2'h2;
    mac_obj_mul_s41 = 5'h0A;
    mac_obj_mul_s42 = 5'h0A;
    mac_obj_mul_s43 = 5'h0A;
    mac_obj_mul_s44 = 5'h0A;
    mac_obj_mul_x = 8'hAA;
    mac_obj_mul_y = 8'hAA;
    mac_obj_mul_z = 16'hAAAA;
    mac_out = 32'hAAAAAAAA;
    mac_p1 = 16'hAAAA;
    mac_rg_a = 8'hAA;
    mac_rg_b = 8'hAA;
    mac_rg_c = 32'hAAAAAAAA;
    macs1 = 32'hAAAAAAAA;
    macs10 = 32'hAAAAAAAA;
    macs11 = 32'hAAAAAAAA;
    macs12 = 32'hAAAAAAAA;
    macs2 = 32'hAAAAAAAA;
    macs3 = 32'hAAAAAAAA;
    macs4 = 32'hAAAAAAAA;
    macs5 = 32'hAAAAAAAA;
    macs6 = 32'hAAAAAAAA;
    macs7 = 32'hAAAAAAAA;
    macs8 = 32'hAAAAAAAA;
    macs9 = 32'hAAAAAAAA;
    rg_a = 16'hAAAA;
    rg_af = 16'hAAAA;
    rg_b = 16'hAAAA;
    rg_bf = 16'hAAAA;
    rg_c = 32'hAAAAAAAA;
    rg_cf = 32'hAAAAAAAA;
    rg_mac = 32'hAAAAAAAA;
    rg_macf = 32'hAAAAAAAA;
    rg_r = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if ((count ^ 32'h80000000) >= 32'h80000007)
	$display("%d A: %b  B: %b  C:%b \n--Expected O/P --- %b, Actual O/P-- %b",
		 $signed(count),
		 as10,
		 bs10,
		 cs10,
		 macs1,
		 mac_result__h29694);
    if (RST_N != `BSV_RESET_VALUE)
      if (count == 32'd1060)
	$display("Failed for %d cases", $signed(failed_cases));
    if (RST_N != `BSV_RESET_VALUE) if (count == 32'd1060) $finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE) $display("output is :%b", mac_out);
  end
  // synopsys translate_on
endmodule  // mk_Tb

