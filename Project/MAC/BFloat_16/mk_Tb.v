//
// Generated by Bluespec Compiler, version 2024.07 (build b4f31dbe)
//
// On Sun Oct 20 15:06:11 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mk_Tb(CLK,
	     RST_N);
  input  CLK;
  input  RST_N;

  // register as1
  reg [31 : 0] as1;
  wire [31 : 0] as1$D_IN;
  wire as1$EN;

  // register bs1
  reg [31 : 0] bs1;
  wire [31 : 0] bs1$D_IN;
  wire bs1$EN;

  // register count
  reg [31 : 0] count;
  wire [31 : 0] count$D_IN;
  wire count$EN;

  // register cs1
  reg [31 : 0] cs1;
  wire [31 : 0] cs1$D_IN;
  wire cs1$EN;

  // register failed_cases
  reg [31 : 0] failed_cases;
  wire [31 : 0] failed_cases$D_IN;
  wire failed_cases$EN;

  // register mac_out_r
  reg [31 : 0] mac_out_r;
  wire [31 : 0] mac_out_r$D_IN;
  wire mac_out_r$EN;

  // register mac_rg_A
  reg [15 : 0] mac_rg_A;
  wire [15 : 0] mac_rg_A$D_IN;
  wire mac_rg_A$EN;

  // register mac_rg_B
  reg [15 : 0] mac_rg_B;
  wire [15 : 0] mac_rg_B$D_IN;
  wire mac_rg_B$EN;

  // register mac_rg_C
  reg [31 : 0] mac_rg_C;
  wire [31 : 0] mac_rg_C$D_IN;
  wire mac_rg_C$EN;

  // register rg_a
  reg [15 : 0] rg_a;
  wire [15 : 0] rg_a$D_IN;
  wire rg_a$EN;

  // register rg_af
  reg [31 : 0] rg_af;
  wire [31 : 0] rg_af$D_IN;
  wire rg_af$EN;

  // register rg_b
  reg [15 : 0] rg_b;
  wire [15 : 0] rg_b$D_IN;
  wire rg_b$EN;

  // register rg_bf
  reg [31 : 0] rg_bf;
  wire [31 : 0] rg_bf$D_IN;
  wire rg_bf$EN;

  // register rg_c
  reg [31 : 0] rg_c;
  wire [31 : 0] rg_c$D_IN;
  wire rg_c$EN;

  // register rg_cf
  reg [31 : 0] rg_cf;
  wire [31 : 0] rg_cf$D_IN;
  wire rg_cf$EN;

  // register rg_r
  reg rg_r;
  wire rg_r$D_IN, rg_r$EN;

  // ports of submodule obj_inp
  wire [31 : 0] obj_inp$out_c;
  wire [15 : 0] obj_inp$out_a, obj_inp$out_b;
  wire obj_inp$EN, obj_inp$read;

  // remaining internal signals
  reg [30 : 0] IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1638,
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1344;
  reg [22 : 0] CASE_grs040_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BIT_ETC__q16,
	       CASE_guard3615_0b10_out_sfd9178_0b11_theResult_ETC__q14,
	       CASE_guard8861_0b10_out_sfd7527_0b11_theResult_ETC__q7;
  reg [7 : 0] CASE_guard3615_0b10_out_exp9177_0b11_theResult_ETC__q15,
	      CASE_guard8861_0b10_out_exp7526_0b11_theResult_ETC__q8;
  wire [47 : 0] IF_0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30__ETC__q5,
		NOT_as1_07_BITS_30_TO_23_08_EQ_0_32_72_CONCAT__ETC___d992,
		_theResult___snd__h59405,
		_theResult___snd__h66964,
		_theResult___snd__h66978,
		_theResult___snd__h66980,
		_theResult___snd__h66992,
		_theResult___snd__h66998,
		_theResult___snd__h67016,
		_theResult___snd__h67021,
		sfdin__h66935,
		sfdres__h57458,
		sfdres__h58542,
		x__h59487;
  wire [31 : 0] IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645,
		IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d657,
		_theResult_____3_fst__h21372,
		_theResult_____3_snd_fst__h21374,
		mul_result__h1003,
		rg_C_s5__h1005,
		rg_C_s6__h21377,
		rg_C_s6__h21624,
		rg_mult_s5__h1004,
		rg_mult_s6__h21376,
		rg_mult_s6__h21623;
  wire [30 : 0] IF_0b0_CONCAT_NOT_IF_NOT_IF_as1_07_BITS_30_TO__ETC___d1634,
		IF_0b0_CONCAT_NOT_IF_NOT_as1_07_BITS_30_TO_23__ETC___d1341,
		IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1337,
		IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1613,
		IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1639,
		IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1345,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1371,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1372,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1374,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1376,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640,
		IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d614,
		IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1346,
		IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1334;
  wire [28 : 0] IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675,
		a_temp__h21535,
		b_temp__h21536;
  wire [27 : 0] IF_0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_ETC__q12,
		IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1442,
		_0b0_CONCAT_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_ETC___d1431,
		_theResult___snd__h78635,
		_theResult___snd__h78649,
		_theResult___snd__h78651,
		_theResult___snd__h78663,
		_theResult___snd__h78669,
		_theResult___snd__h78687,
		_theResult___snd__h78692,
		a__h57380,
		b__h57382,
		guard__h74218,
		opB__h57396,
		result__h74206,
		result__h74223,
		result__h74335,
		sfdA__h57414,
		sfdB__h57415,
		sfdin__h73628,
		sfdin__h78606;
  wire [26 : 0] IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d890,
		IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1429,
		_theResult_____2_fst__h21485,
		_theResult_____2_fst__h28772,
		mult_mant_s7__h1017,
		rg_mant_s9__h22126,
		rg_mant_s9__h28829,
		shiftedmantissa__h1019,
		x__h21742;
  wire [25 : 0] c_mant_s7__h1018, mantissa__h22125;
  wire [24 : 0] sfd__h67051, sfd__h78722;
  wire [23 : 0] opAsfd__h57488, opBsfd__h57489;
  wire [22 : 0] IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1369,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1668,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1672,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1679,
		IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d892,
		IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1286,
		IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1282,
		IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1284,
		IF_cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NO_ETC___d1671,
		_theResult___fst_sfd__h66945,
		_theResult___fst_sfd__h67543,
		_theResult___fst_sfd__h78616,
		_theResult___fst_sfd__h79194,
		_theResult___sfd__h67524,
		_theResult___sfd__h79175,
		_theResult___snd_fst_sfd__h66951,
		_theResult___snd_fst_sfd__h78622,
		mant_1__h1585,
		mant_1__h21089,
		mant_1__h21229,
		mantissa__h1586,
		out_sfd__h67527,
		out_sfd__h79178,
		sfd__h31096,
		sfd__h31099,
		sfd__h46154,
		sfd__h73599,
		x__h67580;
  wire [9 : 0] IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399,
	       IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943,
	       IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395,
	       _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d985,
	       value__h39412,
	       x__h32056,
	       x__h74211,
	       x__h74215;
  wire [8 : 0] IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011,
	       IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1210,
	       IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452,
	       IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1571;
  wire [7 : 0] IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1631,
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1266,
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1653,
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1655,
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1657,
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1664,
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d960,
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d956,
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d958,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90,
	       _theResult_____2_snd_fst__h21487,
	       _theResult_____2_snd_fst__h28774,
	       _theResult___exp__h67523,
	       _theResult___exp__h79174,
	       _theResult___fst_exp__h39505,
	       _theResult___fst_exp__h39520,
	       _theResult___fst_exp__h66941,
	       _theResult___fst_exp__h66944,
	       _theResult___fst_exp__h67023,
	       _theResult___fst_exp__h67029,
	       _theResult___fst_exp__h67032,
	       _theResult___fst_exp__h67542,
	       _theResult___fst_exp__h78612,
	       _theResult___fst_exp__h78615,
	       _theResult___fst_exp__h78640,
	       _theResult___fst_exp__h78655,
	       _theResult___fst_exp__h78694,
	       _theResult___fst_exp__h78700,
	       _theResult___fst_exp__h78703,
	       _theResult___fst_exp__h79193,
	       _theResult___snd_fst__h1552,
	       _theResult___snd_fst__h1554,
	       _theResult___snd_fst_exp__h66950,
	       _theResult___snd_fst_exp__h78621,
	       as1_BITS_30_TO_23_MINUS_127__q2,
	       bs1_BITS_30_TO_23_MINUS_127__q3,
	       cs1_BITS_30_TO_23_MINUS_127__q9,
	       diff__h57400,
	       din_exp8558_MINUS_127__q11,
	       din_exp9395_MINUS_127__q4,
	       din_exp__h39395,
	       din_exp__h78558,
	       din_inc___2_exp__h67559,
	       din_inc___2_exp__h79242,
	       e__h21094,
	       exp___1__h21088,
	       exp__h1582,
	       exp__h1584,
	       exp_add_s1__h1499,
	       exp_diff_s6__h21370,
	       exponent__h22124,
	       exponent__h28780,
	       op2__h29163,
	       out_exp__h67526,
	       out_exp__h79177,
	       rg_exponent_s9__h1035,
	       shift_count__h1016,
	       x7442_MINUS_127__q10,
	       x__h21119,
	       x__h3829,
	       x__h57442,
	       x__h74275,
	       y__h3707,
	       y__h3830,
	       y__h4209,
	       y__h4947,
	       y__h5028,
	       y__h5142,
	       y__h7735;
  wire [5 : 0] IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1208;
  wire [4 : 0] IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d773,
	       IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1569,
	       leftshift_count__h22123,
	       out__h22194,
	       spliced_bits__h22242;
  wire [3 : 0] IF_y7658_OR_y7656_THEN_1_ELSE_0__q1,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425,
	       a__h2839,
	       b__h11936,
	       b__h2840,
	       carrrg_b__h11607,
	       carrrg_b__h11948,
	       carrrg_b__h2852,
	       carrrg_b__h3510,
	       carrrg_b__h6634,
	       carrrg_b__h7676,
	       carrrg_b__h9378,
	       p__h11603,
	       p__h11944,
	       p__h2848,
	       p__h3506,
	       p__h6630,
	       p__h7672,
	       p__h9374,
	       spliced_bits__h11517,
	       spliced_bits__h11858,
	       spliced_bits__h1744,
	       spliced_bits__h1774,
	       spliced_bits__h1804,
	       spliced_bits__h22365,
	       spliced_bits__h22395,
	       spliced_bits__h22425,
	       spliced_bits__h22454,
	       spliced_bits__h2757,
	       spliced_bits__h3415,
	       spliced_bits__h6485,
	       spliced_bits__h6544,
	       spliced_bits__h9288;
  wire [2 : 0] _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d346,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d583,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d544,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d545,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98,
	       grs__h1040,
	       spliced_bits__h22578,
	       spliced_bits__h22608,
	       spliced_bits__h22638,
	       spliced_bits__h22668,
	       spliced_bits__h22698,
	       spliced_bits__h22728,
	       spliced_bits__h22757;
  wire [1 : 0] IF_sfdin6935_BIT_24_THEN_2_ELSE_0__q6,
	       IF_sfdin8606_BIT_4_THEN_2_ELSE_0__q13,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d565,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80,
	       _theResult___snd_fst__h67089,
	       _theResult___snd_fst__h78745,
	       e__h24699,
	       e__h24840,
	       e__h24981,
	       e__h25122,
	       e__h25263,
	       e__h25404,
	       e__h25545,
	       e__h25686,
	       e__h25827,
	       e__h25968,
	       e__h26109,
	       e__h26250,
	       e__h26390,
	       guard__h58861,
	       guard__h73581,
	       guard__h73615,
	       spliced_bits__h23123,
	       spliced_bits__h23192,
	       spliced_bits__h23261,
	       spliced_bits__h23330,
	       spliced_bits__h23399,
	       spliced_bits__h23468,
	       spliced_bits__h23537,
	       spliced_bits__h23606,
	       spliced_bits__h23675,
	       spliced_bits__h23744,
	       spliced_bits__h23813,
	       spliced_bits__h23882,
	       spliced_bits__h23951;
  wire IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1365,
       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1693,
       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1694,
       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1696,
       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1698,
       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1704,
       IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1701,
       IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d618,
       IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d944,
       IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d946,
       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366,
       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368,
       IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1359,
       IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_bs1_1_ETC___d1357,
       NOT_IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AN_ETC___d1691,
       NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1683,
       NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1688,
       NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412,
       NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_NO_ETC___d980,
       NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_as_ETC___d984,
       NOT_as1_07_BIT_31_349_EQ_bs1_17_BIT_31_350_354___d1355,
       NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390,
       _0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30_TO__ETC___d1211,
       _0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_ETC___d1572,
       _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d664,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60,
       _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d986,
       _theResult_____2_snd_snd_snd_fst__h21477,
       _theResult_____2_snd_snd_snd_fst__h28778,
       _theResult_____2_snd_snd_snd_snd_fst__h28885,
       _theResult_____2_snd_snd_snd_snd_fst__h28912,
       _theResult_____2_snd_snd_snd_snd_snd_fst__h28957,
       _theResult_____2_snd_snd_snd_snd_snd_fst__h29005,
       a__h15743,
       a__h15950,
       a__h16157,
       a__h2402,
       as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953,
       as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_07_B_ETC___d949,
       b__h15537,
       cin__h15745,
       cin__h15952,
       cin__h19065,
       cin__h20108,
       cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319,
       cs1_302_BIT_31_367_EQ_IF_as1_07_BITS_30_TO_23__ETC___d1413,
       rg_sign_s9__h1037,
       sfdlsb__h59402,
       sign_s1__h1498,
       spliced_bits_BIT_3___h21082,
       sticky_bit_s9__h22129,
       sticky_bit_s9__h28784,
       sticky_bit_s9__h28832,
       x__h10060,
       x__h10127,
       x__h10217,
       x__h10522,
       x__h10592,
       x__h10707,
       x__h10709,
       x__h10711,
       x__h10781,
       x__h10848,
       x__h10938,
       x__h12147,
       x__h12228,
       x__h12561,
       x__h12563,
       x__h12633,
       x__h12700,
       x__h13098,
       x__h13100,
       x__h13136,
       x__h13178,
       x__h13498,
       x__h13500,
       x__h13502,
       x__h13525,
       x__h13567,
       x__h13631,
       x__h14569,
       x__h14571,
       x__h14652,
       x__h14719,
       x__h14827,
       x__h14897,
       x__h15012,
       x__h15014,
       x__h15016,
       x__h15018,
       x__h15042,
       x__h15086,
       x__h15153,
       x__h15243,
       x__h15587,
       x__h15687,
       x__h15794,
       x__h15894,
       x__h16001,
       x__h16101,
       x__h16208,
       x__h16308,
       x__h17241,
       x__h17322,
       x__h17727,
       x__h17794,
       x__h18200,
       x__h18202,
       x__h18283,
       x__h18350,
       x__h18508,
       x__h18578,
       x__h18693,
       x__h18695,
       x__h18697,
       x__h18699,
       x__h18723,
       x__h18767,
       x__h18834,
       x__h18924,
       x__h19241,
       x__h19243,
       x__h19245,
       x__h19280,
       x__h19324,
       x__h19391,
       x__h19551,
       x__h19621,
       x__h19736,
       x__h19738,
       x__h19740,
       x__h19742,
       x__h19766,
       x__h19810,
       x__h19877,
       x__h19967,
       x__h20288,
       x__h20290,
       x__h20369,
       x__h20433,
       x__h20591,
       x__h20658,
       x__h29019,
       x__h3958,
       x__h3960,
       x__h4041,
       x__h4108,
       x__h4268,
       x__h4338,
       x__h4453,
       x__h4455,
       x__h4457,
       x__h4527,
       x__h4594,
       x__h4684,
       x__h5335,
       x__h5337,
       x__h5339,
       x__h5375,
       x__h5417,
       x__h5481,
       x__h5585,
       x__h5652,
       x__h5765,
       x__h5767,
       x__h5769,
       x__h5771,
       x__h5836,
       x__h5900,
       x__h5986,
       x__h6799,
       x__h6801,
       x__h6882,
       x__h6949,
       x__h7057,
       x__h7127,
       x__h7242,
       x__h7244,
       x__h7246,
       x__h7316,
       x__h7383,
       x__h7473,
       x__h7893,
       x__h7895,
       x__h7976,
       x__h8043,
       x__h8151,
       x__h8221,
       x__h8336,
       x__h8338,
       x__h8340,
       x__h8410,
       x__h8477,
       x__h8567,
       x__h8938,
       x__h8940,
       x__h9021,
       x__h9088,
       x__h9543,
       x__h9545,
       x__h9626,
       x__h9693,
       x__h9801,
       x__h9871,
       x__h9986,
       x__h9988,
       x__h9990,
       y__h10523,
       y__h10525,
       y__h10648,
       y__h10708,
       y__h10710,
       y__h10712,
       y__h10714,
       y__h12148,
       y__h12150,
       y__h12377,
       y__h12562,
       y__h12564,
       y__h12566,
       y__h13099,
       y__h13101,
       y__h13137,
       y__h13181,
       y__h13321,
       y__h13499,
       y__h13501,
       y__h13503,
       y__h14570,
       y__h14572,
       y__h14574,
       y__h14828,
       y__h14830,
       y__h14953,
       y__h15013,
       y__h15015,
       y__h15017,
       y__h15019,
       y__h15481,
       y__h15688,
       y__h15895,
       y__h16102,
       y__h16309,
       y__h17242,
       y__h17471,
       y__h17656,
       y__h17658,
       y__h18201,
       y__h18203,
       y__h18205,
       y__h18509,
       y__h18511,
       y__h18634,
       y__h18694,
       y__h18696,
       y__h18698,
       y__h18700,
       y__h19242,
       y__h19244,
       y__h19246,
       y__h19281,
       y__h19325,
       y__h19327,
       y__h19393,
       y__h19552,
       y__h19554,
       y__h19677,
       y__h19737,
       y__h19739,
       y__h19741,
       y__h19743,
       y__h20289,
       y__h20291,
       y__h20293,
       y__h20592,
       y__h20594,
       y__h20712,
       y__h3959,
       y__h3961,
       y__h3963,
       y__h4269,
       y__h4271,
       y__h4394,
       y__h4454,
       y__h4456,
       y__h4458,
       y__h4460,
       y__h5336,
       y__h5338,
       y__h5340,
       y__h5586,
       y__h5588,
       y__h5706,
       y__h5766,
       y__h5768,
       y__h5770,
       y__h5772,
       y__h6800,
       y__h6802,
       y__h6804,
       y__h7058,
       y__h7060,
       y__h7183,
       y__h7243,
       y__h7245,
       y__h7247,
       y__h7249,
       y__h7894,
       y__h7896,
       y__h7898,
       y__h8152,
       y__h8154,
       y__h8277,
       y__h8337,
       y__h8339,
       y__h8341,
       y__h8343,
       y__h8939,
       y__h8941,
       y__h8943,
       y__h9544,
       y__h9546,
       y__h9548,
       y__h9802,
       y__h9804,
       y__h9927,
       y__h9987,
       y__h9989,
       y__h9991,
       y__h9993;

  // submodule obj_inp
  file_read obj_inp(.RST(RST_N),
		    .clk(CLK),
		    .read(obj_inp$read),
		    .EN(obj_inp$EN),
		    .out_a(obj_inp$out_a),
		    .out_b(obj_inp$out_b),
		    .out_c(obj_inp$out_c));

  // register as1
  assign as1$D_IN = rg_af ;
  assign as1$EN = 1'd1 ;

  // register bs1
  assign bs1$D_IN = rg_bf ;
  assign bs1$EN = 1'd1 ;

  // register count
  assign count$D_IN = count + 32'd1 ;
  assign count$EN = 1'd1 ;

  // register cs1
  assign cs1$D_IN = rg_cf ;
  assign cs1$EN = 1'd1 ;

  // register failed_cases
  assign failed_cases$D_IN = failed_cases + 32'd1 ;
  assign failed_cases$EN =
	     mac_out_r[30:23] !=
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640[30:23] ||
	     mac_out_r[22:2] !=
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640[22:2] ;

  // register mac_out_r
  assign mac_out_r$D_IN =
	     { rg_sign_s9__h1037,
	       rg_exponent_s9__h1035,
	       CASE_grs040_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BIT_ETC__q16 } ;
  assign mac_out_r$EN = 1'd1 ;

  // register mac_rg_A
  assign mac_rg_A$D_IN = obj_inp$out_a ;
  assign mac_rg_A$EN = 1'd1 ;

  // register mac_rg_B
  assign mac_rg_B$D_IN = obj_inp$out_b ;
  assign mac_rg_B$EN = 1'd1 ;

  // register mac_rg_C
  assign mac_rg_C$D_IN = obj_inp$out_c ;
  assign mac_rg_C$EN = 1'd1 ;

  // register rg_a
  assign rg_a$D_IN = 16'h0 ;
  assign rg_a$EN = 1'b0 ;

  // register rg_af
  assign rg_af$D_IN = { obj_inp$out_a, 16'd0 } ;
  assign rg_af$EN = 1'd1 ;

  // register rg_b
  assign rg_b$D_IN = 16'h0 ;
  assign rg_b$EN = 1'b0 ;

  // register rg_bf
  assign rg_bf$D_IN = { obj_inp$out_b, 16'd0 } ;
  assign rg_bf$EN = 1'd1 ;

  // register rg_c
  assign rg_c$D_IN = 32'h0 ;
  assign rg_c$EN = 1'b0 ;

  // register rg_cf
  assign rg_cf$D_IN = obj_inp$out_c ;
  assign rg_cf$EN = 1'd1 ;

  // register rg_r
  assign rg_r$D_IN = 1'b0 ;
  assign rg_r$EN = 1'b0 ;

  // submodule obj_inp
  assign obj_inp$read = 1'b1 ;
  assign obj_inp$EN = 1'd1 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30__ETC__q5 =
	     _0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30_TO__ETC___d1211 ?
	       _theResult___snd__h67021 :
	       _theResult___snd__h67016 ;
  assign IF_0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_ETC__q12 =
	     _0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_ETC___d1572 ?
	       _theResult___snd__h78692 :
	       _theResult___snd__h78687 ;
  assign IF_0b0_CONCAT_NOT_IF_NOT_IF_as1_07_BITS_30_TO__ETC___d1634 =
	     sfd__h78722[24] ?
	       ((_theResult___snd_fst_exp__h78621 == 8'd254) ?
		  31'h7F800000 :
		  { din_inc___2_exp__h79242, sfd__h78722[23:1] }) :
	       { IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1631,
		 sfd__h78722[22:0] } ;
  assign IF_0b0_CONCAT_NOT_IF_NOT_as1_07_BITS_30_TO_23__ETC___d1341 =
	     sfd__h67051[24] ?
	       ((_theResult___snd_fst_exp__h66950 == 8'd254) ?
		  31'h7F800000 :
		  { din_inc___2_exp__h67559, sfd__h67051[23:1] }) :
	       { IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1266,
		 sfd__h67051[22:0] } ;
  assign IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 =
	     (din_exp__h39395 == 8'd0) ?
	       9'd386 :
	       { din_exp9395_MINUS_127__q4[7], din_exp9395_MINUS_127__q4 } ;
  assign IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1208 =
	     (sfdres__h58542[47] ?
		6'd0 :
		(sfdres__h58542[46] ?
		   6'd1 :
		   (sfdres__h58542[45] ?
		      6'd2 :
		      (sfdres__h58542[44] ?
			 6'd3 :
			 (sfdres__h58542[43] ?
			    6'd4 :
			    (sfdres__h58542[42] ?
			       6'd5 :
			       (sfdres__h58542[41] ?
				  6'd6 :
				  (sfdres__h58542[40] ?
				     6'd7 :
				     (sfdres__h58542[39] ?
					6'd8 :
					(sfdres__h58542[38] ?
					   6'd9 :
					   (sfdres__h58542[37] ?
					      6'd10 :
					      (sfdres__h58542[36] ?
						 6'd11 :
						 (sfdres__h58542[35] ?
						    6'd12 :
						    (sfdres__h58542[34] ?
						       6'd13 :
						       (sfdres__h58542[33] ?
							  6'd14 :
							  (sfdres__h58542[32] ?
							     6'd15 :
							     (sfdres__h58542[31] ?
								6'd16 :
								(sfdres__h58542[30] ?
								   6'd17 :
								   (sfdres__h58542[29] ?
								      6'd18 :
								      (sfdres__h58542[28] ?
									 6'd19 :
									 (sfdres__h58542[27] ?
									    6'd20 :
									    (sfdres__h58542[26] ?
									       6'd21 :
									       (sfdres__h58542[25] ?
										  6'd22 :
										  (sfdres__h58542[24] ?
										     6'd23 :
										     (sfdres__h58542[23] ?
											6'd24 :
											(sfdres__h58542[22] ?
											   6'd25 :
											   (sfdres__h58542[21] ?
											      6'd26 :
											      (sfdres__h58542[20] ?
												 6'd27 :
												 (sfdres__h58542[19] ?
												    6'd28 :
												    (sfdres__h58542[18] ?
												       6'd29 :
												       (sfdres__h58542[17] ?
													  6'd30 :
													  (sfdres__h58542[16] ?
													     6'd31 :
													     (sfdres__h58542[15] ?
														6'd32 :
														(sfdres__h58542[14] ?
														   6'd33 :
														   (sfdres__h58542[13] ?
														      6'd34 :
														      (sfdres__h58542[12] ?
															 6'd35 :
															 (sfdres__h58542[11] ?
															    6'd36 :
															    (sfdres__h58542[10] ?
															       6'd37 :
															       (sfdres__h58542[9] ?
																  6'd38 :
																  (sfdres__h58542[8] ?
																     6'd39 :
																     (sfdres__h58542[7] ?
																	6'd40 :
																	(sfdres__h58542[6] ?
																	   6'd41 :
																	   (sfdres__h58542[5] ?
																	      6'd42 :
																	      (sfdres__h58542[4] ?
																		 6'd43 :
																		 (sfdres__h58542[3] ?
																		    6'd44 :
																		    (sfdres__h58542[2] ?
																		       6'd45 :
																		       (sfdres__h58542[1] ?
																			  6'd46 :
																			  (sfdres__h58542[0] ?
																			     6'd47 :
																			     6'd48)))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1210 =
	     IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 -
	     9'd386 ;
  assign IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1337 =
	     (sfdres__h58542[47] &&
	      IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h66941, sfdin__h66935[47:25] } ;
  assign IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d773 =
	     (spliced_bits__h22454[3] & spliced_bits__h22425[3]) ?
	       5'b10000 :
	       ((~spliced_bits__h22454[3]) ?
		  { 1'b0, spliced_bits__h22454 } :
		  { 2'b01, spliced_bits__h22425[2:0] }) ;
  assign IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1569 =
	     (sfdin__h73628[27] ?
		5'd0 :
		(sfdin__h73628[26] ?
		   5'd1 :
		   (sfdin__h73628[25] ?
		      5'd2 :
		      (sfdin__h73628[24] ?
			 5'd3 :
			 (sfdin__h73628[23] ?
			    5'd4 :
			    (sfdin__h73628[22] ?
			       5'd5 :
			       (sfdin__h73628[21] ?
				  5'd6 :
				  (sfdin__h73628[20] ?
				     5'd7 :
				     (sfdin__h73628[19] ?
					5'd8 :
					(sfdin__h73628[18] ?
					   5'd9 :
					   (sfdin__h73628[17] ?
					      5'd10 :
					      (sfdin__h73628[16] ?
						 5'd11 :
						 (sfdin__h73628[15] ?
						    5'd12 :
						    (sfdin__h73628[14] ?
						       5'd13 :
						       (sfdin__h73628[13] ?
							  5'd14 :
							  (sfdin__h73628[12] ?
							     5'd15 :
							     (sfdin__h73628[11] ?
								5'd16 :
								(sfdin__h73628[10] ?
								   5'd17 :
								   (sfdin__h73628[9] ?
								      5'd18 :
								      (sfdin__h73628[8] ?
									 5'd19 :
									 (sfdin__h73628[7] ?
									    5'd20 :
									    (sfdin__h73628[6] ?
									       5'd21 :
									       (sfdin__h73628[5] ?
										  5'd22 :
										  (sfdin__h73628[4] ?
										     5'd23 :
										     (sfdin__h73628[3] ?
											5'd24 :
											(sfdin__h73628[2] ?
											   5'd25 :
											   (sfdin__h73628[1] ?
											      5'd26 :
											      (sfdin__h73628[0] ?
												 5'd27 :
												 5'd28)))))))))))))))))))))))))))) -
	     5'd1 ;
  assign IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1613 =
	     (sfdin__h73628[27] &&
	      IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h78612, sfdin__h78606[27:5] } ;
  assign IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675 =
	     (IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[31] ^
	      IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d657[31]) ?
	       a_temp__h21535 - b_temp__h21536 :
	       a_temp__h21535 + b_temp__h21536 ;
  assign IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1631 =
	     (_theResult___snd_fst_exp__h78621 == 8'd0 &&
	      sfd__h78722[24:23] == 2'b01) ?
	       8'd1 :
	       _theResult___snd_fst_exp__h78621 ;
  assign IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1639 =
	     (_theResult___snd_fst_exp__h78621 == 8'd255 ||
	      guard__h73615 == 2'b0 ||
	      guard__h73615 == 2'b01) ?
	       IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1613 :
	       IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1638 ;
  assign IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1442 =
	     (diff__h57400 < 8'd28) ?
	       result__h74223 :
	       ((IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1429 ==
		 27'd0) ?
		  opB__h57396 :
		  28'd1) ;
  assign IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 =
	     (din_exp__h78558 == 8'd0) ?
	       9'd386 :
	       { din_exp8558_MINUS_127__q11[7], din_exp8558_MINUS_127__q11 } ;
  assign IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1571 =
	     IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 -
	     9'd386 ;
  assign IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1266 =
	     (_theResult___snd_fst_exp__h66950 == 8'd0 &&
	      sfd__h67051[24:23] == 2'b01) ?
	       8'd1 :
	       _theResult___snd_fst_exp__h66950 ;
  assign IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1345 =
	     (_theResult___snd_fst_exp__h66950 == 8'd255 ||
	      guard__h58861 == 2'b0 ||
	      guard__h58861 == 2'b01) ?
	       IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1337 :
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1344 ;
  assign IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1365 =
	     (_theResult___snd_fst_exp__h66950 == 8'd255 ||
	      guard__h58861 == 2'b0 ||
	      guard__h58861 == 2'b01 ||
	      guard__h58861 == 2'b10) ?
	       NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_as_ETC___d984 &&
	       NOT_as1_07_BIT_31_349_EQ_bs1_17_BIT_31_350_354___d1355 :
	       guard__h58861 == 2'b11 &&
	       NOT_as1_07_BIT_31_349_EQ_bs1_17_BIT_31_350_354___d1355 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1369 =
	     IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368 ?
	       23'd0 :
	       23'd4194304 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1371 =
	     (x__h57442 == 8'd255 && x__h67580 == 23'd0) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1346 :
	       cs1[30:0] ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1372 =
	     (x__h57442 == 8'd255 && x__h67580 == 23'd0 &&
	      cs1[30:23] == 8'd255 &&
	      cs1[22:0] == 23'd0) ?
	       { 8'd255,
		 IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1369 } :
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1371 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1374 =
	     (x__h57442 == 8'd255 && x__h67580[22]) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1346 :
	       ((cs1[30:23] == 8'd255 && cs1[22]) ?
		  cs1[30:0] :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1372) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1376 =
	     (x__h57442 == 8'd255 && x__h67580 != 23'd0 && !x__h67580[22]) ?
	       { x__h57442, sfd__h73599 } :
	       ((cs1[30:23] == 8'd255 && cs1[22:0] != 23'd0 && !cs1[22]) ?
		  { cs1[30:23], sfd__h46154 } :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1374) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399 =
	     (x__h57442 == 8'd0) ?
	       10'd898 :
	       { {2{x7442_MINUS_127__q10[7]}}, x7442_MINUS_127__q10 } ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640 =
	     (x__h57442 == 8'd255 && x__h67580 != 23'd0 && !x__h67580[22] ||
	      cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319) ?
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1376 :
	       IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1639 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1653 =
	     (x__h57442 == 8'd255 && x__h67580 == 23'd0 &&
	      cs1[30:23] == 8'd255 &&
	      cs1[22:0] == 23'd0) ?
	       8'd255 :
	       ((x__h57442 == 8'd255 && x__h67580 == 23'd0) ?
		  x__h57442 :
		  cs1[30:23]) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1655 =
	     (x__h57442 == 8'd255 && x__h67580[22]) ?
	       x__h57442 :
	       ((cs1[30:23] == 8'd255 && cs1[22]) ?
		  cs1[30:23] :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1653) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1657 =
	     (x__h57442 == 8'd255 && x__h67580 != 23'd0 && !x__h67580[22]) ?
	       x__h57442 :
	       ((cs1[30:23] == 8'd255 && cs1[22:0] != 23'd0 && !cs1[22]) ?
		  cs1[30:23] :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1655) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1664 =
	     (x__h57442 == 8'd255 && x__h67580 != 23'd0 && !x__h67580[22] ||
	      cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319) ?
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1657 :
	       _theResult___fst_exp__h79193 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1668 =
	     (x__h57442 == 8'd255 && x__h67580 == 23'd0 &&
	      cs1[30:23] == 8'd255 &&
	      cs1[22:0] == 23'd0) ?
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1369 :
	       ((x__h57442 == 8'd255 && x__h67580 == 23'd0) ?
		  x__h67580 :
		  cs1[22:0]) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1672 =
	     (x__h57442 == 8'd255 && x__h67580 != 23'd0 && !x__h67580[22]) ?
	       sfd__h73599 :
	       IF_cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NO_ETC___d1671 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1679 =
	     (x__h57442 == 8'd255 && x__h67580 != 23'd0 && !x__h67580[22] ||
	      cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319) ?
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1672 :
	       _theResult___fst_sfd__h79194 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1693 =
	     (x__h57442 == 8'd255 && x__h67580 == 23'd0) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 :
	       cs1[31] ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1694 =
	     (x__h57442 == 8'd255 && x__h67580 == 23'd0 &&
	      cs1[30:23] == 8'd255 &&
	      cs1[22:0] == 23'd0) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368 &&
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 :
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1693 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1696 =
	     (x__h57442 == 8'd255 && x__h67580[22]) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 :
	       ((cs1[30:23] == 8'd255 && cs1[22]) ?
		  cs1[31] :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1694) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1698 =
	     (x__h57442 == 8'd255 && x__h67580 != 23'd0 && !x__h67580[22]) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 :
	       ((cs1[30:23] == 8'd255 && cs1[22:0] != 23'd0 && !cs1[22]) ?
		  cs1[31] :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1696) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1704 =
	     (x__h57442 == 8'd255 && x__h67580 != 23'd0 && !x__h67580[22] ||
	      cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319) ?
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1698 :
	       ((_theResult___snd_fst_exp__h78621 == 8'd255 ||
		 guard__h73615 == 2'b0 ||
		 guard__h73615 == 2'b01 ||
		 guard__h73615 == 2'b10) ?
		  IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1701 :
		  guard__h73615 == 2'b11 &&
		  IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1701) ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645 =
	     (rg_mult_s5__h1004[30:23] != 8'd255 &&
	      rg_C_s5__h1005[30:23] != 8'd255) ?
	       _theResult_____3_fst__h21372 :
	       rg_mult_s6__h21376 ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d657 =
	     (rg_mult_s5__h1004[30:23] != 8'd255 &&
	      rg_C_s5__h1005[30:23] != 8'd255) ?
	       _theResult_____3_snd_fst__h21374 :
	       rg_C_s6__h21377 ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d890 =
	     (rg_mult_s5__h1004[30:23] != 8'd255 &&
	      rg_C_s5__h1005[30:23] != 8'd255) ?
	       _theResult_____2_fst__h21485 :
	       ((rg_C_s5__h1005[22:0] != 23'd0 ||
		 rg_mult_s5__h1004[22:0] != 23'd0) ?
		  27'd67108864 :
		  27'd0) ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d892 =
	     IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d890[26:4] +
	     23'd1 ;
  assign IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1429 =
	     { NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		 x__h57442 != 8'd0 :
		 cs1[30:23] != 8'd0,
	       NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		 x__h67580 :
		 cs1[22:0],
	       3'b0 } ;
  assign IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1701 =
	     NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
	       cs1[31] :
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 ;
  assign IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d614 =
	     (mac_rg_A[14:7] != 8'd0 && mac_rg_B[14:7] != 8'd0 &&
	      mac_rg_A[14:7] != 8'd255 &&
	      mac_rg_B[14:7] != 8'd255) ?
	       { exp__h1584, mantissa__h1586 } :
	       { (mac_rg_A[14:7] != 8'd0 && mac_rg_B[14:7] != 8'd0 &&
		  (mac_rg_A[14:7] == 8'd255 || mac_rg_B[14:7] == 8'd255)) ?
		   8'd255 :
		   (((mac_rg_A[14:7] != 8'd255 || mac_rg_B[14:7] != 8'd0) &&
		     (mac_rg_A[14:7] != 8'd0 || mac_rg_B[14:7] != 8'd255) &&
		     (mac_rg_A[14:7] == 8'd0 || mac_rg_B[14:7] == 8'd0)) ?
		      8'd0 :
		      8'd255),
		 (mac_rg_A[14:7] != 8'd0 && mac_rg_B[14:7] != 8'd0 &&
		  (mac_rg_A[14:7] == 8'd255 || mac_rg_B[14:7] == 8'd255) ||
		  (mac_rg_A[14:7] != 8'd255 || mac_rg_B[14:7] != 8'd0) &&
		  (mac_rg_A[14:7] != 8'd0 || mac_rg_B[14:7] != 8'd255) &&
		  (mac_rg_A[14:7] == 8'd0 || mac_rg_B[14:7] == 8'd0)) ?
		   23'd0 :
		   23'd4194304 } ;
  assign IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d618 =
	     IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d614[30:23] <
	     mac_rg_C[30:23] ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943 =
	     ((as1[30:23] == 8'd0) ?
		10'd898 :
		{ {2{as1_BITS_30_TO_23_MINUS_127__q2[7]}},
		  as1_BITS_30_TO_23_MINUS_127__q2 }) +
	     ((bs1[30:23] == 8'd0) ?
		10'd898 :
		{ {2{bs1_BITS_30_TO_23_MINUS_127__q3[7]}},
		  bs1_BITS_30_TO_23_MINUS_127__q3 }) ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d944 =
	     (IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943 ^
	      10'h200) <=
	     10'd639 ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d946 =
	     (IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943 ^
	      10'h200) <
	     10'd361 ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1286 =
	     (as1[30:23] == 8'd255 && as1[22:0] != 23'd0 && !as1[22]) ?
	       sfd__h31096 :
	       ((bs1[30:23] == 8'd255 && bs1[22:0] != 23'd0 && !bs1[22]) ?
		  sfd__h31099 :
		  IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1284) ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1346 =
	     as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953 ?
	       ((as1[30:23] == 8'd255 && as1[22:0] != 23'd0 && !as1[22]) ?
		  { as1[30:23], sfd__h31096 } :
		  IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1334) :
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1345 ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 =
	     as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953 ?
	       ((as1[30:23] == 8'd255 && as1[22:0] != 23'd0 && !as1[22]) ?
		  as1[31] :
		  IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1359) :
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1365 ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368 =
	     IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 ==
	     cs1[31] ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d960 =
	     (as1[30:23] == 8'd255 && as1[22:0] != 23'd0 && !as1[22]) ?
	       as1[30:23] :
	       ((bs1[30:23] == 8'd255 && bs1[22:0] != 23'd0 && !bs1[22]) ?
		  bs1[30:23] :
		  IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d958) ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1282 =
	     (as1[30:23] == 8'd255 && as1[22:0] == 23'd0 &&
	      bs1[30:23] == 8'd0 &&
	      bs1[22:0] == 23'd0 ||
	      as1[30:23] == 8'd0 && as1[22:0] == 23'd0 &&
	      bs1[30:23] == 8'd255 &&
	      bs1[22:0] == 23'd0) ?
	       23'd4194304 :
	       23'd0 ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1284 =
	     (as1[30:23] == 8'd255 && as1[22]) ?
	       as1[22:0] :
	       ((bs1[30:23] == 8'd255 && bs1[22]) ?
		  bs1[22:0] :
		  IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1282) ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d956 =
	     (as1[30:23] == 8'd255 && as1[22:0] == 23'd0 ||
	      bs1[30:23] == 8'd255 && bs1[22:0] == 23'd0) ?
	       8'd255 :
	       ((as1[30:23] == 8'd0 && as1[22:0] == 23'd0 ||
		 bs1[30:23] == 8'd0 && bs1[22:0] == 23'd0 ||
		 IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d944) ?
		  8'd0 :
		  8'd255) ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d958 =
	     (as1[30:23] == 8'd255 && as1[22]) ?
	       as1[30:23] :
	       ((bs1[30:23] == 8'd255 && bs1[22]) ?
		  bs1[30:23] :
		  IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d956) ;
  assign IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1334 =
	     (bs1[30:23] == 8'd255 && bs1[22:0] != 23'd0 && !bs1[22]) ?
	       { bs1[30:23], sfd__h31099 } :
	       ((as1[30:23] == 8'd255 && as1[22]) ?
		  as1[30:0] :
		  ((bs1[30:23] == 8'd255 && bs1[22]) ?
		     bs1[30:0] :
		     { IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d956,
		       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1282 })) ;
  assign IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1359 =
	     (bs1[30:23] == 8'd255 && bs1[22:0] != 23'd0 && !bs1[22]) ?
	       bs1[31] :
	       ((as1[30:23] == 8'd255 && as1[22]) ?
		  as1[31] :
		  IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_bs1_1_ETC___d1357) ;
  assign IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_bs1_1_ETC___d1357 =
	     (bs1[30:23] == 8'd255 && bs1[22]) ?
	       bs1[31] :
	       (as1[30:23] != 8'd255 || as1[22:0] != 23'd0 ||
		bs1[30:23] != 8'd0 ||
		bs1[22:0] != 23'd0) &&
	       (as1[30:23] != 8'd0 || as1[22:0] != 23'd0 ||
		bs1[30:23] != 8'd255 ||
		bs1[22:0] != 23'd0) &&
	       NOT_as1_07_BIT_31_349_EQ_bs1_17_BIT_31_350_354___d1355 ;
  assign IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395 =
	     (cs1[30:23] == 8'd0) ?
	       10'd898 :
	       { {2{cs1_BITS_30_TO_23_MINUS_127__q9[7]}},
		 cs1_BITS_30_TO_23_MINUS_127__q9 } ;
  assign IF_cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NO_ETC___d1671 =
	     (cs1[30:23] == 8'd255 && cs1[22:0] != 23'd0 && !cs1[22]) ?
	       sfd__h46154 :
	       ((x__h57442 == 8'd255 && x__h67580[22]) ?
		  x__h67580 :
		  ((cs1[30:23] == 8'd255 && cs1[22]) ?
		     cs1[22:0] :
		     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1668)) ;
  assign IF_sfdin6935_BIT_24_THEN_2_ELSE_0__q6 =
	     sfdin__h66935[24] ? 2'd2 : 2'd0 ;
  assign IF_sfdin8606_BIT_4_THEN_2_ELSE_0__q13 =
	     sfdin__h78606[4] ? 2'd2 : 2'd0 ;
  assign IF_y7658_OR_y7656_THEN_1_ELSE_0__q1 =
	     (y__h17658 | y__h17656) ? 4'd1 : 4'd0 ;
  assign NOT_IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AN_ETC___d1691 =
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1664 !=
	     8'd0 ||
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1679 !=
	     23'd0 ||
	     NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1688 ||
	     (NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		cs1_302_BIT_31_367_EQ_IF_as1_07_BITS_30_TO_23__ETC___d1413 :
		IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368) ;
  assign NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1683 =
	     (x__h57442 != 8'd255 || x__h67580 == 23'd0 || x__h67580[22]) &&
	     NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390 &&
	     sfdin__h73628[27] &&
	     IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 ==
	     9'd127 ;
  assign NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1688 =
	     (x__h57442 != 8'd255 || x__h67580 == 23'd0 || x__h67580[22]) &&
	     NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390 &&
	     NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1683 |
	     (_theResult___snd_fst_exp__h78621 != 8'd255 &&
	      guard__h73615 != 2'b0) ;
  assign NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 =
	     (IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395 ^
	      10'h200) >
	     (IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399 ^
	      10'h200) ||
	     IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395 ==
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399 &&
	     sfdB__h57415 > sfdA__h57414 ;
  assign NOT_as1_07_BITS_30_TO_23_08_EQ_0_32_72_CONCAT__ETC___d992 =
	     sfdres__h57458 >>
	     _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d985 ;
  assign NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_NO_ETC___d980 =
	     (as1[30:23] != 8'd255 || as1[22:0] != 23'd0) &&
	     (bs1[30:23] != 8'd255 || bs1[22:0] != 23'd0) &&
	     (as1[30:23] != 8'd0 || as1[22:0] != 23'd0) &&
	     (bs1[30:23] != 8'd0 || bs1[22:0] != 23'd0) &&
	     IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d944 &&
	     !IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d946 ;
  assign NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_as_ETC___d984 =
	     (as1[30:23] != 8'd255 || as1[22:0] == 23'd0 || as1[22]) &&
	     (bs1[30:23] != 8'd255 || bs1[22:0] == 23'd0 || bs1[22]) &&
	     (as1[30:23] != 8'd255 || !as1[22]) &&
	     (bs1[30:23] != 8'd255 || !bs1[22]) &&
	     NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_NO_ETC___d980 ;
  assign NOT_as1_07_BIT_31_349_EQ_bs1_17_BIT_31_350_354___d1355 =
	     as1[31] != bs1[31] ;
  assign NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390 =
	     (cs1[30:23] != 8'd255 || cs1[22:0] == 23'd0 || cs1[22]) &&
	     (x__h57442 != 8'd255 || !x__h67580[22]) &&
	     (cs1[30:23] != 8'd255 || !cs1[22]) &&
	     (x__h57442 != 8'd255 || x__h67580 != 23'd0) &&
	     (cs1[30:23] != 8'd255 || cs1[22:0] != 23'd0) ;
  assign _0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30_TO__ETC___d1211 =
	     ({ 3'd0,
		IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1208 } ^
	      9'h100) <=
	     (IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1210 ^
	      9'h100) ;
  assign _0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_ETC___d1572 =
	     ({ 4'd0,
		IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1569 } ^
	      9'h100) <=
	     (IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1571 ^
	      9'h100) ;
  assign _0b0_CONCAT_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_ETC___d1431 =
	     opB__h57396 >> diff__h57400 ;
  assign _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d664 =
	     mult_mant_s7__h1017 <= shiftedmantissa__h1019 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[5:2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[4:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150 =
	     x__h3829 & y__h3707 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153 =
	     x__h9986 | y__h9987 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[3:0] &
	     b__h11936 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174 =
	     x__h12561 | y__h12562 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20 =
	     x__h3829 & y__h7735 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207 =
	     spliced_bits__h9288[3:1] & spliced_bits__h11858[3:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211 =
	     spliced_bits__h9288[3:1] ^ spliced_bits__h11858[3:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229 =
	     { x__h8336 | y__h8337,
	       x__h16308 | y__h16309,
	       x__h16101 | y__h16102 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[7:4] &
	     mac_rg_A[6:3] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244 =
	     x__h16001 ^ cin__h15952 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264 =
	     x__h15894 | y__h15895 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267 =
	     x__h15794 ^ cin__h15745 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80 ^
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] |
	       y__h5706,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[5:2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[4:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297 =
	     x__h7242 | y__h7243 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[0] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d346 =
	     { x__h14827 | y__h14828,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] |
	       y__h14953,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d346 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350 =
	     x__h15687 | y__h15688 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356 =
	     x__h15587 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[2] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377 =
	     spliced_bits__h11517[3] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[5:2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[4:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39 =
	     x__h3829 & y__h5142 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425 =
	     a__h2839 & b__h2840 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448 =
	     a__h2402 & spliced_bits__h11517[2] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454 =
	     a__h2402 ^ spliced_bits__h11517[2] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479 =
	     spliced_bits__h2757[3:1] & { spliced_bits__h11517[1:0], 1'd0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483 =
	     spliced_bits__h2757[3:1] ^ { spliced_bits__h11517[1:0], 1'd0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[1:0] &
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[0],
	       1'b0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[1:0] ^
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[0],
	       1'b0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56 =
	     x__h3829 & y__h4947 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d565 =
	     { y__h19327 ^ (y__h19325 | y__h19677),
	       y__h19393 ^ cin__h19065 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d583 =
	     { x__h18508 | y__h18509,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] |
	       y__h18634,
	       IF_y7658_OR_y7656_THEN_1_ELSE_0__q1[0] } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[7] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[6] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63 =
	     x__h3829 & y__h5028 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73 =
	     x__h3829 & y__h4209 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[7:6] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[6:5] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[7:6] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[6:5] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90 =
	     x__h3829 & y__h3830 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d544 =
	     { x__h20591 | y__h20592,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[0] |
	       y__h20712,
	       cin__h20108 } ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d545 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232 ^
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d544 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98 =
	     { 1'd1,
	       spliced_bits__h6485[3],
	       x__h16208 ^
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[7] } ;
  assign _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d985 =
	     10'd898 -
	     IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943 ;
  assign _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d986 =
	     (_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d985 ^
	      10'h200) <=
	     10'd512 ;
  assign _theResult_____2_fst__h21485 =
	     (IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27:26] ==
	      2'b0) ?
	       rg_mant_s9__h22126 :
	       _theResult_____2_fst__h28772 ;
  assign _theResult_____2_fst__h28772 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27] ?
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[26:0] :
	       rg_mant_s9__h28829 ;
  assign _theResult_____2_snd_fst__h21487 =
	     (IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27:26] ==
	      2'b0) ?
	       exponent__h22124 :
	       _theResult_____2_snd_fst__h28774 ;
  assign _theResult_____2_snd_fst__h28774 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27] ?
	       exponent__h28780 :
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[30:23] ;
  assign _theResult_____2_snd_snd_snd_fst__h21477 =
	     rg_mult_s5__h1004[30:23] != 8'd255 &&
	     rg_C_s5__h1005[30:23] != 8'd255 &&
	     ((IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27:26] ==
	       2'b0) ?
		mantissa__h22125[3] :
		_theResult_____2_snd_snd_snd_fst__h28778) ;
  assign _theResult_____2_snd_snd_snd_fst__h28778 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27] ?
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[4] :
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[3] ;
  assign _theResult_____2_snd_snd_snd_snd_fst__h28885 =
	     rg_mult_s5__h1004[30:23] != 8'd255 &&
	     rg_C_s5__h1005[30:23] != 8'd255 &&
	     ((IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27:26] ==
	       2'b0) ?
		mantissa__h22125[2] :
		_theResult_____2_snd_snd_snd_snd_fst__h28912) ;
  assign _theResult_____2_snd_snd_snd_snd_fst__h28912 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27] ?
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[3] :
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[2] ;
  assign _theResult_____2_snd_snd_snd_snd_snd_fst__h28957 =
	     rg_mult_s5__h1004[30:23] != 8'd255 &&
	     rg_C_s5__h1005[30:23] != 8'd255 &&
	     ((IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27:26] ==
	       2'b0) ?
		sticky_bit_s9__h22129 :
		_theResult_____2_snd_snd_snd_snd_snd_fst__h29005) ;
  assign _theResult_____2_snd_snd_snd_snd_snd_fst__h29005 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27] ?
	       sticky_bit_s9__h28784 :
	       sticky_bit_s9__h28832 ;
  assign _theResult_____3_fst__h21372 =
	     (rg_mult_s5__h1004[30:23] != 8'd0 ||
	      rg_C_s5__h1005[30:23] != 8'd0) ?
	       rg_mult_s5__h1004 :
	       rg_mult_s6__h21623 ;
  assign _theResult_____3_snd_fst__h21374 =
	     (rg_mult_s5__h1004[30:23] != 8'd0 ||
	      rg_C_s5__h1005[30:23] != 8'd0) ?
	       rg_C_s5__h1005 :
	       rg_C_s6__h21624 ;
  assign _theResult___exp__h67523 =
	     sfd__h67051[24] ?
	       ((_theResult___snd_fst_exp__h66950 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h67559) :
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1266 ;
  assign _theResult___exp__h79174 =
	     sfd__h78722[24] ?
	       ((_theResult___snd_fst_exp__h78621 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h79242) :
	       IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1631 ;
  assign _theResult___fst_exp__h39505 =
	     (din_exp__h39395 == 8'd0) ? 8'd2 : din_exp__h39395 + 8'd1 ;
  assign _theResult___fst_exp__h39520 =
	     (din_exp__h39395 == 8'd0) ? 8'd1 : din_exp__h39395 ;
  assign _theResult___fst_exp__h66941 =
	     sfdres__h58542[47] ?
	       _theResult___fst_exp__h39505 :
	       _theResult___fst_exp__h67032 ;
  assign _theResult___fst_exp__h66944 =
	     (sfdres__h58542[47] &&
	      IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h66941 ;
  assign _theResult___fst_exp__h67023 =
	     din_exp__h39395 -
	     { 2'd0,
	       IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1208 } ;
  assign _theResult___fst_exp__h67029 =
	     (!sfdres__h58542[47] && !sfdres__h58542[46] &&
	      !sfdres__h58542[45] &&
	      !sfdres__h58542[44] &&
	      !sfdres__h58542[43] &&
	      !sfdres__h58542[42] &&
	      !sfdres__h58542[41] &&
	      !sfdres__h58542[40] &&
	      !sfdres__h58542[39] &&
	      !sfdres__h58542[38] &&
	      !sfdres__h58542[37] &&
	      !sfdres__h58542[36] &&
	      !sfdres__h58542[35] &&
	      !sfdres__h58542[34] &&
	      !sfdres__h58542[33] &&
	      !sfdres__h58542[32] &&
	      !sfdres__h58542[31] &&
	      !sfdres__h58542[30] &&
	      !sfdres__h58542[29] &&
	      !sfdres__h58542[28] &&
	      !sfdres__h58542[27] &&
	      !sfdres__h58542[26] &&
	      !sfdres__h58542[25] &&
	      !sfdres__h58542[24] &&
	      !sfdres__h58542[23] &&
	      !sfdres__h58542[22] &&
	      !sfdres__h58542[21] &&
	      !sfdres__h58542[20] &&
	      !sfdres__h58542[19] &&
	      !sfdres__h58542[18] &&
	      !sfdres__h58542[17] &&
	      !sfdres__h58542[16] &&
	      !sfdres__h58542[15] &&
	      !sfdres__h58542[14] &&
	      !sfdres__h58542[13] &&
	      !sfdres__h58542[12] &&
	      !sfdres__h58542[11] &&
	      !sfdres__h58542[10] &&
	      !sfdres__h58542[9] &&
	      !sfdres__h58542[8] &&
	      !sfdres__h58542[7] &&
	      !sfdres__h58542[6] &&
	      !sfdres__h58542[5] &&
	      !sfdres__h58542[4] &&
	      !sfdres__h58542[3] &&
	      !sfdres__h58542[2] &&
	      !sfdres__h58542[1] &&
	      !sfdres__h58542[0] ||
	      !_0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30_TO__ETC___d1211) ?
	       8'd0 :
	       _theResult___fst_exp__h67023 ;
  assign _theResult___fst_exp__h67032 =
	     (!sfdres__h58542[47] && sfdres__h58542[46]) ?
	       _theResult___fst_exp__h39520 :
	       _theResult___fst_exp__h67029 ;
  assign _theResult___fst_exp__h67542 =
	     (_theResult___snd_fst_exp__h66950 == 8'd255 ||
	      guard__h58861 == 2'b0 ||
	      guard__h58861 == 2'b01) ?
	       _theResult___snd_fst_exp__h66950 :
	       CASE_guard8861_0b10_out_exp7526_0b11_theResult_ETC__q8 ;
  assign _theResult___fst_exp__h78612 =
	     sfdin__h73628[27] ?
	       _theResult___fst_exp__h78640 :
	       _theResult___fst_exp__h78703 ;
  assign _theResult___fst_exp__h78615 =
	     (sfdin__h73628[27] &&
	      IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h78612 ;
  assign _theResult___fst_exp__h78640 =
	     (din_exp__h78558 == 8'd0) ? 8'd2 : din_exp__h78558 + 8'd1 ;
  assign _theResult___fst_exp__h78655 =
	     (din_exp__h78558 == 8'd0) ? 8'd1 : din_exp__h78558 ;
  assign _theResult___fst_exp__h78694 =
	     din_exp__h78558 -
	     { 3'd0,
	       IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1569 } ;
  assign _theResult___fst_exp__h78700 =
	     (!sfdin__h73628[27] && !sfdin__h73628[26] &&
	      !sfdin__h73628[25] &&
	      !sfdin__h73628[24] &&
	      !sfdin__h73628[23] &&
	      !sfdin__h73628[22] &&
	      !sfdin__h73628[21] &&
	      !sfdin__h73628[20] &&
	      !sfdin__h73628[19] &&
	      !sfdin__h73628[18] &&
	      !sfdin__h73628[17] &&
	      !sfdin__h73628[16] &&
	      !sfdin__h73628[15] &&
	      !sfdin__h73628[14] &&
	      !sfdin__h73628[13] &&
	      !sfdin__h73628[12] &&
	      !sfdin__h73628[11] &&
	      !sfdin__h73628[10] &&
	      !sfdin__h73628[9] &&
	      !sfdin__h73628[8] &&
	      !sfdin__h73628[7] &&
	      !sfdin__h73628[6] &&
	      !sfdin__h73628[5] &&
	      !sfdin__h73628[4] &&
	      !sfdin__h73628[3] &&
	      !sfdin__h73628[2] &&
	      !sfdin__h73628[1] &&
	      !sfdin__h73628[0] ||
	      !_0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_ETC___d1572) ?
	       8'd0 :
	       _theResult___fst_exp__h78694 ;
  assign _theResult___fst_exp__h78703 =
	     (!sfdin__h73628[27] && sfdin__h73628[26]) ?
	       _theResult___fst_exp__h78655 :
	       _theResult___fst_exp__h78700 ;
  assign _theResult___fst_exp__h79193 =
	     (_theResult___snd_fst_exp__h78621 == 8'd255 ||
	      guard__h73615 == 2'b0 ||
	      guard__h73615 == 2'b01) ?
	       _theResult___snd_fst_exp__h78621 :
	       CASE_guard3615_0b10_out_exp9177_0b11_theResult_ETC__q15 ;
  assign _theResult___fst_sfd__h66945 =
	     (sfdres__h58542[47] &&
	      IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 ==
	      9'd127) ?
	       23'd8388607 :
	       sfdin__h66935[47:25] ;
  assign _theResult___fst_sfd__h67543 =
	     (_theResult___snd_fst_exp__h66950 == 8'd255 ||
	      guard__h58861 == 2'b0 ||
	      guard__h58861 == 2'b01) ?
	       _theResult___snd_fst_sfd__h66951 :
	       CASE_guard8861_0b10_out_sfd7527_0b11_theResult_ETC__q7 ;
  assign _theResult___fst_sfd__h78616 =
	     (sfdin__h73628[27] &&
	      IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 ==
	      9'd127) ?
	       23'd8388607 :
	       sfdin__h78606[27:5] ;
  assign _theResult___fst_sfd__h79194 =
	     (_theResult___snd_fst_exp__h78621 == 8'd255 ||
	      guard__h73615 == 2'b0 ||
	      guard__h73615 == 2'b01) ?
	       _theResult___snd_fst_sfd__h78622 :
	       CASE_guard3615_0b10_out_sfd9178_0b11_theResult_ETC__q14 ;
  assign _theResult___sfd__h67524 =
	     sfd__h67051[24] ?
	       ((_theResult___snd_fst_exp__h66950 == 8'd254) ?
		  23'd0 :
		  sfd__h67051[23:1]) :
	       sfd__h67051[22:0] ;
  assign _theResult___sfd__h79175 =
	     sfd__h78722[24] ?
	       ((_theResult___snd_fst_exp__h78621 == 8'd254) ?
		  23'd0 :
		  sfd__h78722[23:1]) :
	       sfd__h78722[22:0] ;
  assign _theResult___snd__h59405 =
	     { NOT_as1_07_BITS_30_TO_23_08_EQ_0_32_72_CONCAT__ETC___d992[47:1],
	       NOT_as1_07_BITS_30_TO_23_08_EQ_0_32_72_CONCAT__ETC___d992[0] |
	       sfdlsb__h59402 } ;
  assign _theResult___snd__h66964 = { sfdres__h58542[46:0], 1'd0 } ;
  assign _theResult___snd__h66978 =
	     (!sfdres__h58542[47] && sfdres__h58542[46]) ?
	       _theResult___snd__h66980 :
	       _theResult___snd__h66992 ;
  assign _theResult___snd__h66980 = { sfdres__h58542[45:0], 2'd0 } ;
  assign _theResult___snd__h66992 =
	     (!sfdres__h58542[47] && !sfdres__h58542[46] &&
	      !sfdres__h58542[45] &&
	      !sfdres__h58542[44] &&
	      !sfdres__h58542[43] &&
	      !sfdres__h58542[42] &&
	      !sfdres__h58542[41] &&
	      !sfdres__h58542[40] &&
	      !sfdres__h58542[39] &&
	      !sfdres__h58542[38] &&
	      !sfdres__h58542[37] &&
	      !sfdres__h58542[36] &&
	      !sfdres__h58542[35] &&
	      !sfdres__h58542[34] &&
	      !sfdres__h58542[33] &&
	      !sfdres__h58542[32] &&
	      !sfdres__h58542[31] &&
	      !sfdres__h58542[30] &&
	      !sfdres__h58542[29] &&
	      !sfdres__h58542[28] &&
	      !sfdres__h58542[27] &&
	      !sfdres__h58542[26] &&
	      !sfdres__h58542[25] &&
	      !sfdres__h58542[24] &&
	      !sfdres__h58542[23] &&
	      !sfdres__h58542[22] &&
	      !sfdres__h58542[21] &&
	      !sfdres__h58542[20] &&
	      !sfdres__h58542[19] &&
	      !sfdres__h58542[18] &&
	      !sfdres__h58542[17] &&
	      !sfdres__h58542[16] &&
	      !sfdres__h58542[15] &&
	      !sfdres__h58542[14] &&
	      !sfdres__h58542[13] &&
	      !sfdres__h58542[12] &&
	      !sfdres__h58542[11] &&
	      !sfdres__h58542[10] &&
	      !sfdres__h58542[9] &&
	      !sfdres__h58542[8] &&
	      !sfdres__h58542[7] &&
	      !sfdres__h58542[6] &&
	      !sfdres__h58542[5] &&
	      !sfdres__h58542[4] &&
	      !sfdres__h58542[3] &&
	      !sfdres__h58542[2] &&
	      !sfdres__h58542[1] &&
	      !sfdres__h58542[0]) ?
	       sfdres__h58542 :
	       _theResult___snd__h66998 ;
  assign _theResult___snd__h66998 =
	     { IF_0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30__ETC__q5[45:0],
	       2'd0 } ;
  assign _theResult___snd__h67016 =
	     sfdres__h58542 <<
	     IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1210 ;
  assign _theResult___snd__h67021 =
	     sfdres__h58542 <<
	     IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1208 ;
  assign _theResult___snd__h78635 = { sfdin__h73628[26:0], 1'd0 } ;
  assign _theResult___snd__h78649 =
	     (!sfdin__h73628[27] && sfdin__h73628[26]) ?
	       _theResult___snd__h78651 :
	       _theResult___snd__h78663 ;
  assign _theResult___snd__h78651 = { sfdin__h73628[25:0], 2'd0 } ;
  assign _theResult___snd__h78663 =
	     (!sfdin__h73628[27] && !sfdin__h73628[26] &&
	      !sfdin__h73628[25] &&
	      !sfdin__h73628[24] &&
	      !sfdin__h73628[23] &&
	      !sfdin__h73628[22] &&
	      !sfdin__h73628[21] &&
	      !sfdin__h73628[20] &&
	      !sfdin__h73628[19] &&
	      !sfdin__h73628[18] &&
	      !sfdin__h73628[17] &&
	      !sfdin__h73628[16] &&
	      !sfdin__h73628[15] &&
	      !sfdin__h73628[14] &&
	      !sfdin__h73628[13] &&
	      !sfdin__h73628[12] &&
	      !sfdin__h73628[11] &&
	      !sfdin__h73628[10] &&
	      !sfdin__h73628[9] &&
	      !sfdin__h73628[8] &&
	      !sfdin__h73628[7] &&
	      !sfdin__h73628[6] &&
	      !sfdin__h73628[5] &&
	      !sfdin__h73628[4] &&
	      !sfdin__h73628[3] &&
	      !sfdin__h73628[2] &&
	      !sfdin__h73628[1] &&
	      !sfdin__h73628[0]) ?
	       sfdin__h73628 :
	       _theResult___snd__h78669 ;
  assign _theResult___snd__h78669 =
	     { IF_0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_ETC__q12[25:0],
	       2'd0 } ;
  assign _theResult___snd__h78687 =
	     sfdin__h73628 <<
	     IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1571 ;
  assign _theResult___snd__h78692 =
	     sfdin__h73628 <<
	     IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1569 ;
  assign _theResult___snd_fst__h1552 =
	     (mac_rg_A[14:7] == 8'd0 || mac_rg_B[14:7] == 8'd0) ?
	       8'd0 :
	       _theResult___snd_fst__h1554 ;
  assign _theResult___snd_fst__h1554 =
	     (mac_rg_A[14:7] == 8'd255 || mac_rg_B[14:7] == 8'd255) ?
	       8'd255 :
	       exp_add_s1__h1499 ;
  assign _theResult___snd_fst__h67089 =
	     { IF_sfdin6935_BIT_24_THEN_2_ELSE_0__q6[1],
	       { sfdin__h66935[23:0], 23'd0 } != 47'd0 } ;
  assign _theResult___snd_fst__h78745 =
	     { IF_sfdin8606_BIT_4_THEN_2_ELSE_0__q13[1],
	       { sfdin__h78606[3:0], 23'd0 } != 27'd0 } ;
  assign _theResult___snd_fst_exp__h66950 =
	     NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_as_ETC___d984 ?
	       _theResult___fst_exp__h66944 :
	       8'd0 ;
  assign _theResult___snd_fst_exp__h78621 =
	     ((x__h57442 != 8'd255 || x__h67580 == 23'd0 || x__h67580[22]) &&
	      NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390) ?
	       _theResult___fst_exp__h78615 :
	       8'd0 ;
  assign _theResult___snd_fst_sfd__h66951 =
	     NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_as_ETC___d984 ?
	       _theResult___fst_sfd__h66945 :
	       23'd0 ;
  assign _theResult___snd_fst_sfd__h78622 =
	     ((x__h57442 != 8'd255 || x__h67580 == 23'd0 || x__h67580[22]) &&
	      NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390) ?
	       _theResult___fst_sfd__h78616 :
	       23'd0 ;
  assign a__h15743 = x__h5375 ^ (x__h5585 | y__h5586) ;
  assign a__h15950 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 ^
	     (x__h5335 | y__h5336) ;
  assign a__h16157 = x__h5765 | y__h5766 ;
  assign a__h2402 = x__h10707 | y__h10708 ;
  assign a__h2839 = { x__h4453 | y__h4454, spliced_bits__h3415[3:1] } ;
  assign a__h57380 =
	     { 1'b0,
	       NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		 cs1[30:23] != 8'd0 :
		 x__h57442 != 8'd0,
	       NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		 cs1[22:0] :
		 x__h67580,
	       3'b0 } ;
  assign a_temp__h21535 =
	     _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d664 ?
	       { 2'd0, shiftedmantissa__h1019 } :
	       { 3'd1,
		 IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[22:0],
		 3'b0 } ;
  assign as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953 =
	     as1[30:23] == 8'd255 && as1[22:0] != 23'd0 && !as1[22] ||
	     bs1[30:23] == 8'd255 && bs1[22:0] != 23'd0 && !bs1[22] ||
	     as1[30:23] == 8'd255 && as1[22] ||
	     bs1[30:23] == 8'd255 && bs1[22] ||
	     as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_07_B_ETC___d949 ;
  assign as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_07_B_ETC___d949 =
	     as1[30:23] == 8'd255 && as1[22:0] == 23'd0 ||
	     bs1[30:23] == 8'd255 && bs1[22:0] == 23'd0 ||
	     as1[30:23] == 8'd0 && as1[22:0] == 23'd0 ||
	     bs1[30:23] == 8'd0 && bs1[22:0] == 23'd0 ||
	     !IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d944 ||
	     IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d946 ;
  assign as1_BITS_30_TO_23_MINUS_127__q2 = as1[30:23] - 8'd127 ;
  assign b__h11936 =
	     { mac_rg_A[2:0],
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[5] } ;
  assign b__h15537 = x__h13498 | y__h13499 ;
  assign b__h2840 =
	     { spliced_bits__h6544[2:0],
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[1] } ;
  assign b__h57382 =
	     ((x__h57442 != 8'd255 || x__h67580 == 23'd0 || x__h67580[22]) &&
	      NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390) ?
	       IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1442 :
	       opB__h57396 ;
  assign b_temp__h21536 =
	     _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d664 ?
	       { 3'd1,
		 IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[22:0],
		 3'b0 } :
	       { 2'd0, shiftedmantissa__h1019 } ;
  assign bs1_BITS_30_TO_23_MINUS_127__q3 = bs1[30:23] - 8'd127 ;
  assign c_mant_s7__h1018 =
	     { IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d657[22:0],
	       3'b0 } ;
  assign carrrg_b__h11607 =
	     { x__h13098 | y__h13099,
	       y__h13137 | y__h13321,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334,
	       1'b0 } ;
  assign carrrg_b__h11948 =
	     { x__h12147 | y__h12148,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[1] |
	       y__h12377,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0],
	       1'b0 } ;
  assign carrrg_b__h2852 =
	     { x__h8938 | y__h8939,
	       x__h10522 | y__h10523,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] |
	       y__h10648,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] } ;
  assign carrrg_b__h3510 =
	     { x__h3958 | y__h3959,
	       x__h4268 | y__h4269,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] |
	       y__h4394,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] } ;
  assign carrrg_b__h6634 =
	     { x__h6799 | y__h6800,
	       x__h7057 | y__h7058,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] |
	       y__h7183,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] } ;
  assign carrrg_b__h7676 =
	     { x__h7893 | y__h7894,
	       x__h8151 | y__h8152,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] |
	       y__h8277,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] } ;
  assign carrrg_b__h9378 =
	     { x__h9543 | y__h9544,
	       x__h9801 | y__h9802,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] |
	       y__h9927,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] } ;
  assign cin__h15745 = x__h15042 ^ (x__h14569 | y__h14570) ;
  assign cin__h15952 = x__h15012 | y__h15013 ;
  assign cin__h19065 = x__h18693 | y__h18694 ;
  assign cin__h20108 = x__h19736 | y__h19737 ;
  assign cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319 =
	     cs1[30:23] == 8'd255 && cs1[22:0] != 23'd0 && !cs1[22] ||
	     x__h57442 == 8'd255 && x__h67580[22] ||
	     cs1[30:23] == 8'd255 && cs1[22] ||
	     x__h57442 == 8'd255 && x__h67580 == 23'd0 ||
	     cs1[30:23] == 8'd255 && cs1[22:0] == 23'd0 ;
  assign cs1_302_BIT_31_367_EQ_IF_as1_07_BITS_30_TO_23__ETC___d1413 =
	     cs1[31] ==
	     IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 ;
  assign cs1_BITS_30_TO_23_MINUS_127__q9 = cs1[30:23] - 8'd127 ;
  assign diff__h57400 =
	     NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
	       x__h74211[7:0] :
	       x__h74215[7:0] ;
  assign din_exp8558_MINUS_127__q11 = din_exp__h78558 - 8'd127 ;
  assign din_exp9395_MINUS_127__q4 = din_exp__h39395 - 8'd127 ;
  assign din_exp__h39395 =
	     _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d986 ?
	       value__h39412[7:0] :
	       8'd0 ;
  assign din_exp__h78558 =
	     NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
	       cs1[30:23] :
	       x__h57442 ;
  assign din_inc___2_exp__h67559 = _theResult___snd_fst_exp__h66950 + 8'd1 ;
  assign din_inc___2_exp__h79242 = _theResult___snd_fst_exp__h78621 + 8'd1 ;
  assign e__h21094 = x__h21119 - 8'd127 ;
  assign e__h24699 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[0] ?
	       2'b01 :
	       2'b10 ;
  assign e__h24840 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[2] ?
	       2'b01 :
	       2'b10 ;
  assign e__h24981 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[4] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25122 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[6] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25263 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[8] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25404 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[10] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25545 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[12] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25686 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[14] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25827 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[16] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25968 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[18] ?
	       2'b01 :
	       2'b10 ;
  assign e__h26109 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[20] ?
	       2'b01 :
	       2'b10 ;
  assign e__h26250 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[22] ?
	       2'b01 :
	       2'b10 ;
  assign e__h26390 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[24] ?
	       2'b01 :
	       2'b10 ;
  assign exp___1__h21088 = exp__h1582 + 8'd1 ;
  assign exp__h1582 =
	     (mac_rg_A[14:7] == 8'd255 && mac_rg_B[14:7] == 8'd0 ||
	      mac_rg_A[14:7] == 8'd0 && mac_rg_B[14:7] == 8'd255) ?
	       8'd255 :
	       _theResult___snd_fst__h1552 ;
  assign exp__h1584 =
	     spliced_bits_BIT_3___h21082 ? exp___1__h21088 : exp__h1582 ;
  assign exp_add_s1__h1499 =
	     (e__h21094 > 8'd1 && e__h21094 < 8'd254) ? e__h21094 : 8'd0 ;
  assign exp_diff_s6__h21370 =
	     rg_mult_s5__h1004[30:23] - rg_C_s5__h1005[30:23] ;
  assign exponent__h22124 =
	     IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[30:23] -
	     op2__h29163 ;
  assign exponent__h28780 =
	     IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[30:23] +
	     8'd1 ;
  assign grs__h1040 =
	     { _theResult_____2_snd_snd_snd_fst__h21477,
	       _theResult_____2_snd_snd_snd_snd_fst__h28885,
	       _theResult_____2_snd_snd_snd_snd_snd_fst__h28957 } ;
  assign guard__h58861 =
	     (sfdres__h58542[47] &&
	      IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h67089 ;
  assign guard__h73581 =
	     (sfdin__h73628[27] &&
	      IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h78745 ;
  assign guard__h73615 =
	     ((x__h57442 != 8'd255 || x__h67580 == 23'd0 || x__h67580[22]) &&
	      NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390) ?
	       guard__h73581 :
	       2'd0 ;
  assign guard__h74218 = opB__h57396 << x__h74275 ;
  assign leftshift_count__h22123 = out__h22194 + 5'd1 ;
  assign mant_1__h1585 =
	     spliced_bits_BIT_3___h21082 ? mant_1__h21089 : mant_1__h21229 ;
  assign mant_1__h21089 =
	     { _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d545,
	       spliced_bits__h1744,
	       spliced_bits__h1774,
	       spliced_bits__h1804,
	       8'd0 } ;
  assign mant_1__h21229 =
	     { _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d545[1:0],
	       spliced_bits__h1744,
	       spliced_bits__h1774,
	       spliced_bits__h1804,
	       9'd0 } ;
  assign mantissa__h1586 = (exp__h1584 == 8'd255) ? 23'd0 : mant_1__h1585 ;
  assign mantissa__h22125 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[25:0] <<
	     leftshift_count__h22123 ;
  assign mul_result__h1003 =
	     { sign_s1__h1498,
	       IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d614 } ;
  assign mult_mant_s7__h1017 =
	     { 1'b1,
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[22:0],
	       3'b0 } ;
  assign op2__h29163 = { 3'd0, leftshift_count__h22123 } ;
  assign opAsfd__h57488 = { as1[30:23] != 8'd0, as1[22:0] } ;
  assign opB__h57396 =
	     { 1'b0,
	       IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1429 } ;
  assign opBsfd__h57489 = { bs1[30:23] != 8'd0, bs1[22:0] } ;
  assign out__h22194 =
	     (IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d773[4] &
	      spliced_bits__h22242[4]) ?
	       5'b0 :
	       ((~IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d773[4]) ?
		  IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d773 :
		  { 1'b1, spliced_bits__h22242[3:0] }) ;
  assign out_exp__h67526 =
	     _theResult___snd_fst_sfd__h66951[0] ?
	       _theResult___exp__h67523 :
	       _theResult___snd_fst_exp__h66950 ;
  assign out_exp__h79177 =
	     _theResult___snd_fst_sfd__h78622[0] ?
	       _theResult___exp__h79174 :
	       _theResult___snd_fst_exp__h78621 ;
  assign out_sfd__h67527 =
	     _theResult___snd_fst_sfd__h66951[0] ?
	       _theResult___sfd__h67524 :
	       _theResult___snd_fst_sfd__h66951 ;
  assign out_sfd__h79178 =
	     _theResult___snd_fst_sfd__h78622[0] ?
	       _theResult___sfd__h79175 :
	       _theResult___snd_fst_sfd__h78622 ;
  assign p__h11603 =
	     { x__h13525,
	       x__h13136,
	       y__h13181,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[1] ^
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[0] } ;
  assign p__h11944 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[3:0] ^
	     b__h11936 ;
  assign p__h2848 = a__h2839 ^ b__h2840 ;
  assign p__h3506 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[5:2] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[4:1] ;
  assign p__h6630 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[5:2] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[4:1] ;
  assign p__h7672 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[7:4] ^
	     mac_rg_A[6:3] ;
  assign p__h9374 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[5:2] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[4:1] ;
  assign result__h74206 = a__h57380 - b__h57382 ;
  assign result__h74223 =
	     { _0b0_CONCAT_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_ETC___d1431[27:1],
	       _0b0_CONCAT_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_ETC___d1431[0] |
	       guard__h74218 != 28'd0 } ;
  assign result__h74335 = a__h57380 + b__h57382 ;
  assign rg_C_s5__h1005 =
	     IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d618 ?
	       mul_result__h1003 :
	       mac_rg_C ;
  assign rg_C_s6__h21377 =
	     { rg_C_s5__h1005[31],
	       (rg_C_s5__h1005[22:0] == 23'd0) ?
		 31'h7F800000 :
		 { 8'd255, rg_C_s5__h1005[22:0] } } ;
  assign rg_C_s6__h21624 = { rg_C_s5__h1005[31], 31'd0 } ;
  assign rg_exponent_s9__h1035 =
	     (rg_mult_s5__h1004[30:23] != 8'd255 &&
	      rg_C_s5__h1005[30:23] != 8'd255) ?
	       _theResult_____2_snd_fst__h21487 :
	       8'd255 ;
  assign rg_mant_s9__h22126 = { mantissa__h22125, 1'b0 } ;
  assign rg_mant_s9__h28829 =
	     { IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[25:0],
	       1'b0 } ;
  assign rg_mult_s5__h1004 =
	     IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d618 ?
	       mac_rg_C :
	       mul_result__h1003 ;
  assign rg_mult_s6__h21376 =
	     { rg_mult_s5__h1004[31],
	       (rg_mult_s5__h1004[22:0] == 23'd0) ?
		 31'h7F800000 :
		 { 8'd255, rg_mult_s5__h1004[22:0] } } ;
  assign rg_mult_s6__h21623 = { rg_mult_s5__h1004[31], 31'd0 } ;
  assign rg_sign_s9__h1037 =
	     _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d664 ?
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d657[31] :
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[31] ;
  assign sfdA__h57414 = { 1'b0, x__h57442 != 8'd0, x__h67580, 3'b0 } ;
  assign sfdB__h57415 = { 1'b0, cs1[30:23] != 8'd0, cs1[22:0], 3'b0 } ;
  assign sfd__h31096 = { 1'd1, as1[21:0] } ;
  assign sfd__h31099 = { 1'd1, bs1[21:0] } ;
  assign sfd__h46154 = { 1'd1, cs1[21:0] } ;
  assign sfd__h67051 =
	     { 1'b0,
	       _theResult___snd_fst_exp__h66950 != 8'd0,
	       _theResult___snd_fst_sfd__h66951 } +
	     25'd1 ;
  assign sfd__h73599 = { 1'd1, x__h67580[21:0] } ;
  assign sfd__h78722 =
	     { 1'b0,
	       _theResult___snd_fst_exp__h78621 != 8'd0,
	       _theResult___snd_fst_sfd__h78622 } +
	     25'd1 ;
  assign sfdin__h66935 =
	     sfdres__h58542[47] ?
	       _theResult___snd__h66964 :
	       _theResult___snd__h66978 ;
  assign sfdin__h73628 =
	     (NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		!cs1_302_BIT_31_367_EQ_IF_as1_07_BITS_30_TO_23__ETC___d1413 :
		!IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368) ?
	       result__h74206 :
	       result__h74335 ;
  assign sfdin__h78606 =
	     sfdin__h73628[27] ?
	       _theResult___snd__h78635 :
	       _theResult___snd__h78649 ;
  assign sfdlsb__h59402 = x__h59487 != 48'd0 ;
  assign sfdres__h57458 = opAsfd__h57488 * opBsfd__h57489 ;
  assign sfdres__h58542 =
	     _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d986 ?
	       sfdres__h57458 :
	       _theResult___snd__h59405 ;
  assign shift_count__h1016 =
	     (rg_mult_s5__h1004[30:23] != 8'd255 &&
	      rg_C_s5__h1005[30:23] != 8'd255) ?
	       exp_diff_s6__h21370 :
	       8'd255 ;
  assign shiftedmantissa__h1019 = x__h21742 >> shift_count__h1016 ;
  assign sign_s1__h1498 = mac_rg_A[15] ^ mac_rg_B[15] ;
  assign spliced_bits_BIT_3___h21082 = x__h20288 | y__h20289 ;
  assign spliced_bits__h11517 = p__h11603 ^ carrrg_b__h11607 ;
  assign spliced_bits__h11858 = p__h11944 ^ carrrg_b__h11948 ;
  assign spliced_bits__h1744 =
	     { x__h19766 ^ (x__h19241 | y__h19242),
	       x__h19280 ^ (x__h19551 | y__h19552),
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d565 } ;
  assign spliced_bits__h1774 =
	     { x__h18723 ^ (x__h18200 | y__h18201),
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483 ^
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d583 } ;
  assign spliced_bits__h1804 =
	     { spliced_bits__h2757[0] ^ (x__h17241 | y__h17242),
	       spliced_bits__h3415[0] ^
	       (_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[1] |
		y__h17471),
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505 ^
	       { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0],
		 1'b0 } } ;
  assign spliced_bits__h22242 =
	     (spliced_bits__h22395[3] & spliced_bits__h22365[3]) ?
	       5'b10000 :
	       ((~spliced_bits__h22395[3]) ?
		  { 1'b0, spliced_bits__h22395 } :
		  { 2'b01, spliced_bits__h22365[2:0] }) ;
  assign spliced_bits__h22365 =
	     spliced_bits__h22578[2] ?
	       4'b1000 :
	       ((~spliced_bits__h22578[2]) ?
		  { 1'b0, spliced_bits__h22578 } :
		  4'd4) ;
  assign spliced_bits__h22395 =
	     (spliced_bits__h22638[2] & spliced_bits__h22608[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h22638[2]) ?
		  { 1'b0, spliced_bits__h22638 } :
		  { 2'b01, spliced_bits__h22608[1:0] }) ;
  assign spliced_bits__h22425 =
	     (spliced_bits__h22698[2] & spliced_bits__h22668[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h22698[2]) ?
		  { 1'b0, spliced_bits__h22698 } :
		  { 2'b01, spliced_bits__h22668[1:0] }) ;
  assign spliced_bits__h22454 =
	     (spliced_bits__h22757[2] & spliced_bits__h22728[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h22757[2]) ?
		  { 1'b0, spliced_bits__h22757 } :
		  { 2'b01, spliced_bits__h22728[1:0] }) ;
  assign spliced_bits__h22578 =
	     spliced_bits__h23951[1] ?
	       3'b100 :
	       ((~spliced_bits__h23951[1]) ?
		  { 1'b0, spliced_bits__h23951 } :
		  3'd2) ;
  assign spliced_bits__h22608 =
	     (spliced_bits__h23813[1] & spliced_bits__h23882[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23813[1]) ?
		  { 1'b0, spliced_bits__h23813 } :
		  { 2'b01, spliced_bits__h23882[0] }) ;
  assign spliced_bits__h22638 =
	     (spliced_bits__h23675[1] & spliced_bits__h23744[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23675[1]) ?
		  { 1'b0, spliced_bits__h23675 } :
		  { 2'b01, spliced_bits__h23744[0] }) ;
  assign spliced_bits__h22668 =
	     (spliced_bits__h23537[1] & spliced_bits__h23606[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23537[1]) ?
		  { 1'b0, spliced_bits__h23537 } :
		  { 2'b01, spliced_bits__h23606[0] }) ;
  assign spliced_bits__h22698 =
	     (spliced_bits__h23399[1] & spliced_bits__h23468[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23399[1]) ?
		  { 1'b0, spliced_bits__h23399 } :
		  { 2'b01, spliced_bits__h23468[0] }) ;
  assign spliced_bits__h22728 =
	     (spliced_bits__h23261[1] & spliced_bits__h23330[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23261[1]) ?
		  { 1'b0, spliced_bits__h23261 } :
		  { 2'b01, spliced_bits__h23330[0] }) ;
  assign spliced_bits__h22757 =
	     (spliced_bits__h23123[1] & spliced_bits__h23192[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23123[1]) ?
		  { 1'b0, spliced_bits__h23123 } :
		  { 2'b01, spliced_bits__h23192[0] }) ;
  assign spliced_bits__h23123 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[25] ?
	       2'b0 :
	       e__h26390 ;
  assign spliced_bits__h23192 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[23] ?
	       2'b0 :
	       e__h26250 ;
  assign spliced_bits__h23261 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[21] ?
	       2'b0 :
	       e__h26109 ;
  assign spliced_bits__h23330 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[19] ?
	       2'b0 :
	       e__h25968 ;
  assign spliced_bits__h23399 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[17] ?
	       2'b0 :
	       e__h25827 ;
  assign spliced_bits__h23468 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[15] ?
	       2'b0 :
	       e__h25686 ;
  assign spliced_bits__h23537 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[13] ?
	       2'b0 :
	       e__h25545 ;
  assign spliced_bits__h23606 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[11] ?
	       2'b0 :
	       e__h25404 ;
  assign spliced_bits__h23675 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[9] ?
	       2'b0 :
	       e__h25263 ;
  assign spliced_bits__h23744 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[7] ?
	       2'b0 :
	       e__h25122 ;
  assign spliced_bits__h23813 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[5] ?
	       2'b0 :
	       e__h24981 ;
  assign spliced_bits__h23882 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[3] ?
	       2'b0 :
	       e__h24840 ;
  assign spliced_bits__h23951 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[1] ?
	       2'b0 :
	       e__h24699 ;
  assign spliced_bits__h2757 = p__h2848 ^ carrrg_b__h2852 ;
  assign spliced_bits__h3415 = p__h3506 ^ carrrg_b__h3510 ;
  assign spliced_bits__h6485 = p__h7672 ^ carrrg_b__h7676 ;
  assign spliced_bits__h6544 = p__h6630 ^ carrrg_b__h6634 ;
  assign spliced_bits__h9288 = p__h9374 ^ carrrg_b__h9378 ;
  assign sticky_bit_s9__h22129 = mantissa__h22125[1] | mantissa__h22125[0] ;
  assign sticky_bit_s9__h28784 =
	     x__h29019 |
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[0] ;
  assign sticky_bit_s9__h28832 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[1] |
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[0] ;
  assign value__h39412 =
	     IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943 +
	     10'd127 ;
  assign x7442_MINUS_127__q10 = x__h57442 - 8'd127 ;
  assign x__h10060 = p__h9374[3] & p__h9374[2] ;
  assign x__h10127 = x__h10060 & p__h9374[1] ;
  assign x__h10217 = x__h10127 & p__h9374[0] ;
  assign x__h10522 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[1] |
	     y__h10525 ;
  assign x__h10592 = p__h2848[1] & p__h2848[0] ;
  assign x__h10707 = x__h10709 | y__h10710 ;
  assign x__h10709 = x__h10711 | y__h10712 ;
  assign x__h10711 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[3] |
	     y__h10714 ;
  assign x__h10781 = p__h2848[3] & p__h2848[2] ;
  assign x__h10848 = x__h10781 & p__h2848[1] ;
  assign x__h10938 = x__h10848 & p__h2848[0] ;
  assign x__h12147 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[2] |
	     y__h12150 ;
  assign x__h12228 = p__h11944[2] & p__h11944[1] ;
  assign x__h12561 = x__h12563 | y__h12564 ;
  assign x__h12563 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[3] |
	     y__h12566 ;
  assign x__h12633 = p__h11944[3] & p__h11944[2] ;
  assign x__h12700 = x__h12633 & p__h11944[1] ;
  assign x__h13098 = x__h13100 | y__h13101 ;
  assign x__h13100 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[7] &
	     spliced_bits__h6544[3] ;
  assign x__h13136 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[7] ^
	     spliced_bits__h6544[3] ;
  assign x__h13178 = x__h13136 & y__h13181 ;
  assign x__h13498 = x__h13500 | y__h13501 ;
  assign x__h13500 = x__h13502 | y__h13503 ;
  assign x__h13502 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297 ;
  assign x__h13525 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[0] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297 ;
  assign x__h13567 = x__h13525 & x__h13136 ;
  assign x__h13631 = x__h13567 & y__h13181 ;
  assign x__h14569 = x__h14571 | y__h14572 ;
  assign x__h14571 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[2] |
	     y__h14574 ;
  assign x__h14652 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] ;
  assign x__h14719 =
	     x__h14652 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] ;
  assign x__h14827 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[1] |
	     y__h14830 ;
  assign x__h14897 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] ;
  assign x__h15012 = x__h15014 | y__h15015 ;
  assign x__h15014 = x__h15016 | y__h15017 ;
  assign x__h15016 = x__h15018 | y__h15019 ;
  assign x__h15018 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174 ;
  assign x__h15042 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174 ;
  assign x__h15086 =
	     x__h15042 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[2] ;
  assign x__h15153 =
	     x__h15086 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] ;
  assign x__h15243 =
	     x__h15153 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] ;
  assign x__h15587 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[1] ^
	     b__h15537 ;
  assign x__h15687 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[1] &
	     b__h15537 ;
  assign x__h15794 = a__h15743 ^ spliced_bits__h6485[0] ;
  assign x__h15894 = a__h15743 & spliced_bits__h6485[0] ;
  assign x__h16001 = a__h15950 ^ spliced_bits__h6485[1] ;
  assign x__h16101 = a__h15950 & spliced_bits__h6485[1] ;
  assign x__h16208 = a__h16157 ^ spliced_bits__h6485[2] ;
  assign x__h16308 = a__h16157 & spliced_bits__h6485[2] ;
  assign x__h17241 =
	     spliced_bits__h3415[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[1] ;
  assign x__h17322 =
	     spliced_bits__h3415[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505[1] ;
  assign x__h17727 = spliced_bits__h2757[0] & spliced_bits__h3415[0] ;
  assign x__h17794 =
	     x__h17727 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505[1] ;
  assign x__h18200 = x__h18202 | y__h18203 ;
  assign x__h18202 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[2] |
	     y__h18205 ;
  assign x__h18283 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] ;
  assign x__h18350 =
	     x__h18283 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] ;
  assign x__h18508 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[1] |
	     y__h18511 ;
  assign x__h18578 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] ;
  assign x__h18693 = x__h18695 | y__h18696 ;
  assign x__h18695 = x__h18697 | y__h18698 ;
  assign x__h18697 = x__h18699 | y__h18700 ;
  assign x__h18699 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[0] ;
  assign x__h18723 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[0] ;
  assign x__h18767 =
	     x__h18723 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[2] ;
  assign x__h18834 =
	     x__h18767 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] ;
  assign x__h18924 =
	     x__h18834 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] ;
  assign x__h19241 = x__h19243 | y__h19244 ;
  assign x__h19243 = x__h19245 | y__h19246 ;
  assign x__h19245 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350 ;
  assign x__h19280 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350 ;
  assign x__h19324 = x__h19280 & y__h19327 ;
  assign x__h19391 = x__h19324 & y__h19393 ;
  assign x__h19551 = y__h19281 | y__h19554 ;
  assign x__h19621 = y__h19327 & y__h19393 ;
  assign x__h19736 = x__h19738 | y__h19739 ;
  assign x__h19738 = x__h19740 | y__h19741 ;
  assign x__h19740 = x__h19742 | y__h19743 ;
  assign x__h19742 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264 ;
  assign x__h19766 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264 ;
  assign x__h19810 = x__h19766 & x__h19280 ;
  assign x__h19877 = x__h19810 & y__h19327 ;
  assign x__h19967 = x__h19877 & y__h19393 ;
  assign x__h20288 = x__h20290 | y__h20291 ;
  assign x__h20290 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[2] |
	     y__h20293 ;
  assign x__h20369 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[2] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[1] ;
  assign x__h20433 =
	     x__h20369 &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[0] ;
  assign x__h20591 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[1] |
	     y__h20594 ;
  assign x__h20658 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[1] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[0] ;
  assign x__h21119 = mac_rg_A[14:7] + mac_rg_B[14:7] ;
  assign x__h21742 = { 1'b1, c_mant_s7__h1018 } ;
  assign x__h29019 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[2] |
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[1] ;
  assign x__h32056 =
	     10'd48 -
	     _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d985 ;
  assign x__h3829 = { 1'b1, mac_rg_A[6:0] } ;
  assign x__h3958 = x__h3960 | y__h3961 ;
  assign x__h3960 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[2] |
	     y__h3963 ;
  assign x__h4041 = p__h3506[2] & p__h3506[1] ;
  assign x__h4108 = x__h4041 & p__h3506[0] ;
  assign x__h4268 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[1] |
	     y__h4271 ;
  assign x__h4338 = p__h3506[1] & p__h3506[0] ;
  assign x__h4453 = x__h4455 | y__h4456 ;
  assign x__h4455 = x__h4457 | y__h4458 ;
  assign x__h4457 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[3] |
	     y__h4460 ;
  assign x__h4527 = p__h3506[3] & p__h3506[2] ;
  assign x__h4594 = x__h4527 & p__h3506[1] ;
  assign x__h4684 = x__h4594 & p__h3506[0] ;
  assign x__h5335 = x__h5337 | y__h5338 ;
  assign x__h5337 = x__h5339 | y__h5340 ;
  assign x__h5339 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[7] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[6] ;
  assign x__h5375 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[7] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[6] ;
  assign x__h5417 =
	     x__h5375 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] ;
  assign x__h5481 =
	     x__h5417 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] ;
  assign x__h5585 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[1] |
	     y__h5588 ;
  assign x__h5652 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] ;
  assign x__h57442 =
	     as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953 ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d960 :
	       _theResult___fst_exp__h67542 ;
  assign x__h5765 = x__h5767 | y__h5768 ;
  assign x__h5767 = x__h5769 | y__h5770 ;
  assign x__h5769 = x__h5771 | y__h5772 ;
  assign x__h5771 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[7] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[6] ;
  assign x__h5836 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 &
	     x__h5375 ;
  assign x__h5900 =
	     x__h5836 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] ;
  assign x__h59487 = sfdres__h57458 << x__h32056 ;
  assign x__h5986 =
	     x__h5900 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] ;
  assign x__h67580 =
	     as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953 ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1286 :
	       _theResult___fst_sfd__h67543 ;
  assign x__h6799 = x__h6801 | y__h6802 ;
  assign x__h6801 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[2] |
	     y__h6804 ;
  assign x__h6882 = p__h6630[2] & p__h6630[1] ;
  assign x__h6949 = x__h6882 & p__h6630[0] ;
  assign x__h7057 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[1] |
	     y__h7060 ;
  assign x__h7127 = p__h6630[1] & p__h6630[0] ;
  assign x__h7242 = x__h7244 | y__h7245 ;
  assign x__h7244 = x__h7246 | y__h7247 ;
  assign x__h7246 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[3] |
	     y__h7249 ;
  assign x__h7316 = p__h6630[3] & p__h6630[2] ;
  assign x__h7383 = x__h7316 & p__h6630[1] ;
  assign x__h74211 =
	     IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395 -
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399 ;
  assign x__h74215 =
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399 -
	     IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395 ;
  assign x__h74275 = 8'd28 - diff__h57400 ;
  assign x__h7473 = x__h7383 & p__h6630[0] ;
  assign x__h7893 = x__h7895 | y__h7896 ;
  assign x__h7895 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[2] |
	     y__h7898 ;
  assign x__h7976 = p__h7672[2] & p__h7672[1] ;
  assign x__h8043 = x__h7976 & p__h7672[0] ;
  assign x__h8151 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[1] |
	     y__h8154 ;
  assign x__h8221 = p__h7672[1] & p__h7672[0] ;
  assign x__h8336 = x__h8338 | y__h8339 ;
  assign x__h8338 = x__h8340 | y__h8341 ;
  assign x__h8340 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[3] |
	     y__h8343 ;
  assign x__h8410 = p__h7672[3] & p__h7672[2] ;
  assign x__h8477 = x__h8410 & p__h7672[1] ;
  assign x__h8567 = x__h8477 & p__h7672[0] ;
  assign x__h8938 = x__h8940 | y__h8941 ;
  assign x__h8940 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[2] |
	     y__h8943 ;
  assign x__h9021 = p__h2848[2] & p__h2848[1] ;
  assign x__h9088 = x__h9021 & p__h2848[0] ;
  assign x__h9543 = x__h9545 | y__h9546 ;
  assign x__h9545 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[2] |
	     y__h9548 ;
  assign x__h9626 = p__h9374[2] & p__h9374[1] ;
  assign x__h9693 = x__h9626 & p__h9374[0] ;
  assign x__h9801 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[1] |
	     y__h9804 ;
  assign x__h9871 = p__h9374[1] & p__h9374[0] ;
  assign x__h9986 = x__h9988 | y__h9989 ;
  assign x__h9988 = x__h9990 | y__h9991 ;
  assign x__h9990 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[3] |
	     y__h9993 ;
  assign y__h10523 =
	     x__h10592 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h10525 =
	     p__h2848[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] ;
  assign y__h10648 =
	     p__h2848[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h10708 =
	     x__h10938 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h10710 =
	     x__h10848 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] ;
  assign y__h10712 =
	     x__h10781 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[1] ;
  assign y__h10714 =
	     p__h2848[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[2] ;
  assign y__h12148 =
	     x__h12228 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0] ;
  assign y__h12150 =
	     p__h11944[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[1] ;
  assign y__h12377 =
	     p__h11944[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0] ;
  assign y__h12562 =
	     x__h12700 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0] ;
  assign y__h12564 =
	     x__h12633 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[1] ;
  assign y__h12566 =
	     p__h11944[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[2] ;
  assign y__h13099 =
	     x__h13178 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 ;
  assign y__h13101 = x__h13136 & y__h13137 ;
  assign y__h13137 = spliced_bits__h9288[0] & spliced_bits__h11858[0] ;
  assign y__h13181 = spliced_bits__h9288[0] ^ spliced_bits__h11858[0] ;
  assign y__h13321 =
	     y__h13181 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 ;
  assign y__h13499 =
	     x__h13631 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 ;
  assign y__h13501 = x__h13567 & y__h13137 ;
  assign y__h13503 = x__h13525 & x__h13100 ;
  assign y__h14570 =
	     x__h14719 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h14572 =
	     x__h14652 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] ;
  assign y__h14574 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[1] ;
  assign y__h14828 =
	     x__h14897 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h14830 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] ;
  assign y__h14953 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h15013 =
	     x__h15243 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h15015 =
	     x__h15153 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] ;
  assign y__h15017 =
	     x__h15086 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[1] ;
  assign y__h15019 =
	     x__h15042 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[2] ;
  assign y__h15481 =
	     spliced_bits__h11517[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[1] ;
  assign y__h15688 =
	     x__h15587 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[2] ;
  assign y__h15895 = x__h15794 & cin__h15745 ;
  assign y__h16102 = x__h16001 & cin__h15952 ;
  assign y__h16309 =
	     x__h16208 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[7] ;
  assign y__h17242 =
	     x__h17322 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0] ;
  assign y__h17471 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0] ;
  assign y__h17656 =
	     x__h17794 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0] ;
  assign y__h17658 =
	     x__h17727 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[1] ;
  assign y__h18201 = x__h18350 & IF_y7658_OR_y7656_THEN_1_ELSE_0__q1[0] ;
  assign y__h18203 =
	     x__h18283 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] ;
  assign y__h18205 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[1] ;
  assign y__h18509 = x__h18578 & IF_y7658_OR_y7656_THEN_1_ELSE_0__q1[0] ;
  assign y__h18511 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] ;
  assign y__h18634 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] &
	     IF_y7658_OR_y7656_THEN_1_ELSE_0__q1[0] ;
  assign y__h18694 = x__h18924 & IF_y7658_OR_y7656_THEN_1_ELSE_0__q1[0] ;
  assign y__h18696 =
	     x__h18834 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] ;
  assign y__h18698 =
	     x__h18767 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[1] ;
  assign y__h18700 =
	     x__h18723 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[2] ;
  assign y__h19242 = x__h19391 & cin__h19065 ;
  assign y__h19244 = x__h19324 & y__h19325 ;
  assign y__h19246 = x__h19280 & y__h19281 ;
  assign y__h19281 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356 &
	     y__h15481 ;
  assign y__h19325 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448 ;
  assign y__h19327 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356 ^
	     y__h15481 ;
  assign y__h19393 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448 ;
  assign y__h19552 = x__h19621 & cin__h19065 ;
  assign y__h19554 = y__h19327 & y__h19325 ;
  assign y__h19677 = y__h19393 & cin__h19065 ;
  assign y__h19737 = x__h19967 & cin__h19065 ;
  assign y__h19739 = x__h19877 & y__h19325 ;
  assign y__h19741 = x__h19810 & y__h19281 ;
  assign y__h19743 = x__h19766 & x__h19245 ;
  assign y__h20289 = x__h20433 & cin__h20108 ;
  assign y__h20291 =
	     x__h20369 &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[0] ;
  assign y__h20293 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[2] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[1] ;
  assign y__h20592 = x__h20658 & cin__h20108 ;
  assign y__h20594 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[1] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[0] ;
  assign y__h20712 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[0] &
	     cin__h20108 ;
  assign y__h3707 = {8{mac_rg_B[0]}} ;
  assign y__h3830 = {8{mac_rg_B[1]}} ;
  assign y__h3959 =
	     x__h4108 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h3961 =
	     x__h4041 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] ;
  assign y__h3963 =
	     p__h3506[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[1] ;
  assign y__h4209 = {8{mac_rg_B[2]}} ;
  assign y__h4269 =
	     x__h4338 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h4271 =
	     p__h3506[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] ;
  assign y__h4394 =
	     p__h3506[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h4454 =
	     x__h4684 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h4456 =
	     x__h4594 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] ;
  assign y__h4458 =
	     x__h4527 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[1] ;
  assign y__h4460 =
	     p__h3506[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[2] ;
  assign y__h4947 = {8{mac_rg_B[4]}} ;
  assign y__h5028 = {8{mac_rg_B[3]}} ;
  assign y__h5142 = {8{mac_rg_B[5]}} ;
  assign y__h5336 =
	     x__h5481 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5338 =
	     x__h5417 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] ;
  assign y__h5340 =
	     x__h5375 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[1] ;
  assign y__h5586 =
	     x__h5652 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5588 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] ;
  assign y__h5706 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5766 =
	     x__h5986 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5768 =
	     x__h5900 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] ;
  assign y__h5770 =
	     x__h5836 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[1] ;
  assign y__h5772 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 &
	     x__h5339 ;
  assign y__h6800 =
	     x__h6949 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h6802 =
	     x__h6882 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] ;
  assign y__h6804 =
	     p__h6630[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[1] ;
  assign y__h7058 =
	     x__h7127 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h7060 =
	     p__h6630[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] ;
  assign y__h7183 =
	     p__h6630[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h7243 =
	     x__h7473 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h7245 =
	     x__h7383 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] ;
  assign y__h7247 =
	     x__h7316 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[1] ;
  assign y__h7249 =
	     p__h6630[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[2] ;
  assign y__h7735 = {8{mac_rg_B[6]}} ;
  assign y__h7894 =
	     x__h8043 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h7896 =
	     x__h7976 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] ;
  assign y__h7898 =
	     p__h7672[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[1] ;
  assign y__h8152 =
	     x__h8221 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h8154 =
	     p__h7672[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] ;
  assign y__h8277 =
	     p__h7672[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h8337 =
	     x__h8567 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h8339 =
	     x__h8477 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] ;
  assign y__h8341 =
	     x__h8410 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[1] ;
  assign y__h8343 =
	     p__h7672[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[2] ;
  assign y__h8939 =
	     x__h9088 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h8941 =
	     x__h9021 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] ;
  assign y__h8943 =
	     p__h2848[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[1] ;
  assign y__h9544 =
	     x__h9693 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9546 =
	     x__h9626 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] ;
  assign y__h9548 =
	     p__h9374[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[1] ;
  assign y__h9802 =
	     x__h9871 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9804 =
	     p__h9374[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] ;
  assign y__h9927 =
	     p__h9374[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9987 =
	     x__h10217 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9989 =
	     x__h10127 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] ;
  assign y__h9991 =
	     x__h10060 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[1] ;
  assign y__h9993 =
	     p__h9374[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[2] ;
  always@(guard__h58861 or out_sfd__h67527 or _theResult___sfd__h67524)
  begin
    case (guard__h58861)
      2'b10:
	  CASE_guard8861_0b10_out_sfd7527_0b11_theResult_ETC__q7 =
	      out_sfd__h67527;
      2'b11:
	  CASE_guard8861_0b10_out_sfd7527_0b11_theResult_ETC__q7 =
	      _theResult___sfd__h67524;
      default: CASE_guard8861_0b10_out_sfd7527_0b11_theResult_ETC__q7 = 23'd0;
    endcase
  end
  always@(guard__h58861 or out_exp__h67526 or _theResult___exp__h67523)
  begin
    case (guard__h58861)
      2'b10:
	  CASE_guard8861_0b10_out_exp7526_0b11_theResult_ETC__q8 =
	      out_exp__h67526;
      2'b11:
	  CASE_guard8861_0b10_out_exp7526_0b11_theResult_ETC__q8 =
	      _theResult___exp__h67523;
      default: CASE_guard8861_0b10_out_exp7526_0b11_theResult_ETC__q8 = 8'd0;
    endcase
  end
  always@(guard__h73615 or out_sfd__h79178 or _theResult___sfd__h79175)
  begin
    case (guard__h73615)
      2'b10:
	  CASE_guard3615_0b10_out_sfd9178_0b11_theResult_ETC__q14 =
	      out_sfd__h79178;
      2'b11:
	  CASE_guard3615_0b10_out_sfd9178_0b11_theResult_ETC__q14 =
	      _theResult___sfd__h79175;
      default: CASE_guard3615_0b10_out_sfd9178_0b11_theResult_ETC__q14 =
		   23'd0;
    endcase
  end
  always@(guard__h73615 or out_exp__h79177 or _theResult___exp__h79174)
  begin
    case (guard__h73615)
      2'b10:
	  CASE_guard3615_0b10_out_exp9177_0b11_theResult_ETC__q15 =
	      out_exp__h79177;
      2'b11:
	  CASE_guard3615_0b10_out_exp9177_0b11_theResult_ETC__q15 =
	      _theResult___exp__h79174;
      default: CASE_guard3615_0b10_out_exp9177_0b11_theResult_ETC__q15 = 8'd0;
    endcase
  end
  always@(guard__h58861 or
	  _theResult___snd_fst_sfd__h66951 or
	  IF_0b0_CONCAT_NOT_IF_NOT_as1_07_BITS_30_TO_23__ETC___d1341 or
	  IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1337)
  begin
    case (guard__h58861)
      2'b10:
	  IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1344 =
	      _theResult___snd_fst_sfd__h66951[0] ?
		IF_0b0_CONCAT_NOT_IF_NOT_as1_07_BITS_30_TO_23__ETC___d1341 :
		IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1337;
      2'b11:
	  IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1344 =
	      IF_0b0_CONCAT_NOT_IF_NOT_as1_07_BITS_30_TO_23__ETC___d1341;
      default: IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1344 =
		   31'd0;
    endcase
  end
  always@(guard__h73615 or
	  _theResult___snd_fst_sfd__h78622 or
	  IF_0b0_CONCAT_NOT_IF_NOT_IF_as1_07_BITS_30_TO__ETC___d1634 or
	  IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1613)
  begin
    case (guard__h73615)
      2'b10:
	  IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1638 =
	      _theResult___snd_fst_sfd__h78622[0] ?
		IF_0b0_CONCAT_NOT_IF_NOT_IF_as1_07_BITS_30_TO__ETC___d1634 :
		IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1613;
      2'b11:
	  IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1638 =
	      IF_0b0_CONCAT_NOT_IF_NOT_IF_as1_07_BITS_30_TO__ETC___d1634;
      default: IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1638 =
		   31'd0;
    endcase
  end
  always@(grs__h1040 or
	  IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d890 or
	  IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d892)
  begin
    case (grs__h1040)
      3'b011, 3'b110, 3'b111:
	  CASE_grs040_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BIT_ETC__q16 =
	      IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d892;
      default: CASE_grs040_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BIT_ETC__q16 =
		   IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d890[26:4];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        as1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	bs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	cs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	failed_cases <= `BSV_ASSIGNMENT_DELAY 32'd0;
	mac_out_r <= `BSV_ASSIGNMENT_DELAY 32'd0;
	mac_rg_A <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	mac_rg_B <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	mac_rg_C <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_a <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_af <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_b <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_bf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_c <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_cf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_r <= `BSV_ASSIGNMENT_DELAY 1'b1;
      end
    else
      begin
        if (as1$EN) as1 <= `BSV_ASSIGNMENT_DELAY as1$D_IN;
	if (bs1$EN) bs1 <= `BSV_ASSIGNMENT_DELAY bs1$D_IN;
	if (count$EN) count <= `BSV_ASSIGNMENT_DELAY count$D_IN;
	if (cs1$EN) cs1 <= `BSV_ASSIGNMENT_DELAY cs1$D_IN;
	if (failed_cases$EN)
	  failed_cases <= `BSV_ASSIGNMENT_DELAY failed_cases$D_IN;
	if (mac_out_r$EN) mac_out_r <= `BSV_ASSIGNMENT_DELAY mac_out_r$D_IN;
	if (mac_rg_A$EN) mac_rg_A <= `BSV_ASSIGNMENT_DELAY mac_rg_A$D_IN;
	if (mac_rg_B$EN) mac_rg_B <= `BSV_ASSIGNMENT_DELAY mac_rg_B$D_IN;
	if (mac_rg_C$EN) mac_rg_C <= `BSV_ASSIGNMENT_DELAY mac_rg_C$D_IN;
	if (rg_a$EN) rg_a <= `BSV_ASSIGNMENT_DELAY rg_a$D_IN;
	if (rg_af$EN) rg_af <= `BSV_ASSIGNMENT_DELAY rg_af$D_IN;
	if (rg_b$EN) rg_b <= `BSV_ASSIGNMENT_DELAY rg_b$D_IN;
	if (rg_bf$EN) rg_bf <= `BSV_ASSIGNMENT_DELAY rg_bf$D_IN;
	if (rg_c$EN) rg_c <= `BSV_ASSIGNMENT_DELAY rg_c$D_IN;
	if (rg_cf$EN) rg_cf <= `BSV_ASSIGNMENT_DELAY rg_cf$D_IN;
	if (rg_r$EN) rg_r <= `BSV_ASSIGNMENT_DELAY rg_r$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    as1 = 32'hAAAAAAAA;
    bs1 = 32'hAAAAAAAA;
    count = 32'hAAAAAAAA;
    cs1 = 32'hAAAAAAAA;
    failed_cases = 32'hAAAAAAAA;
    mac_out_r = 32'hAAAAAAAA;
    mac_rg_A = 16'hAAAA;
    mac_rg_B = 16'hAAAA;
    mac_rg_C = 32'hAAAAAAAA;
    rg_a = 16'hAAAA;
    rg_af = 32'hAAAAAAAA;
    rg_b = 16'hAAAA;
    rg_bf = 32'hAAAAAAAA;
    rg_c = 32'hAAAAAAAA;
    rg_cf = 32'hAAAAAAAA;
    rg_r = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (mac_out_r[30:23] !=
	  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640[30:23] ||
	  mac_out_r[22:2] !=
	  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640[22:2])
	$display("%d --Expected O/P --- %b, Actual O/P-- %b",
		 $signed(count),
		 { NOT_IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AN_ETC___d1691 &&
		   IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1704,
		   IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640 },
		 mac_out_r);
    if (RST_N != `BSV_RESET_VALUE)
      if (count == 32'd1003)
	$display("Failed for %d cases", $signed(failed_cases));
    if (RST_N != `BSV_RESET_VALUE) if (count == 32'd1003) $finish(32'd0);
  end
  // synopsys translate_on
endmodule  // mk_Tb

