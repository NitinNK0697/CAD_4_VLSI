//
// Generated by Bluespec Compiler, version 2024.07 (build b4f31dbe)
//
// On Mon Oct 28 22:03:27 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mk_Tb(CLK,
	     RST_N);
  input  CLK;
  input  RST_N;

  // register as1
  reg [15 : 0] as1;
  wire [15 : 0] as1$D_IN;
  wire as1$EN;

  // register bs1
  reg [15 : 0] bs1;
  wire [15 : 0] bs1$D_IN;
  wire bs1$EN;

  // register count
  reg [31 : 0] count;
  wire [31 : 0] count$D_IN;
  wire count$EN;

  // register cs1
  reg [31 : 0] cs1;
  wire [31 : 0] cs1$D_IN;
  wire cs1$EN;

  // register failed_cases
  reg [31 : 0] failed_cases;
  wire [31 : 0] failed_cases$D_IN;
  wire failed_cases$EN;

  // register mac_out
  reg [31 : 0] mac_out;
  wire [31 : 0] mac_out$D_IN;
  wire mac_out$EN;

  // register mac_rg_a
  reg [7 : 0] mac_rg_a;
  wire [7 : 0] mac_rg_a$D_IN;
  wire mac_rg_a$EN;

  // register mac_rg_b
  reg [7 : 0] mac_rg_b;
  wire [7 : 0] mac_rg_b$D_IN;
  wire mac_rg_b$EN;

  // register mac_rg_c
  reg [31 : 0] mac_rg_c;
  wire [31 : 0] mac_rg_c$D_IN;
  wire mac_rg_c$EN;

  // register macs1
  reg [31 : 0] macs1;
  wire [31 : 0] macs1$D_IN;
  wire macs1$EN;

  // register rg_a
  reg [15 : 0] rg_a;
  wire [15 : 0] rg_a$D_IN;
  wire rg_a$EN;

  // register rg_af
  reg [15 : 0] rg_af;
  wire [15 : 0] rg_af$D_IN;
  wire rg_af$EN;

  // register rg_b
  reg [15 : 0] rg_b;
  wire [15 : 0] rg_b$D_IN;
  wire rg_b$EN;

  // register rg_bf
  reg [15 : 0] rg_bf;
  wire [15 : 0] rg_bf$D_IN;
  wire rg_bf$EN;

  // register rg_c
  reg [31 : 0] rg_c;
  wire [31 : 0] rg_c$D_IN;
  wire rg_c$EN;

  // register rg_cf
  reg [31 : 0] rg_cf;
  wire [31 : 0] rg_cf$D_IN;
  wire rg_cf$EN;

  // register rg_macf
  reg [31 : 0] rg_macf;
  wire [31 : 0] rg_macf$D_IN;
  wire rg_macf$EN;

  // register rg_r
  reg rg_r;
  wire rg_r$D_IN, rg_r$EN;

  // ports of submodule obj_inp
  wire [31 : 0] obj_inp$out_c, obj_inp$out_mac;
  wire [7 : 0] obj_inp$out_a, obj_inp$out_b;
  wire obj_inp$EN, obj_inp$read;

  // remaining internal signals
  wire [6 : 0] INV_x306__q1,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d171,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6__0___d11,
	       x__h1306,
	       y__h1308,
	       y__h1528,
	       y__h1984,
	       y__h2836,
	       y__h2965,
	       y__h3094,
	       y__h3223,
	       y__h5898;
  wire [3 : 0] INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641,
	       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d515,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600,
	       carrrg_b__h10842,
	       carrrg_b__h10932,
	       carrrg_b__h1168,
	       carrrg_b__h13151,
	       carrrg_b__h1391,
	       carrrg_b__h4801,
	       carrrg_b__h4891,
	       carrrg_b__h5983,
	       carrrg_b__h6920,
	       carrrg_b__h9036,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131,
	       p__h10838,
	       p__h10928,
	       p__h1164,
	       p__h13147,
	       p__h1387,
	       p__h16181,
	       p__h16649,
	       p__h17117,
	       p__h17584,
	       p__h17992,
	       p__h18399,
	       p__h18805,
	       p__h4797,
	       p__h4887,
	       p__h5979,
	       p__h6916,
	       p__h768,
	       p__h9032,
	       rg_a__h10829,
	       rg_a__h1378,
	       rg_a__h16172,
	       rg_a__h17575,
	       rg_a__h17983,
	       rg_a__h18390,
	       rg_a__h18797,
	       rg_b__h10830,
	       sum__h10844,
	       sum__h10934,
	       sum__h1170,
	       sum__h13153,
	       sum__h1393,
	       sum__h16183,
	       sum__h16651,
	       sum__h17119,
	       sum__h17586,
	       sum__h17994,
	       sum__h18401,
	       sum__h18807,
	       sum__h4803,
	       sum__h4893,
	       sum__h5985,
	       sum__h6922,
	       sum__h770,
	       sum__h9038,
	       y__h19185,
	       y__h19651,
	       y__h20117,
	       y__h20583,
	       y__h21049,
	       y__h21515,
	       y__h21981,
	       y__h22447;
  wire [2 : 0] mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d322,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d155,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157;
  wire [1 : 0] INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d638,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d477,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d669;
  wire INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d345,
       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d351,
       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_3_9_0_1_XO_ETC___d311,
       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_3_9_0_1_XO_ETC___d317,
       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d109,
       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d117,
       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d501,
       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d278,
       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d281,
       NOT_mac_out_80_EQ_macs1_81_82___d883,
       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d733,
       a__h10756,
       a__h2611,
       a__h4673,
       a__h8708,
       a__h8928,
       b__h8929,
       cin__h10596,
       cin__h16174,
       cin__h16642,
       cin__h17110,
       cin__h17577,
       cin__h17985,
       cin__h18392,
       cin__h2613,
       cin__h4513,
       cin__h4675,
       cout__h10933,
       cout__h1392,
       cout__h4892,
       cout__h5984,
       cout__h6921,
       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d447,
       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d450,
       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_ETC___d370,
       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_ETC___d376,
       mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_AND_INV_mac__ETC___d503,
       mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7___d5,
       sum_BIT_0___h5815,
       x__h10177,
       x__h10250,
       x__h10278,
       x__h10333,
       x__h10397,
       x__h10483,
       x__h10622,
       x__h10624,
       x__h10626,
       x__h10628,
       x__h10857,
       x__h10859,
       x__h10861,
       x__h10947,
       x__h10949,
       x__h10951,
       x__h11085,
       x__h11152,
       x__h11242,
       x__h11444,
       x__h11446,
       x__h11516,
       x__h11583,
       x__h11661,
       x__h11731,
       x__h11935,
       x__h12002,
       x__h12092,
       x__h12293,
       x__h12295,
       x__h12365,
       x__h12432,
       x__h12510,
       x__h12580,
       x__h12824,
       x__h12879,
       x__h12943,
       x__h13029,
       x__h13350,
       x__h13414,
       x__h13747,
       x__h1406,
       x__h1408,
       x__h1410,
       x__h14142,
       x__h14144,
       x__h14211,
       x__h14275,
       x__h14350,
       x__h14417,
       x__h14608,
       x__h14610,
       x__h14677,
       x__h14741,
       x__h1479,
       x__h14816,
       x__h14883,
       x__h15282,
       x__h15349,
       x__h16196,
       x__h16198,
       x__h16200,
       x__h16372,
       x__h16439,
       x__h16529,
       x__h1654,
       x__h16664,
       x__h16666,
       x__h16668,
       x__h16840,
       x__h16907,
       x__h16997,
       x__h17132,
       x__h17134,
       x__h17136,
       x__h1721,
       x__h17308,
       x__h17375,
       x__h17465,
       x__h17599,
       x__h17601,
       x__h17603,
       x__h17716,
       x__h17783,
       x__h17873,
       x__h18007,
       x__h18009,
       x__h18011,
       x__h1811,
       x__h18123,
       x__h18190,
       x__h18280,
       x__h18414,
       x__h18416,
       x__h18418,
       x__h18530,
       x__h18597,
       x__h18687,
       x__h18822,
       x__h18824,
       x__h18936,
       x__h19003,
       x__h19262,
       x__h19332,
       x__h1935,
       x__h19726,
       x__h19728,
       x__h19798,
       x__h19865,
       x__h19943,
       x__h20013,
       x__h20192,
       x__h20194,
       x__h20264,
       x__h20331,
       x__h20409,
       x__h20479,
       x__h20658,
       x__h20660,
       x__h20730,
       x__h20797,
       x__h20875,
       x__h20945,
       x__h21124,
       x__h21126,
       x__h21196,
       x__h2123,
       x__h2125,
       x__h21263,
       x__h21341,
       x__h21411,
       x__h21590,
       x__h21592,
       x__h21662,
       x__h21729,
       x__h21807,
       x__h21877,
       x__h2195,
       x__h22056,
       x__h22058,
       x__h22128,
       x__h22195,
       x__h22273,
       x__h22343,
       x__h22522,
       x__h22524,
       x__h22594,
       x__h2262,
       x__h22661,
       x__h22739,
       x__h22809,
       x__h2340,
       x__h2410,
       x__h2662,
       x__h2714,
       x__h2716,
       x__h2718,
       x__h2720,
       x__h2787,
       x__h2916,
       x__h3045,
       x__h3174,
       x__h3361,
       x__h3416,
       x__h3480,
       x__h3744,
       x__h3746,
       x__h3813,
       x__h3952,
       x__h4171,
       x__h4539,
       x__h4541,
       x__h4543,
       x__h4545,
       x__h4724,
       x__h4816,
       x__h4818,
       x__h4820,
       x__h4822,
       x__h4906,
       x__h4908,
       x__h4910,
       x__h5044,
       x__h5111,
       x__h5201,
       x__h5403,
       x__h5405,
       x__h5475,
       x__h5542,
       x__h5620,
       x__h5690,
       x__h5849,
       x__h6000,
       x__h6002,
       x__h6182,
       x__h6246,
       x__h6512,
       x__h6579,
       x__h6935,
       x__h6937,
       x__h6939,
       x__h7073,
       x__h7140,
       x__h7230,
       x__h7432,
       x__h7434,
       x__h7504,
       x__h7571,
       x__h7649,
       x__h7719,
       x__h7825,
       x__h7880,
       x__h7944,
       x__h8030,
       x__h8227,
       x__h8229,
       x__h8296,
       x__h8360,
       x__h8435,
       x__h8502,
       x__h8611,
       x__h8759,
       x__h8831,
       x__h8979,
       x__h9053,
       x__h9055,
       x__h9235,
       x__h9299,
       x__h9565,
       x__h9632,
       x__h9967,
       y__h10251,
       y__h10279,
       y__h10334,
       y__h10336,
       y__h10398,
       y__h10400,
       y__h10485,
       y__h10623,
       y__h10625,
       y__h10627,
       y__h10629,
       y__h10858,
       y__h10860,
       y__h10862,
       y__h10864,
       y__h10948,
       y__h10950,
       y__h10952,
       y__h10954,
       y__h11445,
       y__h11447,
       y__h11449,
       y__h11662,
       y__h11664,
       y__h11787,
       y__h12294,
       y__h12296,
       y__h12298,
       y__h12511,
       y__h12513,
       y__h12636,
       y__h12825,
       y__h12882,
       y__h13415,
       y__h13681,
       y__h13889,
       y__h1407,
       y__h1409,
       y__h1411,
       y__h1413,
       y__h14143,
       y__h14145,
       y__h14147,
       y__h14351,
       y__h14353,
       y__h14471,
       y__h14609,
       y__h14611,
       y__h14613,
       y__h14817,
       y__h14819,
       y__h14937,
       y__h15102,
       y__h15144,
       y__h15146,
       y__h15209,
       y__h15283,
       y__h15285,
       y__h15403,
       y__h16197,
       y__h16199,
       y__h16201,
       y__h16203,
       y__h16665,
       y__h16667,
       y__h16669,
       y__h16671,
       y__h17133,
       y__h17135,
       y__h17137,
       y__h17139,
       y__h17600,
       y__h17602,
       y__h17604,
       y__h17606,
       y__h18008,
       y__h18010,
       y__h18012,
       y__h18014,
       y__h18415,
       y__h18417,
       y__h18419,
       y__h18421,
       y__h18823,
       y__h18825,
       y__h18827,
       y__h19263,
       y__h19265,
       y__h19480,
       y__h19727,
       y__h19729,
       y__h19731,
       y__h19944,
       y__h19946,
       y__h20069,
       y__h20193,
       y__h20195,
       y__h20197,
       y__h20410,
       y__h20412,
       y__h20535,
       y__h20659,
       y__h20661,
       y__h20663,
       y__h20876,
       y__h20878,
       y__h21001,
       y__h21125,
       y__h21127,
       y__h21129,
       y__h2124,
       y__h2126,
       y__h2128,
       y__h21342,
       y__h21344,
       y__h21467,
       y__h21591,
       y__h21593,
       y__h21595,
       y__h21808,
       y__h21810,
       y__h21933,
       y__h22057,
       y__h22059,
       y__h22061,
       y__h22274,
       y__h22276,
       y__h22399,
       y__h22523,
       y__h22525,
       y__h22527,
       y__h22740,
       y__h22742,
       y__h22865,
       y__h2341,
       y__h2343,
       y__h2466,
       y__h2715,
       y__h2717,
       y__h2719,
       y__h2721,
       y__h3362,
       y__h3417,
       y__h3419,
       y__h3481,
       y__h3483,
       y__h3568,
       y__h3745,
       y__h3747,
       y__h3749,
       y__h3953,
       y__h3955,
       y__h4172,
       y__h4540,
       y__h4542,
       y__h4544,
       y__h4546,
       y__h4817,
       y__h4819,
       y__h4821,
       y__h4823,
       y__h4907,
       y__h4909,
       y__h4911,
       y__h4913,
       y__h5404,
       y__h5406,
       y__h5408,
       y__h5621,
       y__h5623,
       y__h5746,
       y__h6001,
       y__h6003,
       y__h6005,
       y__h6247,
       y__h6513,
       y__h6515,
       y__h6721,
       y__h6936,
       y__h6938,
       y__h6940,
       y__h6942,
       y__h7433,
       y__h7435,
       y__h7437,
       y__h7650,
       y__h7652,
       y__h7775,
       y__h7826,
       y__h7881,
       y__h7883,
       y__h7945,
       y__h7947,
       y__h8032,
       y__h8228,
       y__h8230,
       y__h8232,
       y__h8436,
       y__h8438,
       y__h8556,
       y__h8612,
       y__h8832,
       y__h9054,
       y__h9056,
       y__h9058,
       y__h9300,
       y__h9566,
       y__h9568,
       y__h9774,
       y__h9968;

  // submodule obj_inp
  file_read obj_inp(.RST(RST_N),
		    .clk(CLK),
		    .read(obj_inp$read),
		    .EN(obj_inp$EN),
		    .out_a(obj_inp$out_a),
		    .out_b(obj_inp$out_b),
		    .out_c(obj_inp$out_c),
		    .out_mac(obj_inp$out_mac));

  // register as1
  assign as1$D_IN = rg_af ;
  assign as1$EN = 1'd1 ;

  // register bs1
  assign bs1$D_IN = rg_bf ;
  assign bs1$EN = 1'd1 ;

  // register count
  assign count$D_IN = count + 32'd1 ;
  assign count$EN = 1'd1 ;

  // register cs1
  assign cs1$D_IN = rg_cf ;
  assign cs1$EN = 1'd1 ;

  // register failed_cases
  assign failed_cases$D_IN = failed_cases + 32'd1 ;
  assign failed_cases$EN = NOT_mac_out_80_EQ_macs1_81_82___d883 ;

  // register mac_out
  assign mac_out$D_IN =
	     { sum__h770,
	       sum__h16183,
	       sum__h16651,
	       sum__h17119,
	       sum__h17586,
	       sum__h17994,
	       sum__h18401,
	       sum__h18807 } ;
  assign mac_out$EN = 1'd1 ;

  // register mac_rg_a
  assign mac_rg_a$D_IN = obj_inp$out_a ;
  assign mac_rg_a$EN = 1'd1 ;

  // register mac_rg_b
  assign mac_rg_b$D_IN = obj_inp$out_b ;
  assign mac_rg_b$EN = 1'd1 ;

  // register mac_rg_c
  assign mac_rg_c$D_IN = obj_inp$out_c ;
  assign mac_rg_c$EN = 1'd1 ;

  // register macs1
  assign macs1$D_IN = rg_macf ;
  assign macs1$EN = 1'd1 ;

  // register rg_a
  assign rg_a$D_IN = 16'h0 ;
  assign rg_a$EN = 1'b0 ;

  // register rg_af
  assign rg_af$D_IN = { 8'd0, obj_inp$out_a } ;
  assign rg_af$EN = 1'd1 ;

  // register rg_b
  assign rg_b$D_IN = 16'h0 ;
  assign rg_b$EN = 1'b0 ;

  // register rg_bf
  assign rg_bf$D_IN = { 8'd0, obj_inp$out_b } ;
  assign rg_bf$EN = 1'd1 ;

  // register rg_c
  assign rg_c$D_IN = 32'h0 ;
  assign rg_c$EN = 1'b0 ;

  // register rg_cf
  assign rg_cf$D_IN = obj_inp$out_c ;
  assign rg_cf$EN = 1'd1 ;

  // register rg_macf
  assign rg_macf$D_IN = obj_inp$out_mac ;
  assign rg_macf$EN = 1'd1 ;

  // register rg_r
  assign rg_r$D_IN = 1'b0 ;
  assign rg_r$EN = 1'b0 ;

  // submodule obj_inp
  assign obj_inp$read = 1'b1 ;
  assign obj_inp$EN = 1'd1 ;

  // remaining internal signals
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d345 =
	     x__h9967 | y__h9968 ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d351 =
	     x__h8979 ^ sum__h4803[2] ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d638 =
	     { y__h10485 ^ cin__h4513, x__h12824 ^ (x__h14142 | y__h14143) } ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_3_9_0_1_XO_ETC___d311 =
	     x__h8831 | y__h8832 ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_3_9_0_1_XO_ETC___d317 =
	     x__h8759 ^ sum__h4803[3] ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d109 =
	     x__h4171 | y__h4172 ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d117 =
	     x__h2662 ^ cin__h2613 ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d501 =
	     x__h4539 | y__h4540 ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d278 =
	     x__h8611 | y__h8612 ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d281 =
	     x__h4724 ^ cin__h4675 ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641 =
	     rg_a__h17983 & mac_rg_c[11:8] ;
  assign INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18 =
	     rg_a__h1378 & INV_x306__q1[6:3] ;
  assign INV_x306__q1 = ~x__h1306 ;
  assign NOT_mac_out_80_EQ_macs1_81_82___d883 = mac_out != macs1 ;
  assign _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d515 =
	     rg_a__h16172 & mac_rg_c[31:28] ;
  assign _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529 =
	     rg_a__h16172 & mac_rg_c[27:24] ;
  assign _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549 =
	     rg_a__h16172 & mac_rg_c[23:20] ;
  assign _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569 =
	     rg_a__h16172 & mac_rg_c[19:16] ;
  assign _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600 =
	     rg_a__h17575 & mac_rg_c[15:12] ;
  assign _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d733 =
	     x__h16196 | y__h16197 ;
  assign a__h10756 = x__h10857 | y__h10858 ;
  assign a__h2611 = x__h2714 | y__h2715 ;
  assign a__h4673 = x__h3361 ^ (x__h3744 | y__h3745) ;
  assign a__h8708 = y__h3419 ^ (x__h3952 | y__h3953) ;
  assign a__h8928 = y__h3483 ^ (y__h3481 | y__h3568) ;
  assign b__h8929 = x__h9053 | y__h9054 ;
  assign carrrg_b__h10842 =
	     { x__h12293 | y__h12294,
	       x__h12510 | y__h12511,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424[0] |
	       y__h12636,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[0] } ;
  assign carrrg_b__h10932 =
	     { x__h11444 | y__h11445,
	       x__h11661 | y__h11662,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379[0] |
	       y__h11787,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95[0] } ;
  assign carrrg_b__h1168 =
	     { mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_AND_INV_mac__ETC___d503,
	       mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_AND_INV_mac__ETC___d503,
	       y__h15144 | y__h15403,
	       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d501 } ;
  assign carrrg_b__h13151 = { y__h13681, y__h13889, y__h13415, 1'b0 } ;
  assign carrrg_b__h1391 =
	     { x__h2123 | y__h2124,
	       x__h2340 | y__h2341,
	       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18[0] |
	       y__h2466,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[5] } ;
  assign carrrg_b__h4801 =
	     { x__h8227 | y__h8228,
	       x__h8435 | y__h8436,
	       y__h7945 | y__h8556,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[6] } ;
  assign carrrg_b__h4891 =
	     { x__h5403 | y__h5404,
	       x__h5620 | y__h5621,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131[0] |
	       y__h5746,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6__0___d11[0] } ;
  assign carrrg_b__h5983 =
	     { x__h6512 | y__h6513,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d155[0] |
	       y__h6721,
	       y__h6247,
	       1'b0 } ;
  assign carrrg_b__h6920 =
	     { x__h7432 | y__h7433,
	       x__h7649 | y__h7650,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221[0] |
	       y__h7775,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[0] } ;
  assign carrrg_b__h9036 =
	     { x__h9565 | y__h9566,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d322[0] |
	       y__h9774,
	       y__h9300,
	       1'b0 } ;
  assign cin__h10596 = x__h13414 & y__h13415 ;
  assign cin__h16174 = x__h16664 | y__h16665 ;
  assign cin__h16642 = x__h17132 | y__h17133 ;
  assign cin__h17110 = x__h17599 | y__h17600 ;
  assign cin__h17577 = x__h18007 | y__h18008 ;
  assign cin__h17985 = x__h18414 | y__h18415 ;
  assign cin__h18392 = x__h18822 | y__h18823 ;
  assign cin__h2613 = ~x__h1935 ;
  assign cin__h4513 = x__h10622 | y__h10623 ;
  assign cin__h4675 = x__h4816 | y__h4817 ;
  assign cout__h10933 = x__h10947 | y__h10948 ;
  assign cout__h1392 = x__h1406 | y__h1407 ;
  assign cout__h4892 = x__h4906 | y__h4907 ;
  assign cout__h5984 = x__h6000 | y__h6001 ;
  assign cout__h6921 = x__h6935 | y__h6936 ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d171 =
	     mac_rg_a[6:0] & y__h5898 ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d171[5:2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[4:1] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424 =
	     rg_a__h10829 & rg_b__h10830 ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d447 =
	     a__h10756 & sum__h9038[2] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d450 =
	     a__h10756 ^ sum__h9038[2] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d477 =
	     sum__h10844[3:2] & sum__h9038[1:0] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481 =
	     sum__h10844[3:2] ^ sum__h9038[1:0] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d669 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481 ^
	     { mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d477[0] |
	       y__h14471,
	       cin__h10596 } ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682 =
	     rg_a__h18390 & mac_rg_c[7:4] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705 =
	     rg_a__h18797 & mac_rg_c[3:0] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174 =
	     mac_rg_a[6:0] & y__h3223 ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95 =
	     mac_rg_a[6:0] & y__h3094 ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95[5:2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[4:1] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84 =
	     mac_rg_a[6:0] & y__h2965 ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_ETC___d370 =
	     x__h10250 | y__h10251 ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_ETC___d376 =
	     x__h10177 ^ sum__h4803[1] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73 =
	     mac_rg_a[6:0] & y__h2836 ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[5:2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[4:1] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d322 =
	     sum__h4893[2:0] & sum__h5985[2:0] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324 =
	     sum__h4893[2:0] ^ sum__h5985[2:0] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39 =
	     mac_rg_a[6:0] & y__h1984 ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6__0___d11 =
	     mac_rg_a[6:0] & y__h1528 ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d155 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6__0___d11[3:1] &
	     INV_x306__q1[2:0] ;
  assign mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6__0___d11[3:1] ^
	     INV_x306__q1[2:0] ;
  assign mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_AND_INV_mac__ETC___d503 =
	     x__h15282 | y__h15283 ;
  assign mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7___d5 = mac_rg_a[7] & mac_rg_b[7] ;
  assign p__h10838 = rg_a__h10829 ^ rg_b__h10830 ;
  assign p__h10928 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d171[5:2] ^
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[4:1] ;
  assign p__h1164 = { 2'd1, y__h15146, y__h15209 } ;
  assign p__h13147 =
	     { sum__h10844[1:0],
	       sum__h10934[0],
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d171[1] ^
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[0] } ;
  assign p__h1387 = rg_a__h1378 ^ INV_x306__q1[6:3] ;
  assign p__h16181 = rg_a__h16172 ^ mac_rg_c[27:24] ;
  assign p__h16649 = rg_a__h16172 ^ mac_rg_c[23:20] ;
  assign p__h17117 = rg_a__h16172 ^ mac_rg_c[19:16] ;
  assign p__h17584 = rg_a__h17575 ^ mac_rg_c[15:12] ;
  assign p__h17992 = rg_a__h17983 ^ mac_rg_c[11:8] ;
  assign p__h18399 = rg_a__h18390 ^ mac_rg_c[7:4] ;
  assign p__h18805 = rg_a__h18797 ^ mac_rg_c[3:0] ;
  assign p__h4797 = { x__h7825, y__h7883, y__h7947, y__h8032 } ;
  assign p__h4887 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[5:2] ^
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[4:1] ;
  assign p__h5979 =
	     { mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d171[6] ^
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[5] } ;
  assign p__h6916 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95[5:2] ^
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[4:1] ;
  assign p__h768 = rg_a__h16172 ^ mac_rg_c[31:28] ;
  assign p__h9032 =
	     { mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[1] ^
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[0] } ;
  assign rg_a__h10829 = { cout__h10933, sum__h10934[3:1] } ;
  assign rg_a__h1378 =
	     { ~x__h1479,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6__0___d11[6:4] } ;
  assign rg_a__h16172 = {4{sum__h1170[2]}} ;
  assign rg_a__h17575 =
	     { sum__h1170[2:0], x__h10278 ^ (x__h14608 | y__h14609) } ;
  assign rg_a__h17983 =
	     { y__h10336 ^ (x__h14816 | y__h14817),
	       y__h10400 ^ (y__h10398 | y__h14937),
	       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d638 } ;
  assign rg_a__h18390 =
	     { y__h12882 ^ (x__h14350 | y__h14351),
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d669,
	       sum__h13153[3] } ;
  assign rg_a__h18797 =
	     { sum__h13153[2:0],
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d171[0] } ;
  assign rg_b__h10830 =
	     { sum__h6922[2:0],
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95[1] } ;
  assign sum_BIT_0___h5815 = ~y__h3568 ;
  assign sum__h10844 = p__h10838 ^ carrrg_b__h10842 ;
  assign sum__h10934 = p__h10928 ^ carrrg_b__h10932 ;
  assign sum__h1170 = p__h1164 ^ carrrg_b__h1168 ;
  assign sum__h13153 = p__h13147 ^ carrrg_b__h13151 ;
  assign sum__h1393 = p__h1387 ^ carrrg_b__h1391 ;
  assign sum__h16183 = p__h16181 ^ y__h21981 ;
  assign sum__h16651 = p__h16649 ^ y__h21515 ;
  assign sum__h17119 = p__h17117 ^ y__h21049 ;
  assign sum__h17586 = p__h17584 ^ y__h20583 ;
  assign sum__h17994 = p__h17992 ^ y__h20117 ;
  assign sum__h18401 = p__h18399 ^ y__h19651 ;
  assign sum__h18807 = p__h18805 ^ y__h19185 ;
  assign sum__h4803 = p__h4797 ^ carrrg_b__h4801 ;
  assign sum__h4893 = p__h4887 ^ carrrg_b__h4891 ;
  assign sum__h5985 = p__h5979 ^ carrrg_b__h5983 ;
  assign sum__h6922 = p__h6916 ^ carrrg_b__h6920 ;
  assign sum__h770 = p__h768 ^ y__h22447 ;
  assign sum__h9038 = p__h9032 ^ carrrg_b__h9036 ;
  assign x__h10177 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[5] ^
	     sum__h9038[3] ;
  assign x__h10250 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[5] &
	     sum__h9038[3] ;
  assign x__h10278 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d117 ^
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d278 ;
  assign x__h10333 = x__h10278 & y__h10336 ;
  assign x__h10397 = x__h10333 & y__h10400 ;
  assign x__h10483 = x__h10397 & y__h10485 ;
  assign x__h10622 = x__h10624 | y__h10625 ;
  assign x__h10624 = x__h10626 | y__h10627 ;
  assign x__h10626 = x__h10628 | y__h10629 ;
  assign x__h10628 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_ETC___d376 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d447 ;
  assign x__h10857 = x__h10859 | y__h10860 ;
  assign x__h10859 = x__h10861 | y__h10862 ;
  assign x__h10861 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424[3] |
	     y__h10864 ;
  assign x__h10947 = x__h10949 | y__h10950 ;
  assign x__h10949 = x__h10951 | y__h10952 ;
  assign x__h10951 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379[3] |
	     y__h10954 ;
  assign x__h11085 = p__h10928[3] & p__h10928[2] ;
  assign x__h11152 = x__h11085 & p__h10928[1] ;
  assign x__h11242 = x__h11152 & p__h10928[0] ;
  assign x__h11444 = x__h11446 | y__h11447 ;
  assign x__h11446 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379[2] |
	     y__h11449 ;
  assign x__h11516 = p__h10928[2] & p__h10928[1] ;
  assign x__h11583 = x__h11516 & p__h10928[0] ;
  assign x__h11661 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379[1] |
	     y__h11664 ;
  assign x__h11731 = p__h10928[1] & p__h10928[0] ;
  assign x__h11935 = p__h10838[3] & p__h10838[2] ;
  assign x__h12002 = x__h11935 & p__h10838[1] ;
  assign x__h12092 = x__h12002 & p__h10838[0] ;
  assign x__h12293 = x__h12295 | y__h12296 ;
  assign x__h12295 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424[2] |
	     y__h12298 ;
  assign x__h12365 = p__h10838[2] & p__h10838[1] ;
  assign x__h12432 = x__h12365 & p__h10838[0] ;
  assign x__h12510 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424[1] |
	     y__h12513 ;
  assign x__h12580 = p__h10838[1] & p__h10838[0] ;
  assign x__h12824 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_ETC___d376 ^
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d447 ;
  assign x__h12879 = x__h12824 & y__h12882 ;
  assign x__h12943 =
	     x__h12879 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481[1] ;
  assign x__h13029 =
	     x__h12943 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481[0] ;
  assign x__h1306 = mac_rg_a[6:0] & y__h1308 ;
  assign x__h13350 = sum__h10844[1] & sum__h10844[0] ;
  assign x__h13414 = x__h13350 & sum__h10934[0] ;
  assign x__h13747 = sum__h10844[0] & sum__h10934[0] ;
  assign x__h1406 = x__h1408 | y__h1409 ;
  assign x__h1408 = x__h1410 | y__h1411 ;
  assign x__h1410 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18[3] |
	     y__h1413 ;
  assign x__h14142 = x__h14144 | y__h14145 ;
  assign x__h14144 = y__h12825 | y__h14147 ;
  assign x__h14211 =
	     y__h12882 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481[1] ;
  assign x__h14275 =
	     x__h14211 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481[0] ;
  assign x__h14350 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d477[1] |
	     y__h14353 ;
  assign x__h14417 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481[0] ;
  assign x__h14608 = x__h14610 | y__h14611 ;
  assign x__h14610 = y__h10279 | y__h14613 ;
  assign x__h14677 = y__h10336 & y__h10400 ;
  assign x__h14741 = x__h14677 & y__h10485 ;
  assign x__h1479 = mac_rg_a[7] & mac_rg_b[6] ;
  assign x__h14816 = y__h10334 | y__h14819 ;
  assign x__h14883 = y__h10400 & y__h10485 ;
  assign x__h15282 = y__h15102 | y__h15285 ;
  assign x__h15349 = y__h15146 & y__h15209 ;
  assign x__h16196 = x__h16198 | y__h16199 ;
  assign x__h16198 = x__h16200 | y__h16201 ;
  assign x__h16200 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529[3] |
	     y__h16203 ;
  assign x__h16372 = p__h16181[3] & p__h16181[2] ;
  assign x__h16439 = x__h16372 & p__h16181[1] ;
  assign x__h16529 = x__h16439 & p__h16181[0] ;
  assign x__h1654 = p__h1387[3] & p__h1387[2] ;
  assign x__h16664 = x__h16666 | y__h16667 ;
  assign x__h16666 = x__h16668 | y__h16669 ;
  assign x__h16668 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549[3] |
	     y__h16671 ;
  assign x__h16840 = p__h16649[3] & p__h16649[2] ;
  assign x__h16907 = x__h16840 & p__h16649[1] ;
  assign x__h16997 = x__h16907 & p__h16649[0] ;
  assign x__h17132 = x__h17134 | y__h17135 ;
  assign x__h17134 = x__h17136 | y__h17137 ;
  assign x__h17136 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569[3] |
	     y__h17139 ;
  assign x__h1721 = x__h1654 & p__h1387[1] ;
  assign x__h17308 = p__h17117[3] & p__h17117[2] ;
  assign x__h17375 = x__h17308 & p__h17117[1] ;
  assign x__h17465 = x__h17375 & p__h17117[0] ;
  assign x__h17599 = x__h17601 | y__h17602 ;
  assign x__h17601 = x__h17603 | y__h17604 ;
  assign x__h17603 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600[3] |
	     y__h17606 ;
  assign x__h17716 = p__h17584[3] & p__h17584[2] ;
  assign x__h17783 = x__h17716 & p__h17584[1] ;
  assign x__h17873 = x__h17783 & p__h17584[0] ;
  assign x__h18007 = x__h18009 | y__h18010 ;
  assign x__h18009 = x__h18011 | y__h18012 ;
  assign x__h18011 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641[3] |
	     y__h18014 ;
  assign x__h1811 = x__h1721 & p__h1387[0] ;
  assign x__h18123 = p__h17992[3] & p__h17992[2] ;
  assign x__h18190 = x__h18123 & p__h17992[1] ;
  assign x__h18280 = x__h18190 & p__h17992[0] ;
  assign x__h18414 = x__h18416 | y__h18417 ;
  assign x__h18416 = x__h18418 | y__h18419 ;
  assign x__h18418 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682[3] |
	     y__h18421 ;
  assign x__h18530 = p__h18399[3] & p__h18399[2] ;
  assign x__h18597 = x__h18530 & p__h18399[1] ;
  assign x__h18687 = x__h18597 & p__h18399[0] ;
  assign x__h18822 = x__h18824 | y__h18825 ;
  assign x__h18824 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705[3] |
	     y__h18827 ;
  assign x__h18936 = p__h18805[3] & p__h18805[2] ;
  assign x__h19003 = x__h18936 & p__h18805[1] ;
  assign x__h19262 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705[2] |
	     y__h19265 ;
  assign x__h19332 = p__h18805[2] & p__h18805[1] ;
  assign x__h1935 = mac_rg_a[7] & mac_rg_b[5] ;
  assign x__h19726 = x__h19728 | y__h19729 ;
  assign x__h19728 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682[2] |
	     y__h19731 ;
  assign x__h19798 = p__h18399[2] & p__h18399[1] ;
  assign x__h19865 = x__h19798 & p__h18399[0] ;
  assign x__h19943 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682[1] |
	     y__h19946 ;
  assign x__h20013 = p__h18399[1] & p__h18399[0] ;
  assign x__h20192 = x__h20194 | y__h20195 ;
  assign x__h20194 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641[2] |
	     y__h20197 ;
  assign x__h20264 = p__h17992[2] & p__h17992[1] ;
  assign x__h20331 = x__h20264 & p__h17992[0] ;
  assign x__h20409 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641[1] |
	     y__h20412 ;
  assign x__h20479 = p__h17992[1] & p__h17992[0] ;
  assign x__h20658 = x__h20660 | y__h20661 ;
  assign x__h20660 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600[2] |
	     y__h20663 ;
  assign x__h20730 = p__h17584[2] & p__h17584[1] ;
  assign x__h20797 = x__h20730 & p__h17584[0] ;
  assign x__h20875 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600[1] |
	     y__h20878 ;
  assign x__h20945 = p__h17584[1] & p__h17584[0] ;
  assign x__h21124 = x__h21126 | y__h21127 ;
  assign x__h21126 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569[2] |
	     y__h21129 ;
  assign x__h21196 = p__h17117[2] & p__h17117[1] ;
  assign x__h2123 = x__h2125 | y__h2126 ;
  assign x__h2125 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18[2] |
	     y__h2128 ;
  assign x__h21263 = x__h21196 & p__h17117[0] ;
  assign x__h21341 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569[1] |
	     y__h21344 ;
  assign x__h21411 = p__h17117[1] & p__h17117[0] ;
  assign x__h21590 = x__h21592 | y__h21593 ;
  assign x__h21592 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549[2] |
	     y__h21595 ;
  assign x__h21662 = p__h16649[2] & p__h16649[1] ;
  assign x__h21729 = x__h21662 & p__h16649[0] ;
  assign x__h21807 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549[1] |
	     y__h21810 ;
  assign x__h21877 = p__h16649[1] & p__h16649[0] ;
  assign x__h2195 = p__h1387[2] & p__h1387[1] ;
  assign x__h22056 = x__h22058 | y__h22059 ;
  assign x__h22058 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529[2] |
	     y__h22061 ;
  assign x__h22128 = p__h16181[2] & p__h16181[1] ;
  assign x__h22195 = x__h22128 & p__h16181[0] ;
  assign x__h22273 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529[1] |
	     y__h22276 ;
  assign x__h22343 = p__h16181[1] & p__h16181[0] ;
  assign x__h22522 = x__h22524 | y__h22525 ;
  assign x__h22524 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d515[2] |
	     y__h22527 ;
  assign x__h22594 = p__h768[2] & p__h768[1] ;
  assign x__h2262 = x__h2195 & p__h1387[0] ;
  assign x__h22661 = x__h22594 & p__h768[0] ;
  assign x__h22739 =
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d515[1] |
	     y__h22742 ;
  assign x__h22809 = p__h768[1] & p__h768[0] ;
  assign x__h2340 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18[1] |
	     y__h2343 ;
  assign x__h2410 = p__h1387[1] & p__h1387[0] ;
  assign x__h2662 = a__h2611 ^ sum__h1393[2] ;
  assign x__h2714 = x__h2716 | y__h2717 ;
  assign x__h2716 = x__h2718 | y__h2719 ;
  assign x__h2718 = x__h2720 | y__h2721 ;
  assign x__h2720 =
	     ~x__h2787 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[6] ;
  assign x__h2787 = mac_rg_a[7] & mac_rg_b[4] ;
  assign x__h2916 = mac_rg_a[7] & mac_rg_b[3] ;
  assign x__h3045 = mac_rg_a[7] & mac_rg_b[2] ;
  assign x__h3174 = mac_rg_a[7] & mac_rg_b[1] ;
  assign x__h3361 =
	     ~x__h2787 ^
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[6] ;
  assign x__h3416 = x__h3361 & y__h3419 ;
  assign x__h3480 = x__h3416 & y__h3483 ;
  assign x__h3744 = x__h3746 | y__h3747 ;
  assign x__h3746 = y__h3362 | y__h3749 ;
  assign x__h3813 = y__h3419 & y__h3483 ;
  assign x__h3952 = y__h3417 | y__h3955 ;
  assign x__h4171 = a__h2611 & sum__h1393[2] ;
  assign x__h4539 = x__h4541 | y__h4542 ;
  assign x__h4541 = x__h4543 | y__h4544 ;
  assign x__h4543 = x__h4545 | y__h4546 ;
  assign x__h4545 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d117 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d278 ;
  assign x__h4724 = a__h4673 ^ sum__h1393[1] ;
  assign x__h4816 = x__h4818 | y__h4819 ;
  assign x__h4818 = x__h4820 | y__h4821 ;
  assign x__h4820 = x__h4822 | y__h4823 ;
  assign x__h4822 = cout__h4892 & cout__h5984 ;
  assign x__h4906 = x__h4908 | y__h4909 ;
  assign x__h4908 = x__h4910 | y__h4911 ;
  assign x__h4910 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131[3] |
	     y__h4913 ;
  assign x__h5044 = p__h4887[3] & p__h4887[2] ;
  assign x__h5111 = x__h5044 & p__h4887[1] ;
  assign x__h5201 = x__h5111 & p__h4887[0] ;
  assign x__h5403 = x__h5405 | y__h5406 ;
  assign x__h5405 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131[2] |
	     y__h5408 ;
  assign x__h5475 = p__h4887[2] & p__h4887[1] ;
  assign x__h5542 = x__h5475 & p__h4887[0] ;
  assign x__h5620 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131[1] |
	     y__h5623 ;
  assign x__h5690 = p__h4887[1] & p__h4887[0] ;
  assign x__h5849 = mac_rg_a[7] & mac_rg_b[0] ;
  assign x__h6000 = x__h6002 | y__h6003 ;
  assign x__h6002 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d155[2] |
	     y__h6005 ;
  assign x__h6182 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157[2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157[1] ;
  assign x__h6246 =
	     x__h6182 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157[0] ;
  assign x__h6512 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d155[1] |
	     y__h6515 ;
  assign x__h6579 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157[0] ;
  assign x__h6935 = x__h6937 | y__h6938 ;
  assign x__h6937 = x__h6939 | y__h6940 ;
  assign x__h6939 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221[3] |
	     y__h6942 ;
  assign x__h7073 = p__h6916[3] & p__h6916[2] ;
  assign x__h7140 = x__h7073 & p__h6916[1] ;
  assign x__h7230 = x__h7140 & p__h6916[0] ;
  assign x__h7432 = x__h7434 | y__h7435 ;
  assign x__h7434 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221[2] |
	     y__h7437 ;
  assign x__h7504 = p__h6916[2] & p__h6916[1] ;
  assign x__h7571 = x__h7504 & p__h6916[0] ;
  assign x__h7649 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221[1] |
	     y__h7652 ;
  assign x__h7719 = p__h6916[1] & p__h6916[0] ;
  assign x__h7825 = cout__h4892 ^ cout__h5984 ;
  assign x__h7880 = x__h7825 & y__h7883 ;
  assign x__h7944 = x__h7880 & y__h7947 ;
  assign x__h8030 = x__h7944 & y__h8032 ;
  assign x__h8227 = x__h8229 | y__h8230 ;
  assign x__h8229 = y__h7826 | y__h8232 ;
  assign x__h8296 = y__h7883 & y__h7947 ;
  assign x__h8360 = x__h8296 & y__h8032 ;
  assign x__h8435 = y__h7881 | y__h8438 ;
  assign x__h8502 = y__h7947 & y__h8032 ;
  assign x__h8611 = a__h4673 & sum__h1393[1] ;
  assign x__h8759 = a__h8708 ^ sum__h1393[0] ;
  assign x__h8831 = a__h8708 & sum__h1393[0] ;
  assign x__h8979 = a__h8928 ^ b__h8929 ;
  assign x__h9053 = x__h9055 | y__h9056 ;
  assign x__h9055 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d322[2] |
	     y__h9058 ;
  assign x__h9235 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324[2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324[1] ;
  assign x__h9299 =
	     x__h9235 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324[0] ;
  assign x__h9565 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d322[1] |
	     y__h9568 ;
  assign x__h9632 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324[0] ;
  assign x__h9967 = a__h8928 & b__h8929 ;
  assign y__h10251 = x__h10177 & sum__h4803[1] ;
  assign y__h10279 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d281 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_3_9_0_1_XO_ETC___d311 ;
  assign y__h10334 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_3_9_0_1_XO_ETC___d317 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d345 ;
  assign y__h10336 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d281 ^
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_3_9_0_1_XO_ETC___d311 ;
  assign y__h10398 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d351 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_ETC___d370 ;
  assign y__h10400 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_3_9_0_1_XO_ETC___d317 ^
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d345 ;
  assign y__h10485 =
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_2_0_1_2_XO_ETC___d351 ^
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_ETC___d370 ;
  assign y__h10623 = x__h13029 & cin__h10596 ;
  assign y__h10625 =
	     x__h12943 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d477[0] ;
  assign y__h10627 =
	     x__h12879 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d477[1] ;
  assign y__h10629 = x__h12824 & y__h12825 ;
  assign y__h10858 =
	     x__h12092 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[0] ;
  assign y__h10860 =
	     x__h12002 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424[0] ;
  assign y__h10862 =
	     x__h11935 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424[1] ;
  assign y__h10864 =
	     p__h10838[3] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424[2] ;
  assign y__h10948 =
	     x__h11242 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95[0] ;
  assign y__h10950 =
	     x__h11152 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379[0] ;
  assign y__h10952 =
	     x__h11085 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379[1] ;
  assign y__h10954 =
	     p__h10928[3] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379[2] ;
  assign y__h11445 =
	     x__h11583 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95[0] ;
  assign y__h11447 =
	     x__h11516 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379[0] ;
  assign y__h11449 =
	     p__h10928[2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379[1] ;
  assign y__h11662 =
	     x__h11731 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95[0] ;
  assign y__h11664 =
	     p__h10928[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d379[0] ;
  assign y__h11787 =
	     p__h10928[0] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95[0] ;
  assign y__h12294 =
	     x__h12432 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[0] ;
  assign y__h12296 =
	     x__h12365 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424[0] ;
  assign y__h12298 =
	     p__h10838[2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424[1] ;
  assign y__h12511 =
	     x__h12580 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[0] ;
  assign y__h12513 =
	     p__h10838[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d424[0] ;
  assign y__h12636 =
	     p__h10838[0] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[0] ;
  assign y__h12825 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d450 &
	     sum__h4803[0] ;
  assign y__h12882 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d450 ^
	     sum__h4803[0] ;
  assign y__h1308 = {7{mac_rg_b[7]}} ;
  assign y__h13415 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d171[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[0] ;
  assign y__h13681 = x__h13747 & y__h13415 ;
  assign y__h13889 = sum__h10934[0] & y__h13415 ;
  assign y__h1407 =
	     x__h1811 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[5] ;
  assign y__h1409 =
	     x__h1721 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18[0] ;
  assign y__h1411 =
	     x__h1654 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18[1] ;
  assign y__h1413 =
	     p__h1387[3] &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18[2] ;
  assign y__h14143 = x__h14275 & cin__h10596 ;
  assign y__h14145 =
	     x__h14211 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d477[0] ;
  assign y__h14147 =
	     y__h12882 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d477[1] ;
  assign y__h14351 = x__h14417 & cin__h10596 ;
  assign y__h14353 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d477[0] ;
  assign y__h14471 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d481[0] &
	     cin__h10596 ;
  assign y__h14609 = x__h14741 & cin__h4513 ;
  assign y__h14611 = x__h14677 & y__h10398 ;
  assign y__h14613 = y__h10336 & y__h10334 ;
  assign y__h14817 = x__h14883 & cin__h4513 ;
  assign y__h14819 = y__h10400 & y__h10398 ;
  assign y__h14937 = y__h10485 & cin__h4513 ;
  assign y__h15102 = mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7___d5 & cout__h1392 ;
  assign y__h15144 =
	     sum__h1393[3] &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d109 ;
  assign y__h15146 = mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7___d5 ^ cout__h1392 ;
  assign y__h15209 =
	     sum__h1393[3] ^
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d109 ;
  assign y__h1528 = {7{mac_rg_b[6]}} ;
  assign y__h15283 =
	     x__h15349 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d501 ;
  assign y__h15285 = y__h15146 & y__h15144 ;
  assign y__h15403 =
	     y__h15209 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_AN_ETC___d501 ;
  assign y__h16197 = x__h16529 & cin__h16174 ;
  assign y__h16199 =
	     x__h16439 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529[0] ;
  assign y__h16201 =
	     x__h16372 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529[1] ;
  assign y__h16203 =
	     p__h16181[3] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529[2] ;
  assign y__h16665 = x__h16997 & cin__h16642 ;
  assign y__h16667 =
	     x__h16907 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549[0] ;
  assign y__h16669 =
	     x__h16840 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549[1] ;
  assign y__h16671 =
	     p__h16649[3] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549[2] ;
  assign y__h17133 = x__h17465 & cin__h17110 ;
  assign y__h17135 =
	     x__h17375 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569[0] ;
  assign y__h17137 =
	     x__h17308 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569[1] ;
  assign y__h17139 =
	     p__h17117[3] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569[2] ;
  assign y__h17600 = x__h17873 & cin__h17577 ;
  assign y__h17602 =
	     x__h17783 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600[0] ;
  assign y__h17604 =
	     x__h17716 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600[1] ;
  assign y__h17606 =
	     p__h17584[3] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600[2] ;
  assign y__h18008 = x__h18280 & cin__h17985 ;
  assign y__h18010 =
	     x__h18190 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641[0] ;
  assign y__h18012 =
	     x__h18123 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641[1] ;
  assign y__h18014 =
	     p__h17992[3] &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641[2] ;
  assign y__h18415 = x__h18687 & cin__h18392 ;
  assign y__h18417 =
	     x__h18597 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682[0] ;
  assign y__h18419 =
	     x__h18530 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682[1] ;
  assign y__h18421 =
	     p__h18399[3] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682[2] ;
  assign y__h18823 =
	     x__h19003 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705[0] ;
  assign y__h18825 =
	     x__h18936 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705[1] ;
  assign y__h18827 =
	     p__h18805[3] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705[2] ;
  assign y__h19185 =
	     { x__h19262 | y__h19263,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705[1] |
	       y__h19480,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705[0],
	       1'b0 } ;
  assign y__h19263 =
	     x__h19332 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705[0] ;
  assign y__h19265 =
	     p__h18805[2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705[1] ;
  assign y__h19480 =
	     p__h18805[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d705[0] ;
  assign y__h19651 =
	     { x__h19726 | y__h19727,
	       x__h19943 | y__h19944,
	       mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682[0] |
	       y__h20069,
	       cin__h18392 } ;
  assign y__h19727 = x__h19865 & cin__h18392 ;
  assign y__h19729 =
	     x__h19798 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682[0] ;
  assign y__h19731 =
	     p__h18399[2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682[1] ;
  assign y__h1984 = {7{mac_rg_b[5]}} ;
  assign y__h19944 = x__h20013 & cin__h18392 ;
  assign y__h19946 =
	     p__h18399[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d682[0] ;
  assign y__h20069 = p__h18399[0] & cin__h18392 ;
  assign y__h20117 =
	     { x__h20192 | y__h20193,
	       x__h20409 | y__h20410,
	       INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641[0] |
	       y__h20535,
	       cin__h17985 } ;
  assign y__h20193 = x__h20331 & cin__h17985 ;
  assign y__h20195 =
	     x__h20264 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641[0] ;
  assign y__h20197 =
	     p__h17992[2] &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641[1] ;
  assign y__h20410 = x__h20479 & cin__h17985 ;
  assign y__h20412 =
	     p__h17992[1] &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_4_3_4_5_XO_ETC___d641[0] ;
  assign y__h20535 = p__h17992[0] & cin__h17985 ;
  assign y__h20583 =
	     { x__h20658 | y__h20659,
	       x__h20875 | y__h20876,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600[0] |
	       y__h21001,
	       cin__h17577 } ;
  assign y__h20659 = x__h20797 & cin__h17577 ;
  assign y__h20661 =
	     x__h20730 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600[0] ;
  assign y__h20663 =
	     p__h17584[2] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600[1] ;
  assign y__h20876 = x__h20945 & cin__h17577 ;
  assign y__h20878 =
	     p__h17584[1] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d600[0] ;
  assign y__h21001 = p__h17584[0] & cin__h17577 ;
  assign y__h21049 =
	     { x__h21124 | y__h21125,
	       x__h21341 | y__h21342,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569[0] |
	       y__h21467,
	       cin__h17110 } ;
  assign y__h21125 = x__h21263 & cin__h17110 ;
  assign y__h21127 =
	     x__h21196 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569[0] ;
  assign y__h21129 =
	     p__h17117[2] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569[1] ;
  assign y__h2124 =
	     x__h2262 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[5] ;
  assign y__h2126 =
	     x__h2195 &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18[0] ;
  assign y__h2128 =
	     p__h1387[2] &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18[1] ;
  assign y__h21342 = x__h21411 & cin__h17110 ;
  assign y__h21344 =
	     p__h17117[1] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d569[0] ;
  assign y__h21467 = p__h17117[0] & cin__h17110 ;
  assign y__h21515 =
	     { x__h21590 | y__h21591,
	       x__h21807 | y__h21808,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549[0] |
	       y__h21933,
	       cin__h16642 } ;
  assign y__h21591 = x__h21729 & cin__h16642 ;
  assign y__h21593 =
	     x__h21662 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549[0] ;
  assign y__h21595 =
	     p__h16649[2] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549[1] ;
  assign y__h21808 = x__h21877 & cin__h16642 ;
  assign y__h21810 =
	     p__h16649[1] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d549[0] ;
  assign y__h21933 = p__h16649[0] & cin__h16642 ;
  assign y__h21981 =
	     { x__h22056 | y__h22057,
	       x__h22273 | y__h22274,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529[0] |
	       y__h22399,
	       cin__h16174 } ;
  assign y__h22057 = x__h22195 & cin__h16174 ;
  assign y__h22059 =
	     x__h22128 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529[0] ;
  assign y__h22061 =
	     p__h16181[2] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529[1] ;
  assign y__h22274 = x__h22343 & cin__h16174 ;
  assign y__h22276 =
	     p__h16181[1] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d529[0] ;
  assign y__h22399 = p__h16181[0] & cin__h16174 ;
  assign y__h22447 =
	     { x__h22522 | y__h22523,
	       x__h22739 | y__h22740,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d515[0] |
	       y__h22865,
	       _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d733 } ;
  assign y__h22523 =
	     x__h22661 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d733 ;
  assign y__h22525 =
	     x__h22594 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d515[0] ;
  assign y__h22527 =
	     p__h768[2] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d515[1] ;
  assign y__h22740 =
	     x__h22809 &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d733 ;
  assign y__h22742 =
	     p__h768[1] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d515[0] ;
  assign y__h22865 =
	     p__h768[0] &
	     _1_CONCAT_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_7_XOR_ETC___d733 ;
  assign y__h2341 =
	     x__h2410 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[5] ;
  assign y__h2343 =
	     p__h1387[1] &
	     INV_mac_rg_a_BIT_7_AND_mac_rg_b_BIT_6_CONCAT_m_ETC___d18[0] ;
  assign y__h2466 =
	     p__h1387[0] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[5] ;
  assign y__h2715 = x__h3480 & y__h3568 ;
  assign y__h2717 = x__h3480 & y__h3481 ;
  assign y__h2719 = x__h3416 & y__h3417 ;
  assign y__h2721 = x__h3361 & y__h3362 ;
  assign y__h2836 = {7{mac_rg_b[4]}} ;
  assign y__h2965 = {7{mac_rg_b[3]}} ;
  assign y__h3094 = {7{mac_rg_b[2]}} ;
  assign y__h3223 = {7{mac_rg_b[1]}} ;
  assign y__h3362 =
	     ~x__h2916 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[6] ;
  assign y__h3417 =
	     ~x__h3045 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[6] ;
  assign y__h3419 =
	     ~x__h2916 ^
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[6] ;
  assign y__h3481 =
	     ~x__h3174 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95[6] ;
  assign y__h3483 =
	     ~x__h3045 ^
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_3_9_3___d84[6] ;
  assign y__h3568 =
	     ~x__h3174 ^
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_4___d95[6] ;
  assign y__h3745 = x__h3813 & y__h3568 ;
  assign y__h3747 = x__h3813 & y__h3481 ;
  assign y__h3749 = y__h3419 & y__h3417 ;
  assign y__h3953 = y__h3483 & y__h3568 ;
  assign y__h3955 = y__h3483 & y__h3481 ;
  assign y__h4172 = x__h2662 & cin__h2613 ;
  assign y__h4540 = x__h10483 & cin__h4513 ;
  assign y__h4542 = x__h10397 & y__h10398 ;
  assign y__h4544 = x__h10333 & y__h10334 ;
  assign y__h4546 = x__h10278 & y__h10279 ;
  assign y__h4817 =
	     x__h8030 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[6] ;
  assign y__h4819 = x__h7944 & y__h7945 ;
  assign y__h4821 = x__h7880 & y__h7881 ;
  assign y__h4823 = x__h7825 & y__h7826 ;
  assign y__h4907 =
	     x__h5201 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6__0___d11[0] ;
  assign y__h4909 =
	     x__h5111 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131[0] ;
  assign y__h4911 =
	     x__h5044 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131[1] ;
  assign y__h4913 =
	     p__h4887[3] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131[2] ;
  assign y__h5404 =
	     x__h5542 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6__0___d11[0] ;
  assign y__h5406 =
	     x__h5475 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131[0] ;
  assign y__h5408 =
	     p__h4887[2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131[1] ;
  assign y__h5621 =
	     x__h5690 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6__0___d11[0] ;
  assign y__h5623 =
	     p__h4887[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d131[0] ;
  assign y__h5746 =
	     p__h4887[0] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6__0___d11[0] ;
  assign y__h5898 = {7{mac_rg_b[0]}} ;
  assign y__h6001 = x__h6246 & y__h6247 ;
  assign y__h6003 =
	     x__h6182 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d155[0] ;
  assign y__h6005 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157[2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d155[1] ;
  assign y__h6247 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_0_6_ETC___d171[6] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[5] ;
  assign y__h6513 = x__h6579 & y__h6247 ;
  assign y__h6515 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d155[0] ;
  assign y__h6721 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_6___ETC___d157[0] &
	     y__h6247 ;
  assign y__h6936 =
	     x__h7230 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[0] ;
  assign y__h6938 =
	     x__h7140 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221[0] ;
  assign y__h6940 =
	     x__h7073 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221[1] ;
  assign y__h6942 =
	     p__h6916[3] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221[2] ;
  assign y__h7433 =
	     x__h7571 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[0] ;
  assign y__h7435 =
	     x__h7504 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221[0] ;
  assign y__h7437 =
	     p__h6916[2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221[1] ;
  assign y__h7650 =
	     x__h7719 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[0] ;
  assign y__h7652 =
	     p__h6916[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_2_0_ETC___d221[0] ;
  assign y__h7775 =
	     p__h6916[0] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[0] ;
  assign y__h7826 = sum__h4893[3] & sum__h5985[3] ;
  assign y__h7881 = sum_BIT_0___h5815 & cout__h6921 ;
  assign y__h7883 = sum__h4893[3] ^ sum__h5985[3] ;
  assign y__h7945 = ~x__h5849 & sum__h6922[3] ;
  assign y__h7947 = sum_BIT_0___h5815 ^ cout__h6921 ;
  assign y__h8032 = ~x__h5849 ^ sum__h6922[3] ;
  assign y__h8228 =
	     x__h8360 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[6] ;
  assign y__h8230 = x__h8296 & y__h7945 ;
  assign y__h8232 = y__h7883 & y__h7881 ;
  assign y__h8436 =
	     x__h8502 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[6] ;
  assign y__h8438 = y__h7947 & y__h7945 ;
  assign y__h8556 =
	     y__h8032 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_1_1_73___d174[6] ;
  assign y__h8612 = x__h4724 & cin__h4675 ;
  assign y__h8832 = x__h8759 & sum__h4803[3] ;
  assign y__h9054 = x__h9299 & y__h9300 ;
  assign y__h9056 =
	     x__h9235 &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d322[0] ;
  assign y__h9058 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324[2] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d322[1] ;
  assign y__h9300 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_2___d73[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_5_7_8___d39[0] ;
  assign y__h9566 = x__h9632 & y__h9300 ;
  assign y__h9568 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324[1] &
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d322[0] ;
  assign y__h9774 =
	     mac_rg_a_BITS_6_TO_0_AND_SEXT_mac_rg_b_BIT_4_3_ETC___d324[0] &
	     y__h9300 ;
  assign y__h9968 = x__h8979 & sum__h4803[2] ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        as1 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs1 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	cs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	failed_cases <= `BSV_ASSIGNMENT_DELAY 32'd0;
	mac_out <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	mac_rg_a <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	mac_rg_b <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	mac_rg_c <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_a <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_af <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_b <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_bf <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_c <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_cf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_macf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_r <= `BSV_ASSIGNMENT_DELAY 1'b1;
      end
    else
      begin
        if (as1$EN) as1 <= `BSV_ASSIGNMENT_DELAY as1$D_IN;
	if (bs1$EN) bs1 <= `BSV_ASSIGNMENT_DELAY bs1$D_IN;
	if (count$EN) count <= `BSV_ASSIGNMENT_DELAY count$D_IN;
	if (cs1$EN) cs1 <= `BSV_ASSIGNMENT_DELAY cs1$D_IN;
	if (failed_cases$EN)
	  failed_cases <= `BSV_ASSIGNMENT_DELAY failed_cases$D_IN;
	if (mac_out$EN) mac_out <= `BSV_ASSIGNMENT_DELAY mac_out$D_IN;
	if (mac_rg_a$EN) mac_rg_a <= `BSV_ASSIGNMENT_DELAY mac_rg_a$D_IN;
	if (mac_rg_b$EN) mac_rg_b <= `BSV_ASSIGNMENT_DELAY mac_rg_b$D_IN;
	if (mac_rg_c$EN) mac_rg_c <= `BSV_ASSIGNMENT_DELAY mac_rg_c$D_IN;
	if (macs1$EN) macs1 <= `BSV_ASSIGNMENT_DELAY macs1$D_IN;
	if (rg_a$EN) rg_a <= `BSV_ASSIGNMENT_DELAY rg_a$D_IN;
	if (rg_af$EN) rg_af <= `BSV_ASSIGNMENT_DELAY rg_af$D_IN;
	if (rg_b$EN) rg_b <= `BSV_ASSIGNMENT_DELAY rg_b$D_IN;
	if (rg_bf$EN) rg_bf <= `BSV_ASSIGNMENT_DELAY rg_bf$D_IN;
	if (rg_c$EN) rg_c <= `BSV_ASSIGNMENT_DELAY rg_c$D_IN;
	if (rg_cf$EN) rg_cf <= `BSV_ASSIGNMENT_DELAY rg_cf$D_IN;
	if (rg_macf$EN) rg_macf <= `BSV_ASSIGNMENT_DELAY rg_macf$D_IN;
	if (rg_r$EN) rg_r <= `BSV_ASSIGNMENT_DELAY rg_r$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    as1 = 16'hAAAA;
    bs1 = 16'hAAAA;
    count = 32'hAAAAAAAA;
    cs1 = 32'hAAAAAAAA;
    failed_cases = 32'hAAAAAAAA;
    mac_out = 32'hAAAAAAAA;
    mac_rg_a = 8'hAA;
    mac_rg_b = 8'hAA;
    mac_rg_c = 32'hAAAAAAAA;
    macs1 = 32'hAAAAAAAA;
    rg_a = 16'hAAAA;
    rg_af = 16'hAAAA;
    rg_b = 16'hAAAA;
    rg_bf = 16'hAAAA;
    rg_c = 32'hAAAAAAAA;
    rg_cf = 32'hAAAAAAAA;
    rg_macf = 32'hAAAAAAAA;
    rg_r = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (NOT_mac_out_80_EQ_macs1_81_82___d883)
	$display("%d --Expected O/P --- %b, Actual O/P-- %b",
		 $signed(count),
		 macs1,
		 mac_out);
    if (RST_N != `BSV_RESET_VALUE)
      if (count == 32'd1052)
	$display("Failed for %d cases", $signed(failed_cases));
    if (RST_N != `BSV_RESET_VALUE) if (count == 32'd1052) $finish(32'd0);
  end
  // synopsys translate_on
endmodule  // mk_Tb

