//
// Generated by Bluespec Compiler, version 2024.07 (build b4f31dbe)
//
// On Mon Oct 28 22:02:26 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mk_Tb(CLK,
	     RST_N);
  input  CLK;
  input  RST_N;

  // register count
  reg [31 : 0] count;
  wire [31 : 0] count$D_IN;
  wire count$EN;

  // register failed_cases
  reg [31 : 0] failed_cases;
  wire [31 : 0] failed_cases$D_IN;
  wire failed_cases$EN;

  // register int_mac_out
  reg [31 : 0] int_mac_out;
  wire [31 : 0] int_mac_out$D_IN;
  wire int_mac_out$EN;

  // register int_mac_rg_a
  reg [7 : 0] int_mac_rg_a;
  wire [7 : 0] int_mac_rg_a$D_IN;
  wire int_mac_rg_a$EN;

  // register int_mac_rg_b
  reg [7 : 0] int_mac_rg_b;
  wire [7 : 0] int_mac_rg_b$D_IN;
  wire int_mac_rg_b$EN;

  // register int_mac_rg_c
  reg [31 : 0] int_mac_rg_c;
  wire [31 : 0] int_mac_rg_c$D_IN;
  wire int_mac_rg_c$EN;

  // register int_mac_rg_c1
  reg [31 : 0] int_mac_rg_c1;
  wire [31 : 0] int_mac_rg_c1$D_IN;
  wire int_mac_rg_c1$EN;

  // register int_mac_rg_prod1
  reg [15 : 0] int_mac_rg_prod1;
  wire [15 : 0] int_mac_rg_prod1$D_IN;
  wire int_mac_rg_prod1$EN;

  // register macs1
  reg [31 : 0] macs1;
  wire [31 : 0] macs1$D_IN;
  wire macs1$EN;

  // register macs2
  reg [31 : 0] macs2;
  wire [31 : 0] macs2$D_IN;
  wire macs2$EN;

  // register rg_a
  reg [7 : 0] rg_a;
  wire [7 : 0] rg_a$D_IN;
  wire rg_a$EN;

  // register rg_af
  reg [7 : 0] rg_af;
  wire [7 : 0] rg_af$D_IN;
  wire rg_af$EN;

  // register rg_b
  reg [7 : 0] rg_b;
  wire [7 : 0] rg_b$D_IN;
  wire rg_b$EN;

  // register rg_bf
  reg [7 : 0] rg_bf;
  wire [7 : 0] rg_bf$D_IN;
  wire rg_bf$EN;

  // register rg_c
  reg [31 : 0] rg_c;
  wire [31 : 0] rg_c$D_IN;
  wire rg_c$EN;

  // register rg_cf
  reg [31 : 0] rg_cf;
  wire [31 : 0] rg_cf$D_IN;
  wire rg_cf$EN;

  // register rg_mac
  reg [31 : 0] rg_mac;
  wire [31 : 0] rg_mac$D_IN;
  wire rg_mac$EN;

  // register rg_macf
  reg [31 : 0] rg_macf;
  wire [31 : 0] rg_macf$D_IN;
  wire rg_macf$EN;

  // register rg_r
  reg rg_r;
  wire rg_r$D_IN, rg_r$EN;

  // ports of submodule obj_inp
  wire [31 : 0] obj_inp$out_c, obj_inp$out_mac;
  wire [7 : 0] obj_inp$out_a, obj_inp$out_b;
  wire obj_inp$EN, obj_inp$read;

  // remaining internal signals
  wire [11 : 0] INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d561;
  wire [9 : 0] INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d560;
  wire [7 : 0] int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d559;
  wire [6 : 0] INV_x265__q1,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d11,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d171,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95,
	       x__h1265,
	       y__h1267,
	       y__h1487,
	       y__h1943,
	       y__h2795,
	       y__h2924,
	       y__h3053,
	       y__h3182,
	       y__h5857;
  wire [3 : 0] INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18,
	       carrrg_b__h10801,
	       carrrg_b__h10891,
	       carrrg_b__h1127,
	       carrrg_b__h13110,
	       carrrg_b__h1350,
	       carrrg_b__h4760,
	       carrrg_b__h4850,
	       carrrg_b__h5942,
	       carrrg_b__h6879,
	       carrrg_b__h8995,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424,
	       int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667,
	       int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646,
	       int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709,
	       int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d571,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625,
	       p__h10797,
	       p__h10887,
	       p__h1123,
	       p__h13106,
	       p__h1346,
	       p__h15798,
	       p__h16276,
	       p__h16752,
	       p__h17228,
	       p__h17703,
	       p__h18112,
	       p__h18521,
	       p__h18929,
	       p__h4756,
	       p__h4846,
	       p__h5938,
	       p__h6875,
	       p__h8991,
	       rg_a__h10788,
	       rg_a__h1337,
	       rg_a__h17219,
	       rg_b__h10789,
	       sum__h10803,
	       sum__h10893,
	       sum__h1129,
	       sum__h13112,
	       sum__h1352,
	       sum__h15800,
	       sum__h16278,
	       sum__h16754,
	       sum__h17230,
	       sum__h17705,
	       sum__h18114,
	       sum__h18523,
	       sum__h18931,
	       sum__h4762,
	       sum__h4852,
	       sum__h5944,
	       sum__h6881,
	       sum__h8997,
	       y__h19311,
	       y__h19777,
	       y__h20243,
	       y__h20709,
	       y__h21175,
	       y__h21641,
	       y__h22107,
	       y__h22573;
  wire [2 : 0] int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d155,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d322,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324;
  wire [1 : 0] int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d477,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d547;
  wire INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d345,
       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d351,
       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_3__ETC___d311,
       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_3__ETC___d317,
       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d109,
       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d117,
       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d278,
       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d281,
       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d501,
       a__h10715,
       a__h2570,
       a__h4632,
       a__h8667,
       a__h8887,
       b__h8888,
       cin__h10555,
       cin__h2572,
       cin__h4472,
       cin__h4634,
       cout__h10892,
       cout__h1351,
       cout__h4851,
       cout__h5943,
       cout__h6880,
       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d370,
       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d376,
       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d447,
       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d450,
       int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_7_AND__ETC___d503,
       int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_7___d5,
       int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d729,
       int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d731,
       int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d725,
       int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d727,
       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d733,
       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d735,
       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d737,
       sum_BIT_0___h5774,
       x__h10136,
       x__h10209,
       x__h10237,
       x__h10292,
       x__h10356,
       x__h10442,
       x__h10581,
       x__h10583,
       x__h10585,
       x__h10587,
       x__h10816,
       x__h10818,
       x__h10820,
       x__h10906,
       x__h10908,
       x__h10910,
       x__h11044,
       x__h11111,
       x__h11201,
       x__h11403,
       x__h11405,
       x__h11475,
       x__h11542,
       x__h11620,
       x__h11690,
       x__h11894,
       x__h11961,
       x__h12051,
       x__h12252,
       x__h12254,
       x__h12324,
       x__h12391,
       x__h12469,
       x__h12539,
       x__h12783,
       x__h12838,
       x__h12902,
       x__h12988,
       x__h13309,
       x__h13373,
       x__h1365,
       x__h1367,
       x__h1369,
       x__h13706,
       x__h14101,
       x__h14103,
       x__h14170,
       x__h14234,
       x__h14309,
       x__h14376,
       x__h1438,
       x__h14567,
       x__h14569,
       x__h14636,
       x__h14700,
       x__h14775,
       x__h14842,
       x__h15241,
       x__h15308,
       x__h1613,
       x__h16291,
       x__h16293,
       x__h16295,
       x__h16475,
       x__h16542,
       x__h16632,
       x__h16767,
       x__h16769,
       x__h16771,
       x__h1680,
       x__h16951,
       x__h17018,
       x__h17108,
       x__h17243,
       x__h17245,
       x__h17247,
       x__h17427,
       x__h17494,
       x__h17584,
       x__h1770,
       x__h17718,
       x__h17720,
       x__h17722,
       x__h17836,
       x__h17903,
       x__h17993,
       x__h18127,
       x__h18129,
       x__h18131,
       x__h18245,
       x__h18312,
       x__h18402,
       x__h18536,
       x__h18538,
       x__h18540,
       x__h18654,
       x__h18721,
       x__h18811,
       x__h1894,
       x__h18946,
       x__h18948,
       x__h19062,
       x__h19129,
       x__h19388,
       x__h19458,
       x__h19852,
       x__h19854,
       x__h19924,
       x__h19991,
       x__h20069,
       x__h20139,
       x__h20318,
       x__h20320,
       x__h20390,
       x__h20457,
       x__h20535,
       x__h20605,
       x__h20784,
       x__h20786,
       x__h2082,
       x__h2084,
       x__h20856,
       x__h20923,
       x__h21001,
       x__h21071,
       x__h21250,
       x__h21252,
       x__h21322,
       x__h21389,
       x__h21467,
       x__h21537,
       x__h2154,
       x__h21716,
       x__h21718,
       x__h21788,
       x__h21855,
       x__h21933,
       x__h22003,
       x__h22182,
       x__h22184,
       x__h2221,
       x__h22254,
       x__h22321,
       x__h22399,
       x__h22469,
       x__h22648,
       x__h22650,
       x__h22720,
       x__h22787,
       x__h22865,
       x__h22935,
       x__h2299,
       x__h2369,
       x__h2621,
       x__h2673,
       x__h2675,
       x__h2677,
       x__h2679,
       x__h2746,
       x__h2875,
       x__h3004,
       x__h3133,
       x__h3320,
       x__h3375,
       x__h3439,
       x__h3703,
       x__h3705,
       x__h3772,
       x__h3911,
       x__h4130,
       x__h4498,
       x__h4500,
       x__h4502,
       x__h4504,
       x__h4683,
       x__h4775,
       x__h4777,
       x__h4779,
       x__h4781,
       x__h4865,
       x__h4867,
       x__h4869,
       x__h5003,
       x__h5070,
       x__h5160,
       x__h5362,
       x__h5364,
       x__h5434,
       x__h5501,
       x__h5579,
       x__h5649,
       x__h5808,
       x__h5959,
       x__h5961,
       x__h6141,
       x__h6205,
       x__h6471,
       x__h6538,
       x__h6894,
       x__h6896,
       x__h6898,
       x__h7032,
       x__h7099,
       x__h7189,
       x__h7391,
       x__h7393,
       x__h7463,
       x__h7530,
       x__h7608,
       x__h7678,
       x__h7784,
       x__h7839,
       x__h7903,
       x__h7989,
       x__h8186,
       x__h8188,
       x__h8255,
       x__h8319,
       x__h8394,
       x__h8461,
       x__h8570,
       x__h8718,
       x__h8790,
       x__h8938,
       x__h9012,
       x__h9014,
       x__h9194,
       x__h9258,
       x__h9524,
       x__h9591,
       x__h9926,
       y__h10210,
       y__h10238,
       y__h10293,
       y__h10295,
       y__h10357,
       y__h10359,
       y__h10444,
       y__h10582,
       y__h10584,
       y__h10586,
       y__h10588,
       y__h10817,
       y__h10819,
       y__h10821,
       y__h10823,
       y__h10907,
       y__h10909,
       y__h10911,
       y__h10913,
       y__h11404,
       y__h11406,
       y__h11408,
       y__h11621,
       y__h11623,
       y__h11746,
       y__h12253,
       y__h12255,
       y__h12257,
       y__h12470,
       y__h12472,
       y__h12595,
       y__h12784,
       y__h12841,
       y__h13374,
       y__h13640,
       y__h1366,
       y__h1368,
       y__h1370,
       y__h1372,
       y__h13848,
       y__h14102,
       y__h14104,
       y__h14106,
       y__h14310,
       y__h14312,
       y__h14430,
       y__h14568,
       y__h14570,
       y__h14572,
       y__h14776,
       y__h14778,
       y__h14896,
       y__h15061,
       y__h15103,
       y__h15105,
       y__h15168,
       y__h15242,
       y__h15244,
       y__h15362,
       y__h16292,
       y__h16294,
       y__h16296,
       y__h16298,
       y__h16768,
       y__h16770,
       y__h16772,
       y__h16774,
       y__h17244,
       y__h17246,
       y__h17248,
       y__h17250,
       y__h17719,
       y__h17721,
       y__h17723,
       y__h17725,
       y__h18128,
       y__h18130,
       y__h18132,
       y__h18134,
       y__h18537,
       y__h18539,
       y__h18541,
       y__h18543,
       y__h18947,
       y__h18949,
       y__h18951,
       y__h19389,
       y__h19391,
       y__h19606,
       y__h19853,
       y__h19855,
       y__h19857,
       y__h20070,
       y__h20072,
       y__h20195,
       y__h20319,
       y__h20321,
       y__h20323,
       y__h20536,
       y__h20538,
       y__h20661,
       y__h20785,
       y__h20787,
       y__h20789,
       y__h2083,
       y__h2085,
       y__h2087,
       y__h21002,
       y__h21004,
       y__h21127,
       y__h21251,
       y__h21253,
       y__h21255,
       y__h21468,
       y__h21470,
       y__h21593,
       y__h21717,
       y__h21719,
       y__h21721,
       y__h21934,
       y__h21936,
       y__h22059,
       y__h22183,
       y__h22185,
       y__h22187,
       y__h22400,
       y__h22402,
       y__h22525,
       y__h22649,
       y__h22651,
       y__h22653,
       y__h22866,
       y__h22868,
       y__h22991,
       y__h2300,
       y__h2302,
       y__h2425,
       y__h2674,
       y__h2676,
       y__h2678,
       y__h2680,
       y__h3321,
       y__h3376,
       y__h3378,
       y__h3440,
       y__h3442,
       y__h3527,
       y__h3704,
       y__h3706,
       y__h3708,
       y__h3912,
       y__h3914,
       y__h4131,
       y__h4499,
       y__h4501,
       y__h4503,
       y__h4505,
       y__h4776,
       y__h4778,
       y__h4780,
       y__h4782,
       y__h4866,
       y__h4868,
       y__h4870,
       y__h4872,
       y__h5363,
       y__h5365,
       y__h5367,
       y__h5580,
       y__h5582,
       y__h5705,
       y__h5960,
       y__h5962,
       y__h5964,
       y__h6206,
       y__h6472,
       y__h6474,
       y__h6680,
       y__h6895,
       y__h6897,
       y__h6899,
       y__h6901,
       y__h7392,
       y__h7394,
       y__h7396,
       y__h7609,
       y__h7611,
       y__h7734,
       y__h7785,
       y__h7840,
       y__h7842,
       y__h7904,
       y__h7906,
       y__h7991,
       y__h8187,
       y__h8189,
       y__h8191,
       y__h8395,
       y__h8397,
       y__h8515,
       y__h8571,
       y__h8791,
       y__h9013,
       y__h9015,
       y__h9017,
       y__h9259,
       y__h9525,
       y__h9527,
       y__h9733,
       y__h9927;

  // submodule obj_inp
  file_read obj_inp(.RST(RST_N),
		    .clk(CLK),
		    .read(obj_inp$read),
		    .EN(obj_inp$EN),
		    .out_a(obj_inp$out_a),
		    .out_b(obj_inp$out_b),
		    .out_c(obj_inp$out_c),
		    .out_mac(obj_inp$out_mac));

  // register count
  assign count$D_IN = count + 32'd1 ;
  assign count$EN = 1'd1 ;

  // register failed_cases
  assign failed_cases$D_IN = failed_cases + 32'd1 ;
  assign failed_cases$EN =
	     int_mac_out != macs2 && (count ^ 32'h80000000) > 32'h80000002 ;

  // register int_mac_out
  assign int_mac_out$D_IN =
	     { sum__h15800,
	       sum__h16278,
	       sum__h16754,
	       sum__h17230,
	       sum__h17705,
	       sum__h18114,
	       sum__h18523,
	       sum__h18931 } ;
  assign int_mac_out$EN = 1'd1 ;

  // register int_mac_rg_a
  assign int_mac_rg_a$D_IN = obj_inp$out_a ;
  assign int_mac_rg_a$EN = 1'd1 ;

  // register int_mac_rg_b
  assign int_mac_rg_b$D_IN = obj_inp$out_b ;
  assign int_mac_rg_b$EN = 1'd1 ;

  // register int_mac_rg_c
  assign int_mac_rg_c$D_IN = obj_inp$out_c ;
  assign int_mac_rg_c$EN = 1'd1 ;

  // register int_mac_rg_c1
  assign int_mac_rg_c1$D_IN = int_mac_rg_c ;
  assign int_mac_rg_c1$EN = 1'd1 ;

  // register int_mac_rg_prod1
  assign int_mac_rg_prod1$D_IN =
	     { sum__h1129[2:0],
	       x__h10237 ^ (x__h14567 | y__h14568),
	       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d561 } ;
  assign int_mac_rg_prod1$EN = 1'd1 ;

  // register macs1
  assign macs1$D_IN = rg_macf ;
  assign macs1$EN = 1'd1 ;

  // register macs2
  assign macs2$D_IN = macs1 ;
  assign macs2$EN = 1'd1 ;

  // register rg_a
  assign rg_a$D_IN = 8'h0 ;
  assign rg_a$EN = 1'b0 ;

  // register rg_af
  assign rg_af$D_IN = 8'h0 ;
  assign rg_af$EN = 1'b0 ;

  // register rg_b
  assign rg_b$D_IN = 8'h0 ;
  assign rg_b$EN = 1'b0 ;

  // register rg_bf
  assign rg_bf$D_IN = 8'h0 ;
  assign rg_bf$EN = 1'b0 ;

  // register rg_c
  assign rg_c$D_IN = 32'h0 ;
  assign rg_c$EN = 1'b0 ;

  // register rg_cf
  assign rg_cf$D_IN = 32'h0 ;
  assign rg_cf$EN = 1'b0 ;

  // register rg_mac
  assign rg_mac$D_IN = 32'h0 ;
  assign rg_mac$EN = 1'b0 ;

  // register rg_macf
  assign rg_macf$D_IN = obj_inp$out_mac ;
  assign rg_macf$EN = 1'd1 ;

  // register rg_r
  assign rg_r$D_IN = 1'b0 ;
  assign rg_r$EN = 1'b0 ;

  // submodule obj_inp
  assign obj_inp$read = 1'b1 ;
  assign obj_inp$EN = 1'd1 ;

  // remaining internal signals
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d345 =
	     x__h9926 | y__h9927 ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d351 =
	     x__h8938 ^ sum__h4762[2] ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d560 =
	     { y__h10444 ^ cin__h4472,
	       x__h12783 ^ (x__h14101 | y__h14102),
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d559 } ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_3__ETC___d311 =
	     x__h8790 | y__h8791 ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_3__ETC___d317 =
	     x__h8718 ^ sum__h4762[3] ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d109 =
	     x__h4130 | y__h4131 ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d117 =
	     x__h2621 ^ cin__h2572 ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d278 =
	     x__h8570 | y__h8571 ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d281 =
	     x__h4683 ^ cin__h4634 ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d501 =
	     x__h4498 | y__h4499 ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d561 =
	     { y__h10295 ^ (x__h14775 | y__h14776),
	       y__h10359 ^ (y__h10357 | y__h14896),
	       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d560 } ;
  assign INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18 =
	     rg_a__h1337 & INV_x265__q1[6:3] ;
  assign INV_x265__q1 = ~x__h1265 ;
  assign a__h10715 = x__h10816 | y__h10817 ;
  assign a__h2570 = x__h2673 | y__h2674 ;
  assign a__h4632 = x__h3320 ^ (x__h3703 | y__h3704) ;
  assign a__h8667 = y__h3378 ^ (x__h3911 | y__h3912) ;
  assign a__h8887 = y__h3442 ^ (y__h3440 | y__h3527) ;
  assign b__h8888 = x__h9012 | y__h9013 ;
  assign carrrg_b__h10801 =
	     { x__h12252 | y__h12253,
	       x__h12469 | y__h12470,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424[0] |
	       y__h12595,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[0] } ;
  assign carrrg_b__h10891 =
	     { x__h11403 | y__h11404,
	       x__h11620 | y__h11621,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379[0] |
	       y__h11746,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95[0] } ;
  assign carrrg_b__h1127 =
	     { int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_7_AND__ETC___d503,
	       int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_7_AND__ETC___d503,
	       y__h15103 | y__h15362,
	       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d501 } ;
  assign carrrg_b__h13110 = { y__h13640, y__h13848, y__h13374, 1'b0 } ;
  assign carrrg_b__h1350 =
	     { x__h2082 | y__h2083,
	       x__h2299 | y__h2300,
	       INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18[0] |
	       y__h2425,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[5] } ;
  assign carrrg_b__h4760 =
	     { x__h8186 | y__h8187,
	       x__h8394 | y__h8395,
	       y__h7904 | y__h8515,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[6] } ;
  assign carrrg_b__h4850 =
	     { x__h5362 | y__h5363,
	       x__h5579 | y__h5580,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131[0] |
	       y__h5705,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d11[0] } ;
  assign carrrg_b__h5942 =
	     { x__h6471 | y__h6472,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d155[0] |
	       y__h6680,
	       y__h6206,
	       1'b0 } ;
  assign carrrg_b__h6879 =
	     { x__h7391 | y__h7392,
	       x__h7608 | y__h7609,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221[0] |
	       y__h7734,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[0] } ;
  assign carrrg_b__h8995 =
	     { x__h9524 | y__h9525,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d322[0] |
	       y__h9733,
	       y__h9259,
	       1'b0 } ;
  assign cin__h10555 = x__h13373 & y__h13374 ;
  assign cin__h2572 = ~x__h1894 ;
  assign cin__h4472 = x__h10581 | y__h10582 ;
  assign cin__h4634 = x__h4775 | y__h4776 ;
  assign cout__h10892 = x__h10906 | y__h10907 ;
  assign cout__h1351 = x__h1365 | y__h1366 ;
  assign cout__h4851 = x__h4865 | y__h4866 ;
  assign cout__h5943 = x__h5959 | y__h5960 ;
  assign cout__h6880 = x__h6894 | y__h6895 ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d11 =
	     int_mac_rg_a[6:0] & y__h1487 ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[5:2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[4:1] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d155 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d11[3:1] &
	     INV_x265__q1[2:0] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d11[3:1] ^
	     INV_x265__q1[2:0] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d171 =
	     int_mac_rg_a[6:0] & y__h5857 ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174 =
	     int_mac_rg_a[6:0] & y__h3182 ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95[5:2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[4:1] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d322 =
	     sum__h4852[2:0] & sum__h5944[2:0] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324 =
	     sum__h4852[2:0] ^ sum__h5944[2:0] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d370 =
	     x__h10209 | y__h10210 ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d376 =
	     x__h10136 ^ sum__h4762[1] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d171[5:2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[4:1] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39 =
	     int_mac_rg_a[6:0] & y__h1943 ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424 =
	     rg_a__h10788 & rg_b__h10789 ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d447 =
	     a__h10715 & sum__h8997[2] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d450 =
	     a__h10715 ^ sum__h8997[2] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d477 =
	     sum__h10803[3:2] & sum__h8997[1:0] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481 =
	     sum__h10803[3:2] ^ sum__h8997[1:0] ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d547 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481 ^
	     { int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d477[0] |
	       y__h14430,
	       cin__h10555 } ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d559 =
	     { y__h12841 ^ (x__h14309 | y__h14310),
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d547,
	       sum__h13112,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d171[0] } ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73 =
	     int_mac_rg_a[6:0] & y__h2795 ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84 =
	     int_mac_rg_a[6:0] & y__h2924 ;
  assign int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95 =
	     int_mac_rg_a[6:0] & y__h3053 ;
  assign int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_7_AND__ETC___d503 =
	     x__h15241 | y__h15242 ;
  assign int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_7___d5 =
	     int_mac_rg_a[7] & int_mac_rg_b[7] ;
  assign int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667 =
	     int_mac_rg_prod1[11:8] & int_mac_rg_c1[11:8] ;
  assign int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d729 =
	     x__h18127 | y__h18128 ;
  assign int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646 =
	     int_mac_rg_prod1[15:12] & int_mac_rg_c1[15:12] ;
  assign int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d731 =
	     x__h17718 | y__h17719 ;
  assign int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709 =
	     int_mac_rg_prod1[3:0] & int_mac_rg_c1[3:0] ;
  assign int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d725 =
	     x__h18946 | y__h18947 ;
  assign int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688 =
	     int_mac_rg_prod1[7:4] & int_mac_rg_c1[7:4] ;
  assign int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d727 =
	     x__h18536 | y__h18537 ;
  assign int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d571 =
	     rg_a__h17219 & int_mac_rg_c1[31:28] ;
  assign int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585 =
	     rg_a__h17219 & int_mac_rg_c1[27:24] ;
  assign int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605 =
	     rg_a__h17219 & int_mac_rg_c1[23:20] ;
  assign int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625 =
	     rg_a__h17219 & int_mac_rg_c1[19:16] ;
  assign int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d733 =
	     x__h17243 | y__h17244 ;
  assign int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d735 =
	     x__h16767 | y__h16768 ;
  assign int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d737 =
	     x__h16291 | y__h16292 ;
  assign p__h10797 = rg_a__h10788 ^ rg_b__h10789 ;
  assign p__h10887 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d171[5:2] ^
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[4:1] ;
  assign p__h1123 = { 2'd1, y__h15105, y__h15168 } ;
  assign p__h13106 =
	     { sum__h10803[1:0],
	       sum__h10893[0],
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d171[1] ^
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[0] } ;
  assign p__h1346 = rg_a__h1337 ^ INV_x265__q1[6:3] ;
  assign p__h15798 = rg_a__h17219 ^ int_mac_rg_c1[31:28] ;
  assign p__h16276 = rg_a__h17219 ^ int_mac_rg_c1[27:24] ;
  assign p__h16752 = rg_a__h17219 ^ int_mac_rg_c1[23:20] ;
  assign p__h17228 = rg_a__h17219 ^ int_mac_rg_c1[19:16] ;
  assign p__h17703 = int_mac_rg_prod1[15:12] ^ int_mac_rg_c1[15:12] ;
  assign p__h18112 = int_mac_rg_prod1[11:8] ^ int_mac_rg_c1[11:8] ;
  assign p__h18521 = int_mac_rg_prod1[7:4] ^ int_mac_rg_c1[7:4] ;
  assign p__h18929 = int_mac_rg_prod1[3:0] ^ int_mac_rg_c1[3:0] ;
  assign p__h4756 = { x__h7784, y__h7842, y__h7906, y__h7991 } ;
  assign p__h4846 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[5:2] ^
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[4:1] ;
  assign p__h5938 =
	     { int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d171[6] ^
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[5] } ;
  assign p__h6875 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95[5:2] ^
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[4:1] ;
  assign p__h8991 =
	     { int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[1] ^
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[0] } ;
  assign rg_a__h10788 = { cout__h10892, sum__h10893[3:1] } ;
  assign rg_a__h1337 =
	     { ~x__h1438,
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d11[6:4] } ;
  assign rg_a__h17219 = {4{int_mac_rg_prod1[15]}} ;
  assign rg_b__h10789 =
	     { sum__h6881[2:0],
	       int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95[1] } ;
  assign sum_BIT_0___h5774 = ~y__h3527 ;
  assign sum__h10803 = p__h10797 ^ carrrg_b__h10801 ;
  assign sum__h10893 = p__h10887 ^ carrrg_b__h10891 ;
  assign sum__h1129 = p__h1123 ^ carrrg_b__h1127 ;
  assign sum__h13112 = p__h13106 ^ carrrg_b__h13110 ;
  assign sum__h1352 = p__h1346 ^ carrrg_b__h1350 ;
  assign sum__h15800 = p__h15798 ^ y__h22573 ;
  assign sum__h16278 = p__h16276 ^ y__h22107 ;
  assign sum__h16754 = p__h16752 ^ y__h21641 ;
  assign sum__h17230 = p__h17228 ^ y__h21175 ;
  assign sum__h17705 = p__h17703 ^ y__h20709 ;
  assign sum__h18114 = p__h18112 ^ y__h20243 ;
  assign sum__h18523 = p__h18521 ^ y__h19777 ;
  assign sum__h18931 = p__h18929 ^ y__h19311 ;
  assign sum__h4762 = p__h4756 ^ carrrg_b__h4760 ;
  assign sum__h4852 = p__h4846 ^ carrrg_b__h4850 ;
  assign sum__h5944 = p__h5938 ^ carrrg_b__h5942 ;
  assign sum__h6881 = p__h6875 ^ carrrg_b__h6879 ;
  assign sum__h8997 = p__h8991 ^ carrrg_b__h8995 ;
  assign x__h10136 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[5] ^
	     sum__h8997[3] ;
  assign x__h10209 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[5] &
	     sum__h8997[3] ;
  assign x__h10237 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d117 ^
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d278 ;
  assign x__h10292 = x__h10237 & y__h10295 ;
  assign x__h10356 = x__h10292 & y__h10359 ;
  assign x__h10442 = x__h10356 & y__h10444 ;
  assign x__h10581 = x__h10583 | y__h10584 ;
  assign x__h10583 = x__h10585 | y__h10586 ;
  assign x__h10585 = x__h10587 | y__h10588 ;
  assign x__h10587 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d376 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d447 ;
  assign x__h10816 = x__h10818 | y__h10819 ;
  assign x__h10818 = x__h10820 | y__h10821 ;
  assign x__h10820 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424[3] |
	     y__h10823 ;
  assign x__h10906 = x__h10908 | y__h10909 ;
  assign x__h10908 = x__h10910 | y__h10911 ;
  assign x__h10910 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379[3] |
	     y__h10913 ;
  assign x__h11044 = p__h10887[3] & p__h10887[2] ;
  assign x__h11111 = x__h11044 & p__h10887[1] ;
  assign x__h11201 = x__h11111 & p__h10887[0] ;
  assign x__h11403 = x__h11405 | y__h11406 ;
  assign x__h11405 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379[2] |
	     y__h11408 ;
  assign x__h11475 = p__h10887[2] & p__h10887[1] ;
  assign x__h11542 = x__h11475 & p__h10887[0] ;
  assign x__h11620 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379[1] |
	     y__h11623 ;
  assign x__h11690 = p__h10887[1] & p__h10887[0] ;
  assign x__h11894 = p__h10797[3] & p__h10797[2] ;
  assign x__h11961 = x__h11894 & p__h10797[1] ;
  assign x__h12051 = x__h11961 & p__h10797[0] ;
  assign x__h12252 = x__h12254 | y__h12255 ;
  assign x__h12254 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424[2] |
	     y__h12257 ;
  assign x__h12324 = p__h10797[2] & p__h10797[1] ;
  assign x__h12391 = x__h12324 & p__h10797[0] ;
  assign x__h12469 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424[1] |
	     y__h12472 ;
  assign x__h12539 = p__h10797[1] & p__h10797[0] ;
  assign x__h1265 = int_mac_rg_a[6:0] & y__h1267 ;
  assign x__h12783 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d376 ^
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d447 ;
  assign x__h12838 = x__h12783 & y__h12841 ;
  assign x__h12902 =
	     x__h12838 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481[1] ;
  assign x__h12988 =
	     x__h12902 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481[0] ;
  assign x__h13309 = sum__h10803[1] & sum__h10803[0] ;
  assign x__h13373 = x__h13309 & sum__h10893[0] ;
  assign x__h1365 = x__h1367 | y__h1368 ;
  assign x__h1367 = x__h1369 | y__h1370 ;
  assign x__h1369 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18[3] |
	     y__h1372 ;
  assign x__h13706 = sum__h10803[0] & sum__h10893[0] ;
  assign x__h14101 = x__h14103 | y__h14104 ;
  assign x__h14103 = y__h12784 | y__h14106 ;
  assign x__h14170 =
	     y__h12841 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481[1] ;
  assign x__h14234 =
	     x__h14170 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481[0] ;
  assign x__h14309 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d477[1] |
	     y__h14312 ;
  assign x__h14376 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481[0] ;
  assign x__h1438 = int_mac_rg_a[7] & int_mac_rg_b[6] ;
  assign x__h14567 = x__h14569 | y__h14570 ;
  assign x__h14569 = y__h10238 | y__h14572 ;
  assign x__h14636 = y__h10295 & y__h10359 ;
  assign x__h14700 = x__h14636 & y__h10444 ;
  assign x__h14775 = y__h10293 | y__h14778 ;
  assign x__h14842 = y__h10359 & y__h10444 ;
  assign x__h15241 = y__h15061 | y__h15244 ;
  assign x__h15308 = y__h15105 & y__h15168 ;
  assign x__h1613 = p__h1346[3] & p__h1346[2] ;
  assign x__h16291 = x__h16293 | y__h16294 ;
  assign x__h16293 = x__h16295 | y__h16296 ;
  assign x__h16295 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585[3] |
	     y__h16298 ;
  assign x__h16475 = p__h16276[3] & p__h16276[2] ;
  assign x__h16542 = x__h16475 & p__h16276[1] ;
  assign x__h16632 = x__h16542 & p__h16276[0] ;
  assign x__h16767 = x__h16769 | y__h16770 ;
  assign x__h16769 = x__h16771 | y__h16772 ;
  assign x__h16771 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605[3] |
	     y__h16774 ;
  assign x__h1680 = x__h1613 & p__h1346[1] ;
  assign x__h16951 = p__h16752[3] & p__h16752[2] ;
  assign x__h17018 = x__h16951 & p__h16752[1] ;
  assign x__h17108 = x__h17018 & p__h16752[0] ;
  assign x__h17243 = x__h17245 | y__h17246 ;
  assign x__h17245 = x__h17247 | y__h17248 ;
  assign x__h17247 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625[3] |
	     y__h17250 ;
  assign x__h17427 = p__h17228[3] & p__h17228[2] ;
  assign x__h17494 = x__h17427 & p__h17228[1] ;
  assign x__h17584 = x__h17494 & p__h17228[0] ;
  assign x__h1770 = x__h1680 & p__h1346[0] ;
  assign x__h17718 = x__h17720 | y__h17721 ;
  assign x__h17720 = x__h17722 | y__h17723 ;
  assign x__h17722 =
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646[3] |
	     y__h17725 ;
  assign x__h17836 = p__h17703[3] & p__h17703[2] ;
  assign x__h17903 = x__h17836 & p__h17703[1] ;
  assign x__h17993 = x__h17903 & p__h17703[0] ;
  assign x__h18127 = x__h18129 | y__h18130 ;
  assign x__h18129 = x__h18131 | y__h18132 ;
  assign x__h18131 =
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667[3] |
	     y__h18134 ;
  assign x__h18245 = p__h18112[3] & p__h18112[2] ;
  assign x__h18312 = x__h18245 & p__h18112[1] ;
  assign x__h18402 = x__h18312 & p__h18112[0] ;
  assign x__h18536 = x__h18538 | y__h18539 ;
  assign x__h18538 = x__h18540 | y__h18541 ;
  assign x__h18540 =
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688[3] |
	     y__h18543 ;
  assign x__h18654 = p__h18521[3] & p__h18521[2] ;
  assign x__h18721 = x__h18654 & p__h18521[1] ;
  assign x__h18811 = x__h18721 & p__h18521[0] ;
  assign x__h1894 = int_mac_rg_a[7] & int_mac_rg_b[5] ;
  assign x__h18946 = x__h18948 | y__h18949 ;
  assign x__h18948 =
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709[3] |
	     y__h18951 ;
  assign x__h19062 = p__h18929[3] & p__h18929[2] ;
  assign x__h19129 = x__h19062 & p__h18929[1] ;
  assign x__h19388 =
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709[2] |
	     y__h19391 ;
  assign x__h19458 = p__h18929[2] & p__h18929[1] ;
  assign x__h19852 = x__h19854 | y__h19855 ;
  assign x__h19854 =
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688[2] |
	     y__h19857 ;
  assign x__h19924 = p__h18521[2] & p__h18521[1] ;
  assign x__h19991 = x__h19924 & p__h18521[0] ;
  assign x__h20069 =
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688[1] |
	     y__h20072 ;
  assign x__h20139 = p__h18521[1] & p__h18521[0] ;
  assign x__h20318 = x__h20320 | y__h20321 ;
  assign x__h20320 =
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667[2] |
	     y__h20323 ;
  assign x__h20390 = p__h18112[2] & p__h18112[1] ;
  assign x__h20457 = x__h20390 & p__h18112[0] ;
  assign x__h20535 =
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667[1] |
	     y__h20538 ;
  assign x__h20605 = p__h18112[1] & p__h18112[0] ;
  assign x__h20784 = x__h20786 | y__h20787 ;
  assign x__h20786 =
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646[2] |
	     y__h20789 ;
  assign x__h2082 = x__h2084 | y__h2085 ;
  assign x__h2084 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18[2] |
	     y__h2087 ;
  assign x__h20856 = p__h17703[2] & p__h17703[1] ;
  assign x__h20923 = x__h20856 & p__h17703[0] ;
  assign x__h21001 =
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646[1] |
	     y__h21004 ;
  assign x__h21071 = p__h17703[1] & p__h17703[0] ;
  assign x__h21250 = x__h21252 | y__h21253 ;
  assign x__h21252 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625[2] |
	     y__h21255 ;
  assign x__h21322 = p__h17228[2] & p__h17228[1] ;
  assign x__h21389 = x__h21322 & p__h17228[0] ;
  assign x__h21467 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625[1] |
	     y__h21470 ;
  assign x__h21537 = p__h17228[1] & p__h17228[0] ;
  assign x__h2154 = p__h1346[2] & p__h1346[1] ;
  assign x__h21716 = x__h21718 | y__h21719 ;
  assign x__h21718 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605[2] |
	     y__h21721 ;
  assign x__h21788 = p__h16752[2] & p__h16752[1] ;
  assign x__h21855 = x__h21788 & p__h16752[0] ;
  assign x__h21933 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605[1] |
	     y__h21936 ;
  assign x__h22003 = p__h16752[1] & p__h16752[0] ;
  assign x__h22182 = x__h22184 | y__h22185 ;
  assign x__h22184 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585[2] |
	     y__h22187 ;
  assign x__h2221 = x__h2154 & p__h1346[0] ;
  assign x__h22254 = p__h16276[2] & p__h16276[1] ;
  assign x__h22321 = x__h22254 & p__h16276[0] ;
  assign x__h22399 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585[1] |
	     y__h22402 ;
  assign x__h22469 = p__h16276[1] & p__h16276[0] ;
  assign x__h22648 = x__h22650 | y__h22651 ;
  assign x__h22650 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d571[2] |
	     y__h22653 ;
  assign x__h22720 = p__h15798[2] & p__h15798[1] ;
  assign x__h22787 = x__h22720 & p__h15798[0] ;
  assign x__h22865 =
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d571[1] |
	     y__h22868 ;
  assign x__h22935 = p__h15798[1] & p__h15798[0] ;
  assign x__h2299 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18[1] |
	     y__h2302 ;
  assign x__h2369 = p__h1346[1] & p__h1346[0] ;
  assign x__h2621 = a__h2570 ^ sum__h1352[2] ;
  assign x__h2673 = x__h2675 | y__h2676 ;
  assign x__h2675 = x__h2677 | y__h2678 ;
  assign x__h2677 = x__h2679 | y__h2680 ;
  assign x__h2679 =
	     ~x__h2746 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[6] ;
  assign x__h2746 = int_mac_rg_a[7] & int_mac_rg_b[4] ;
  assign x__h2875 = int_mac_rg_a[7] & int_mac_rg_b[3] ;
  assign x__h3004 = int_mac_rg_a[7] & int_mac_rg_b[2] ;
  assign x__h3133 = int_mac_rg_a[7] & int_mac_rg_b[1] ;
  assign x__h3320 =
	     ~x__h2746 ^
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[6] ;
  assign x__h3375 = x__h3320 & y__h3378 ;
  assign x__h3439 = x__h3375 & y__h3442 ;
  assign x__h3703 = x__h3705 | y__h3706 ;
  assign x__h3705 = y__h3321 | y__h3708 ;
  assign x__h3772 = y__h3378 & y__h3442 ;
  assign x__h3911 = y__h3376 | y__h3914 ;
  assign x__h4130 = a__h2570 & sum__h1352[2] ;
  assign x__h4498 = x__h4500 | y__h4501 ;
  assign x__h4500 = x__h4502 | y__h4503 ;
  assign x__h4502 = x__h4504 | y__h4505 ;
  assign x__h4504 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d117 &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d278 ;
  assign x__h4683 = a__h4632 ^ sum__h1352[1] ;
  assign x__h4775 = x__h4777 | y__h4778 ;
  assign x__h4777 = x__h4779 | y__h4780 ;
  assign x__h4779 = x__h4781 | y__h4782 ;
  assign x__h4781 = cout__h4851 & cout__h5943 ;
  assign x__h4865 = x__h4867 | y__h4868 ;
  assign x__h4867 = x__h4869 | y__h4870 ;
  assign x__h4869 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131[3] |
	     y__h4872 ;
  assign x__h5003 = p__h4846[3] & p__h4846[2] ;
  assign x__h5070 = x__h5003 & p__h4846[1] ;
  assign x__h5160 = x__h5070 & p__h4846[0] ;
  assign x__h5362 = x__h5364 | y__h5365 ;
  assign x__h5364 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131[2] |
	     y__h5367 ;
  assign x__h5434 = p__h4846[2] & p__h4846[1] ;
  assign x__h5501 = x__h5434 & p__h4846[0] ;
  assign x__h5579 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131[1] |
	     y__h5582 ;
  assign x__h5649 = p__h4846[1] & p__h4846[0] ;
  assign x__h5808 = int_mac_rg_a[7] & int_mac_rg_b[0] ;
  assign x__h5959 = x__h5961 | y__h5962 ;
  assign x__h5961 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d155[2] |
	     y__h5964 ;
  assign x__h6141 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157[2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157[1] ;
  assign x__h6205 =
	     x__h6141 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157[0] ;
  assign x__h6471 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d155[1] |
	     y__h6474 ;
  assign x__h6538 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157[0] ;
  assign x__h6894 = x__h6896 | y__h6897 ;
  assign x__h6896 = x__h6898 | y__h6899 ;
  assign x__h6898 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221[3] |
	     y__h6901 ;
  assign x__h7032 = p__h6875[3] & p__h6875[2] ;
  assign x__h7099 = x__h7032 & p__h6875[1] ;
  assign x__h7189 = x__h7099 & p__h6875[0] ;
  assign x__h7391 = x__h7393 | y__h7394 ;
  assign x__h7393 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221[2] |
	     y__h7396 ;
  assign x__h7463 = p__h6875[2] & p__h6875[1] ;
  assign x__h7530 = x__h7463 & p__h6875[0] ;
  assign x__h7608 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221[1] |
	     y__h7611 ;
  assign x__h7678 = p__h6875[1] & p__h6875[0] ;
  assign x__h7784 = cout__h4851 ^ cout__h5943 ;
  assign x__h7839 = x__h7784 & y__h7842 ;
  assign x__h7903 = x__h7839 & y__h7906 ;
  assign x__h7989 = x__h7903 & y__h7991 ;
  assign x__h8186 = x__h8188 | y__h8189 ;
  assign x__h8188 = y__h7785 | y__h8191 ;
  assign x__h8255 = y__h7842 & y__h7906 ;
  assign x__h8319 = x__h8255 & y__h7991 ;
  assign x__h8394 = y__h7840 | y__h8397 ;
  assign x__h8461 = y__h7906 & y__h7991 ;
  assign x__h8570 = a__h4632 & sum__h1352[1] ;
  assign x__h8718 = a__h8667 ^ sum__h1352[0] ;
  assign x__h8790 = a__h8667 & sum__h1352[0] ;
  assign x__h8938 = a__h8887 ^ b__h8888 ;
  assign x__h9012 = x__h9014 | y__h9015 ;
  assign x__h9014 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d322[2] |
	     y__h9017 ;
  assign x__h9194 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324[2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324[1] ;
  assign x__h9258 =
	     x__h9194 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324[0] ;
  assign x__h9524 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d322[1] |
	     y__h9527 ;
  assign x__h9591 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324[0] ;
  assign x__h9926 = a__h8887 & b__h8888 ;
  assign y__h10210 = x__h10136 & sum__h4762[1] ;
  assign y__h10238 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d281 &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_3__ETC___d311 ;
  assign y__h10293 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_3__ETC___d317 &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d345 ;
  assign y__h10295 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d281 ^
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_3__ETC___d311 ;
  assign y__h10357 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d351 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d370 ;
  assign y__h10359 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_3__ETC___d317 ^
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d345 ;
  assign y__h10444 =
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_2__ETC___d351 ^
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d370 ;
  assign y__h10582 = x__h12988 & cin__h10555 ;
  assign y__h10584 =
	     x__h12902 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d477[0] ;
  assign y__h10586 =
	     x__h12838 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d477[1] ;
  assign y__h10588 = x__h12783 & y__h12784 ;
  assign y__h10817 =
	     x__h12051 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[0] ;
  assign y__h10819 =
	     x__h11961 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424[0] ;
  assign y__h10821 =
	     x__h11894 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424[1] ;
  assign y__h10823 =
	     p__h10797[3] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424[2] ;
  assign y__h10907 =
	     x__h11201 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95[0] ;
  assign y__h10909 =
	     x__h11111 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379[0] ;
  assign y__h10911 =
	     x__h11044 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379[1] ;
  assign y__h10913 =
	     p__h10887[3] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379[2] ;
  assign y__h11404 =
	     x__h11542 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95[0] ;
  assign y__h11406 =
	     x__h11475 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379[0] ;
  assign y__h11408 =
	     p__h10887[2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379[1] ;
  assign y__h11621 =
	     x__h11690 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95[0] ;
  assign y__h11623 =
	     p__h10887[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d379[0] ;
  assign y__h11746 =
	     p__h10887[0] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95[0] ;
  assign y__h12253 =
	     x__h12391 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[0] ;
  assign y__h12255 =
	     x__h12324 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424[0] ;
  assign y__h12257 =
	     p__h10797[2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424[1] ;
  assign y__h12470 =
	     x__h12539 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[0] ;
  assign y__h12472 =
	     p__h10797[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d424[0] ;
  assign y__h12595 =
	     p__h10797[0] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[0] ;
  assign y__h1267 = {7{int_mac_rg_b[7]}} ;
  assign y__h12784 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d450 &
	     sum__h4762[0] ;
  assign y__h12841 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d450 ^
	     sum__h4762[0] ;
  assign y__h13374 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d171[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[0] ;
  assign y__h13640 = x__h13706 & y__h13374 ;
  assign y__h1366 =
	     x__h1770 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[5] ;
  assign y__h1368 =
	     x__h1680 &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18[0] ;
  assign y__h1370 =
	     x__h1613 &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18[1] ;
  assign y__h1372 =
	     p__h1346[3] &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18[2] ;
  assign y__h13848 = sum__h10893[0] & y__h13374 ;
  assign y__h14102 = x__h14234 & cin__h10555 ;
  assign y__h14104 =
	     x__h14170 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d477[0] ;
  assign y__h14106 =
	     y__h12841 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d477[1] ;
  assign y__h14310 = x__h14376 & cin__h10555 ;
  assign y__h14312 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d477[0] ;
  assign y__h14430 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d481[0] &
	     cin__h10555 ;
  assign y__h14568 = x__h14700 & cin__h4472 ;
  assign y__h14570 = x__h14636 & y__h10357 ;
  assign y__h14572 = y__h10295 & y__h10293 ;
  assign y__h14776 = x__h14842 & cin__h4472 ;
  assign y__h14778 = y__h10359 & y__h10357 ;
  assign y__h1487 = {7{int_mac_rg_b[6]}} ;
  assign y__h14896 = y__h10444 & cin__h4472 ;
  assign y__h15061 =
	     int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_7___d5 & cout__h1351 ;
  assign y__h15103 =
	     sum__h1352[3] &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d109 ;
  assign y__h15105 =
	     int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_7___d5 ^ cout__h1351 ;
  assign y__h15168 =
	     sum__h1352[3] ^
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d109 ;
  assign y__h15242 =
	     x__h15308 &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d501 ;
  assign y__h15244 = y__h15105 & y__h15103 ;
  assign y__h15362 =
	     y__h15168 &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_4__ETC___d501 ;
  assign y__h16292 =
	     x__h16632 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d735 ;
  assign y__h16294 =
	     x__h16542 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585[0] ;
  assign y__h16296 =
	     x__h16475 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585[1] ;
  assign y__h16298 =
	     p__h16276[3] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585[2] ;
  assign y__h16768 =
	     x__h17108 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d733 ;
  assign y__h16770 =
	     x__h17018 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605[0] ;
  assign y__h16772 =
	     x__h16951 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605[1] ;
  assign y__h16774 =
	     p__h16752[3] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605[2] ;
  assign y__h17244 =
	     x__h17584 &
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d731 ;
  assign y__h17246 =
	     x__h17494 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625[0] ;
  assign y__h17248 =
	     x__h17427 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625[1] ;
  assign y__h17250 =
	     p__h17228[3] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625[2] ;
  assign y__h17719 =
	     x__h17993 &
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d729 ;
  assign y__h17721 =
	     x__h17903 &
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646[0] ;
  assign y__h17723 =
	     x__h17836 &
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646[1] ;
  assign y__h17725 =
	     p__h17703[3] &
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646[2] ;
  assign y__h18128 =
	     x__h18402 &
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d727 ;
  assign y__h18130 =
	     x__h18312 &
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667[0] ;
  assign y__h18132 =
	     x__h18245 &
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667[1] ;
  assign y__h18134 =
	     p__h18112[3] &
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667[2] ;
  assign y__h18537 =
	     x__h18811 &
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d725 ;
  assign y__h18539 =
	     x__h18721 &
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688[0] ;
  assign y__h18541 =
	     x__h18654 &
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688[1] ;
  assign y__h18543 =
	     p__h18521[3] &
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688[2] ;
  assign y__h18947 =
	     x__h19129 &
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709[0] ;
  assign y__h18949 =
	     x__h19062 &
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709[1] ;
  assign y__h18951 =
	     p__h18929[3] &
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709[2] ;
  assign y__h19311 =
	     { x__h19388 | y__h19389,
	       int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709[1] |
	       y__h19606,
	       int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709[0],
	       1'b0 } ;
  assign y__h19389 =
	     x__h19458 &
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709[0] ;
  assign y__h19391 =
	     p__h18929[2] &
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709[1] ;
  assign y__h1943 = {7{int_mac_rg_b[5]}} ;
  assign y__h19606 =
	     p__h18929[1] &
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d709[0] ;
  assign y__h19777 =
	     { x__h19852 | y__h19853,
	       x__h20069 | y__h20070,
	       int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688[0] |
	       y__h20195,
	       int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d725 } ;
  assign y__h19853 =
	     x__h19991 &
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d725 ;
  assign y__h19855 =
	     x__h19924 &
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688[0] ;
  assign y__h19857 =
	     p__h18521[2] &
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688[1] ;
  assign y__h20070 =
	     x__h20139 &
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d725 ;
  assign y__h20072 =
	     p__h18521[1] &
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d688[0] ;
  assign y__h20195 =
	     p__h18521[0] &
	     int_mac_rg_prod1_64_BITS_3_TO_0_07_AND_int_mac_ETC___d725 ;
  assign y__h20243 =
	     { x__h20318 | y__h20319,
	       x__h20535 | y__h20536,
	       int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667[0] |
	       y__h20661,
	       int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d727 } ;
  assign y__h20319 =
	     x__h20457 &
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d727 ;
  assign y__h20321 =
	     x__h20390 &
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667[0] ;
  assign y__h20323 =
	     p__h18112[2] &
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667[1] ;
  assign y__h20536 =
	     x__h20605 &
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d727 ;
  assign y__h20538 =
	     p__h18112[1] &
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d667[0] ;
  assign y__h20661 =
	     p__h18112[0] &
	     int_mac_rg_prod1_64_BITS_7_TO_4_86_AND_int_mac_ETC___d727 ;
  assign y__h20709 =
	     { x__h20784 | y__h20785,
	       x__h21001 | y__h21002,
	       int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646[0] |
	       y__h21127,
	       int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d729 } ;
  assign y__h20785 =
	     x__h20923 &
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d729 ;
  assign y__h20787 =
	     x__h20856 &
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646[0] ;
  assign y__h20789 =
	     p__h17703[2] &
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646[1] ;
  assign y__h2083 =
	     x__h2221 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[5] ;
  assign y__h2085 =
	     x__h2154 &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18[0] ;
  assign y__h2087 =
	     p__h1346[2] &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18[1] ;
  assign y__h21002 =
	     x__h21071 &
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d729 ;
  assign y__h21004 =
	     p__h17703[1] &
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d646[0] ;
  assign y__h21127 =
	     p__h17703[0] &
	     int_mac_rg_prod1_64_BITS_11_TO_8_65_AND_int_ma_ETC___d729 ;
  assign y__h21175 =
	     { x__h21250 | y__h21251,
	       x__h21467 | y__h21468,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625[0] |
	       y__h21593,
	       int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d731 } ;
  assign y__h21251 =
	     x__h21389 &
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d731 ;
  assign y__h21253 =
	     x__h21322 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625[0] ;
  assign y__h21255 =
	     p__h17228[2] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625[1] ;
  assign y__h21468 =
	     x__h21537 &
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d731 ;
  assign y__h21470 =
	     p__h17228[1] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d625[0] ;
  assign y__h21593 =
	     p__h17228[0] &
	     int_mac_rg_prod1_64_BITS_15_TO_12_44_AND_int_m_ETC___d731 ;
  assign y__h21641 =
	     { x__h21716 | y__h21717,
	       x__h21933 | y__h21934,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605[0] |
	       y__h22059,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d733 } ;
  assign y__h21717 =
	     x__h21855 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d733 ;
  assign y__h21719 =
	     x__h21788 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605[0] ;
  assign y__h21721 =
	     p__h16752[2] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605[1] ;
  assign y__h21934 =
	     x__h22003 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d733 ;
  assign y__h21936 =
	     p__h16752[1] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d605[0] ;
  assign y__h22059 =
	     p__h16752[0] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d733 ;
  assign y__h22107 =
	     { x__h22182 | y__h22183,
	       x__h22399 | y__h22400,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585[0] |
	       y__h22525,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d735 } ;
  assign y__h22183 =
	     x__h22321 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d735 ;
  assign y__h22185 =
	     x__h22254 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585[0] ;
  assign y__h22187 =
	     p__h16276[2] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585[1] ;
  assign y__h22400 =
	     x__h22469 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d735 ;
  assign y__h22402 =
	     p__h16276[1] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d585[0] ;
  assign y__h22525 =
	     p__h16276[0] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d735 ;
  assign y__h22573 =
	     { x__h22648 | y__h22649,
	       x__h22865 | y__h22866,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d571[0] |
	       y__h22991,
	       int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d737 } ;
  assign y__h22649 =
	     x__h22787 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d737 ;
  assign y__h22651 =
	     x__h22720 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d571[0] ;
  assign y__h22653 =
	     p__h15798[2] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d571[1] ;
  assign y__h22866 =
	     x__h22935 &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d737 ;
  assign y__h22868 =
	     p__h15798[1] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d571[0] ;
  assign y__h22991 =
	     p__h15798[0] &
	     int_mac_rg_prod1_64_BIT_15_65_CONCAT_int_mac_r_ETC___d737 ;
  assign y__h2300 =
	     x__h2369 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[5] ;
  assign y__h2302 =
	     p__h1346[1] &
	     INV_int_mac_rg_a_BIT_7_AND_int_mac_rg_b_BIT_6__ETC___d18[0] ;
  assign y__h2425 =
	     p__h1346[0] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[5] ;
  assign y__h2674 = x__h3439 & y__h3527 ;
  assign y__h2676 = x__h3439 & y__h3440 ;
  assign y__h2678 = x__h3375 & y__h3376 ;
  assign y__h2680 = x__h3320 & y__h3321 ;
  assign y__h2795 = {7{int_mac_rg_b[4]}} ;
  assign y__h2924 = {7{int_mac_rg_b[3]}} ;
  assign y__h3053 = {7{int_mac_rg_b[2]}} ;
  assign y__h3182 = {7{int_mac_rg_b[1]}} ;
  assign y__h3321 =
	     ~x__h2875 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[6] ;
  assign y__h3376 =
	     ~x__h3004 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[6] ;
  assign y__h3378 =
	     ~x__h2875 ^
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[6] ;
  assign y__h3440 =
	     ~x__h3133 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95[6] ;
  assign y__h3442 =
	     ~x__h3004 ^
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d84[6] ;
  assign y__h3527 =
	     ~x__h3133 ^
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d95[6] ;
  assign y__h3704 = x__h3772 & y__h3527 ;
  assign y__h3706 = x__h3772 & y__h3440 ;
  assign y__h3708 = y__h3378 & y__h3376 ;
  assign y__h3912 = y__h3442 & y__h3527 ;
  assign y__h3914 = y__h3442 & y__h3440 ;
  assign y__h4131 = x__h2621 & cin__h2572 ;
  assign y__h4499 = x__h10442 & cin__h4472 ;
  assign y__h4501 = x__h10356 & y__h10357 ;
  assign y__h4503 = x__h10292 & y__h10293 ;
  assign y__h4505 = x__h10237 & y__h10238 ;
  assign y__h4776 =
	     x__h7989 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[6] ;
  assign y__h4778 = x__h7903 & y__h7904 ;
  assign y__h4780 = x__h7839 & y__h7840 ;
  assign y__h4782 = x__h7784 & y__h7785 ;
  assign y__h4866 =
	     x__h5160 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d11[0] ;
  assign y__h4868 =
	     x__h5070 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131[0] ;
  assign y__h4870 =
	     x__h5003 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131[1] ;
  assign y__h4872 =
	     p__h4846[3] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131[2] ;
  assign y__h5363 =
	     x__h5501 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d11[0] ;
  assign y__h5365 =
	     x__h5434 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131[0] ;
  assign y__h5367 =
	     p__h4846[2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131[1] ;
  assign y__h5580 =
	     x__h5649 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d11[0] ;
  assign y__h5582 =
	     p__h4846[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d131[0] ;
  assign y__h5705 =
	     p__h4846[0] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d11[0] ;
  assign y__h5857 = {7{int_mac_rg_b[0]}} ;
  assign y__h5960 = x__h6205 & y__h6206 ;
  assign y__h5962 =
	     x__h6141 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d155[0] ;
  assign y__h5964 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157[2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d155[1] ;
  assign y__h6206 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d171[6] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[5] ;
  assign y__h6472 = x__h6538 & y__h6206 ;
  assign y__h6474 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d155[0] ;
  assign y__h6680 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d157[0] &
	     y__h6206 ;
  assign y__h6895 =
	     x__h7189 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[0] ;
  assign y__h6897 =
	     x__h7099 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221[0] ;
  assign y__h6899 =
	     x__h7032 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221[1] ;
  assign y__h6901 =
	     p__h6875[3] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221[2] ;
  assign y__h7392 =
	     x__h7530 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[0] ;
  assign y__h7394 =
	     x__h7463 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221[0] ;
  assign y__h7396 =
	     p__h6875[2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221[1] ;
  assign y__h7609 =
	     x__h7678 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[0] ;
  assign y__h7611 =
	     p__h6875[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d221[0] ;
  assign y__h7734 =
	     p__h6875[0] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[0] ;
  assign y__h7785 = sum__h4852[3] & sum__h5944[3] ;
  assign y__h7840 = sum_BIT_0___h5774 & cout__h6880 ;
  assign y__h7842 = sum__h4852[3] ^ sum__h5944[3] ;
  assign y__h7904 = ~x__h5808 & sum__h6881[3] ;
  assign y__h7906 = sum_BIT_0___h5774 ^ cout__h6880 ;
  assign y__h7991 = ~x__h5808 ^ sum__h6881[3] ;
  assign y__h8187 =
	     x__h8319 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[6] ;
  assign y__h8189 = x__h8255 & y__h7904 ;
  assign y__h8191 = y__h7842 & y__h7840 ;
  assign y__h8395 =
	     x__h8461 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[6] ;
  assign y__h8397 = y__h7906 & y__h7904 ;
  assign y__h8515 =
	     y__h7991 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d174[6] ;
  assign y__h8571 = x__h4683 & cin__h4634 ;
  assign y__h8791 = x__h8718 & sum__h4762[3] ;
  assign y__h9013 = x__h9258 & y__h9259 ;
  assign y__h9015 =
	     x__h9194 &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d322[0] ;
  assign y__h9017 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324[2] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d322[1] ;
  assign y__h9259 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d73[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d39[0] ;
  assign y__h9525 = x__h9591 & y__h9259 ;
  assign y__h9527 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324[1] &
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d322[0] ;
  assign y__h9733 =
	     int_mac_rg_a_BITS_6_TO_0_AND_SEXT_int_mac_rg_b_ETC___d324[0] &
	     y__h9259 ;
  assign y__h9927 = x__h8938 & sum__h4762[2] ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	failed_cases <= `BSV_ASSIGNMENT_DELAY 32'd0;
	int_mac_out <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	int_mac_rg_a <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	int_mac_rg_b <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	int_mac_rg_c <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	int_mac_rg_c1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	int_mac_rg_prod1 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	macs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs2 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_a <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	rg_af <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	rg_b <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	rg_bf <= `BSV_ASSIGNMENT_DELAY 8'hAA;
	rg_c <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_cf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_mac <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_macf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_r <= `BSV_ASSIGNMENT_DELAY 1'b1;
      end
    else
      begin
        if (count$EN) count <= `BSV_ASSIGNMENT_DELAY count$D_IN;
	if (failed_cases$EN)
	  failed_cases <= `BSV_ASSIGNMENT_DELAY failed_cases$D_IN;
	if (int_mac_out$EN)
	  int_mac_out <= `BSV_ASSIGNMENT_DELAY int_mac_out$D_IN;
	if (int_mac_rg_a$EN)
	  int_mac_rg_a <= `BSV_ASSIGNMENT_DELAY int_mac_rg_a$D_IN;
	if (int_mac_rg_b$EN)
	  int_mac_rg_b <= `BSV_ASSIGNMENT_DELAY int_mac_rg_b$D_IN;
	if (int_mac_rg_c$EN)
	  int_mac_rg_c <= `BSV_ASSIGNMENT_DELAY int_mac_rg_c$D_IN;
	if (int_mac_rg_c1$EN)
	  int_mac_rg_c1 <= `BSV_ASSIGNMENT_DELAY int_mac_rg_c1$D_IN;
	if (int_mac_rg_prod1$EN)
	  int_mac_rg_prod1 <= `BSV_ASSIGNMENT_DELAY int_mac_rg_prod1$D_IN;
	if (macs1$EN) macs1 <= `BSV_ASSIGNMENT_DELAY macs1$D_IN;
	if (macs2$EN) macs2 <= `BSV_ASSIGNMENT_DELAY macs2$D_IN;
	if (rg_a$EN) rg_a <= `BSV_ASSIGNMENT_DELAY rg_a$D_IN;
	if (rg_af$EN) rg_af <= `BSV_ASSIGNMENT_DELAY rg_af$D_IN;
	if (rg_b$EN) rg_b <= `BSV_ASSIGNMENT_DELAY rg_b$D_IN;
	if (rg_bf$EN) rg_bf <= `BSV_ASSIGNMENT_DELAY rg_bf$D_IN;
	if (rg_c$EN) rg_c <= `BSV_ASSIGNMENT_DELAY rg_c$D_IN;
	if (rg_cf$EN) rg_cf <= `BSV_ASSIGNMENT_DELAY rg_cf$D_IN;
	if (rg_mac$EN) rg_mac <= `BSV_ASSIGNMENT_DELAY rg_mac$D_IN;
	if (rg_macf$EN) rg_macf <= `BSV_ASSIGNMENT_DELAY rg_macf$D_IN;
	if (rg_r$EN) rg_r <= `BSV_ASSIGNMENT_DELAY rg_r$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    count = 32'hAAAAAAAA;
    failed_cases = 32'hAAAAAAAA;
    int_mac_out = 32'hAAAAAAAA;
    int_mac_rg_a = 8'hAA;
    int_mac_rg_b = 8'hAA;
    int_mac_rg_c = 32'hAAAAAAAA;
    int_mac_rg_c1 = 32'hAAAAAAAA;
    int_mac_rg_prod1 = 16'hAAAA;
    macs1 = 32'hAAAAAAAA;
    macs2 = 32'hAAAAAAAA;
    rg_a = 8'hAA;
    rg_af = 8'hAA;
    rg_b = 8'hAA;
    rg_bf = 8'hAA;
    rg_c = 32'hAAAAAAAA;
    rg_cf = 32'hAAAAAAAA;
    rg_mac = 32'hAAAAAAAA;
    rg_macf = 32'hAAAAAAAA;
    rg_r = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (int_mac_out != macs2 && (count ^ 32'h80000000) > 32'h80000002)
	$display("%d --Expected O/P --- %b, Actual O/P-- %b",
		 $signed(count),
		 macs2,
		 int_mac_out);
    if (RST_N != `BSV_RESET_VALUE)
      if (count == 32'd1060)
	$display("Failed for %d cases", $signed(failed_cases));
    if (RST_N != `BSV_RESET_VALUE) if (count == 32'd1060) $finish(32'd0);
  end
  // synopsys translate_on
endmodule  // mk_Tb

