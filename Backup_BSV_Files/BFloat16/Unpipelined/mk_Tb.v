//
// Generated by Bluespec Compiler, version 2024.07 (build b4f31dbe)
//
// On Mon Oct 28 21:56:48 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mk_Tb(CLK,
	     RST_N);
  input  CLK;
  input  RST_N;

  // register as1
  reg [15 : 0] as1;
  wire [15 : 0] as1$D_IN;
  wire as1$EN;

  // register bs1
  reg [15 : 0] bs1;
  wire [15 : 0] bs1$D_IN;
  wire bs1$EN;

  // register count
  reg [31 : 0] count;
  wire [31 : 0] count$D_IN;
  wire count$EN;

  // register cs1
  reg [31 : 0] cs1;
  wire [31 : 0] cs1$D_IN;
  wire cs1$EN;

  // register failed_cases
  reg [31 : 0] failed_cases;
  wire [31 : 0] failed_cases$D_IN;
  wire failed_cases$EN;

  // register mac_out_r
  reg [31 : 0] mac_out_r;
  wire [31 : 0] mac_out_r$D_IN;
  wire mac_out_r$EN;

  // register mac_rg_A
  reg [15 : 0] mac_rg_A;
  wire [15 : 0] mac_rg_A$D_IN;
  wire mac_rg_A$EN;

  // register mac_rg_B
  reg [15 : 0] mac_rg_B;
  wire [15 : 0] mac_rg_B$D_IN;
  wire mac_rg_B$EN;

  // register mac_rg_C
  reg [31 : 0] mac_rg_C;
  wire [31 : 0] mac_rg_C$D_IN;
  wire mac_rg_C$EN;

  // register macs1
  reg [31 : 0] macs1;
  wire [31 : 0] macs1$D_IN;
  wire macs1$EN;

  // register rg_a
  reg [15 : 0] rg_a;
  wire [15 : 0] rg_a$D_IN;
  wire rg_a$EN;

  // register rg_af
  reg [15 : 0] rg_af;
  wire [15 : 0] rg_af$D_IN;
  wire rg_af$EN;

  // register rg_b
  reg [15 : 0] rg_b;
  wire [15 : 0] rg_b$D_IN;
  wire rg_b$EN;

  // register rg_bf
  reg [15 : 0] rg_bf;
  wire [15 : 0] rg_bf$D_IN;
  wire rg_bf$EN;

  // register rg_c
  reg [31 : 0] rg_c;
  wire [31 : 0] rg_c$D_IN;
  wire rg_c$EN;

  // register rg_cf
  reg [31 : 0] rg_cf;
  wire [31 : 0] rg_cf$D_IN;
  wire rg_cf$EN;

  // register rg_macf
  reg [31 : 0] rg_macf;
  wire [31 : 0] rg_macf$D_IN;
  wire rg_macf$EN;

  // register rg_r
  reg rg_r;
  wire rg_r$D_IN, rg_r$EN;

  // ports of submodule obj_inp
  wire [31 : 0] obj_inp$out_c, obj_inp$out_mac;
  wire [15 : 0] obj_inp$out_a, obj_inp$out_b;
  wire obj_inp$EN, obj_inp$read;

  // remaining internal signals
  reg [22 : 0] CASE_grs56_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_ETC__q3;
  reg [8 : 0] IF_IF_1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_ETC___d600;
  wire [31 : 0] IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d668,
		IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d680,
		_theResult_____3_fst__h21352,
		_theResult_____3_snd_fst__h21354,
		mul_result__h719,
		rg_C_s5__h721,
		rg_C_s6__h21357,
		rg_C_s6__h21604,
		rg_mult_s5__h720,
		rg_mult_s6__h21356,
		rg_mult_s6__h21603;
  wire [30 : 0] IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d637;
  wire [28 : 0] IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698,
		a_temp__h21515,
		b_temp__h21516;
  wire [26 : 0] IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d913,
		_theResult_____2_fst__h21465,
		_theResult_____2_fst__h28752,
		mult_mant_s7__h733,
		rg_mant_s9__h22106,
		rg_mant_s9__h28809,
		shiftedmantissa__h735,
		x__h21722;
  wire [25 : 0] c_mant_s7__h734, mantissa_a__h22105;
  wire [23 : 0] IF_theResult_____1318_EQ_255_THEN_0_ELSE_IF_IF_ETC__q2;
  wire [22 : 0] IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d915;
  wire [8 : 0] mantissa_round__h21013;
  wire [7 : 0] _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90,
	       _theResult_____1__h1318,
	       _theResult_____2_snd_fst__h21467,
	       _theResult_____2_snd_fst__h28754,
	       _theResult___snd_fst__h1268,
	       _theResult___snd_fst__h1270,
	       e__h21064,
	       exp___1__h20856,
	       exp___1__h21059,
	       exp__h1306,
	       exp__h1308,
	       exp_add_s1__h1215,
	       exp_diff_s6__h21350,
	       exponent__h22104,
	       exponent__h28760,
	       mant_1__h1310,
	       mant_1__h20857,
	       mant_1__h20883,
	       op2__h29143,
	       rg_exponent_s9__h751,
	       shift_count__h732,
	       x__h21089,
	       x__h3587,
	       y__h3465,
	       y__h3588,
	       y__h3967,
	       y__h4705,
	       y__h4786,
	       y__h4900,
	       y__h7493;
  wire [6 : 0] x__h20949;
  wire [5 : 0] x__h20973;
  wire [4 : 0] IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d796,
	       leftshift_count__h22103,
	       out__h22174,
	       spliced_bits__h22222;
  wire [3 : 0] IF_y7416_OR_y7414_THEN_1_ELSE_0__q1,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425,
	       a__h2597,
	       b__h11694,
	       b__h2598,
	       carrrg_b__h11365,
	       carrrg_b__h11706,
	       carrrg_b__h2610,
	       carrrg_b__h3268,
	       carrrg_b__h6392,
	       carrrg_b__h7434,
	       carrrg_b__h9136,
	       p__h11361,
	       p__h11702,
	       p__h2606,
	       p__h3264,
	       p__h6388,
	       p__h7430,
	       p__h9132,
	       spliced_bits__h11275,
	       spliced_bits__h11616,
	       spliced_bits__h1470,
	       spliced_bits__h1502,
	       spliced_bits__h1562,
	       spliced_bits__h22345,
	       spliced_bits__h22375,
	       spliced_bits__h22405,
	       spliced_bits__h22434,
	       spliced_bits__h2515,
	       spliced_bits__h3173,
	       spliced_bits__h6243,
	       spliced_bits__h6302,
	       spliced_bits__h9046;
  wire [2 : 0] _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d346,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d536,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d537,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d572,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98,
	       grs__h756,
	       grs_mul_round__h1316,
	       spliced_bits_BITS_2_TO_0___h21053,
	       spliced_bits__h22558,
	       spliced_bits__h22588,
	       spliced_bits__h22618,
	       spliced_bits__h22648,
	       spliced_bits__h22678,
	       spliced_bits__h22708,
	       spliced_bits__h22737;
  wire [1 : 0] _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d593,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80,
	       e__h24679,
	       e__h24820,
	       e__h24961,
	       e__h25102,
	       e__h25243,
	       e__h25384,
	       e__h25525,
	       e__h25666,
	       e__h25807,
	       e__h25948,
	       e__h26089,
	       e__h26230,
	       e__h26370,
	       spliced_bits__h23103,
	       spliced_bits__h23172,
	       spliced_bits__h23241,
	       spliced_bits__h23310,
	       spliced_bits__h23379,
	       spliced_bits__h23448,
	       spliced_bits__h23517,
	       spliced_bits__h23586,
	       spliced_bits__h23655,
	       spliced_bits__h23724,
	       spliced_bits__h23793,
	       spliced_bits__h23862,
	       spliced_bits__h23931;
  wire IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d641,
       _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d687,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60,
       _theResult_____2_snd_snd_snd_fst__h21457,
       _theResult_____2_snd_snd_snd_fst__h28758,
       _theResult_____2_snd_snd_snd_snd_fst__h28865,
       _theResult_____2_snd_snd_snd_snd_fst__h28892,
       _theResult_____2_snd_snd_snd_snd_snd_fst__h28937,
       _theResult_____2_snd_snd_snd_snd_snd_fst__h28985,
       a__h15501,
       a__h15708,
       a__h15915,
       a__h2160,
       b__h15295,
       cin__h15503,
       cin__h15710,
       cin__h18823,
       cin__h19866,
       mul_guard_bit__h20858,
       mul_round_bit__h20859,
       mul_sticky_bit__h20860,
       mul_sticky_bit__h20886,
       rg_sign_s9__h753,
       sign_s1__h1214,
       spliced_bits_BIT_3___h20840,
       sticky_bit_s9__h22109,
       sticky_bit_s9__h28764,
       sticky_bit_s9__h28812,
       x__h10280,
       x__h10350,
       x__h10465,
       x__h10467,
       x__h10469,
       x__h10539,
       x__h10606,
       x__h10696,
       x__h11905,
       x__h11986,
       x__h12319,
       x__h12321,
       x__h12391,
       x__h12458,
       x__h12856,
       x__h12858,
       x__h12894,
       x__h12936,
       x__h13256,
       x__h13258,
       x__h13260,
       x__h13283,
       x__h13325,
       x__h13389,
       x__h14327,
       x__h14329,
       x__h14410,
       x__h14477,
       x__h14585,
       x__h14655,
       x__h14770,
       x__h14772,
       x__h14774,
       x__h14776,
       x__h14800,
       x__h14844,
       x__h14911,
       x__h15001,
       x__h15345,
       x__h15445,
       x__h15552,
       x__h15652,
       x__h15759,
       x__h15859,
       x__h15966,
       x__h16066,
       x__h16999,
       x__h17080,
       x__h17485,
       x__h17552,
       x__h17958,
       x__h17960,
       x__h18041,
       x__h18108,
       x__h18266,
       x__h18336,
       x__h18451,
       x__h18453,
       x__h18455,
       x__h18457,
       x__h18481,
       x__h18525,
       x__h18592,
       x__h18682,
       x__h18999,
       x__h19001,
       x__h19003,
       x__h19038,
       x__h19082,
       x__h19149,
       x__h19309,
       x__h19379,
       x__h19494,
       x__h19496,
       x__h19498,
       x__h19500,
       x__h19524,
       x__h19568,
       x__h19635,
       x__h19725,
       x__h20046,
       x__h20048,
       x__h20127,
       x__h20191,
       x__h20349,
       x__h20416,
       x__h28999,
       x__h3716,
       x__h3718,
       x__h3799,
       x__h3866,
       x__h4026,
       x__h4096,
       x__h4211,
       x__h4213,
       x__h4215,
       x__h4285,
       x__h4352,
       x__h4442,
       x__h5093,
       x__h5095,
       x__h5097,
       x__h5133,
       x__h5175,
       x__h5239,
       x__h5343,
       x__h5410,
       x__h5523,
       x__h5525,
       x__h5527,
       x__h5529,
       x__h5594,
       x__h5658,
       x__h5744,
       x__h6557,
       x__h6559,
       x__h6640,
       x__h6707,
       x__h6815,
       x__h6885,
       x__h7000,
       x__h7002,
       x__h7004,
       x__h7074,
       x__h7141,
       x__h7231,
       x__h7651,
       x__h7653,
       x__h7734,
       x__h7801,
       x__h7909,
       x__h7979,
       x__h8094,
       x__h8096,
       x__h8098,
       x__h8168,
       x__h8235,
       x__h8325,
       x__h8696,
       x__h8698,
       x__h8779,
       x__h8846,
       x__h9301,
       x__h9303,
       x__h9384,
       x__h9451,
       x__h9559,
       x__h9629,
       x__h9744,
       x__h9746,
       x__h9748,
       x__h9818,
       x__h9885,
       x__h9975,
       y__h10281,
       y__h10283,
       y__h10406,
       y__h10466,
       y__h10468,
       y__h10470,
       y__h10472,
       y__h11906,
       y__h11908,
       y__h12135,
       y__h12320,
       y__h12322,
       y__h12324,
       y__h12857,
       y__h12859,
       y__h12895,
       y__h12939,
       y__h13079,
       y__h13257,
       y__h13259,
       y__h13261,
       y__h14328,
       y__h14330,
       y__h14332,
       y__h14586,
       y__h14588,
       y__h14711,
       y__h14771,
       y__h14773,
       y__h14775,
       y__h14777,
       y__h15239,
       y__h15446,
       y__h15653,
       y__h15860,
       y__h16067,
       y__h17000,
       y__h17229,
       y__h17414,
       y__h17416,
       y__h17959,
       y__h17961,
       y__h17963,
       y__h18267,
       y__h18269,
       y__h18392,
       y__h18452,
       y__h18454,
       y__h18456,
       y__h18458,
       y__h19000,
       y__h19002,
       y__h19004,
       y__h19039,
       y__h19083,
       y__h19085,
       y__h19151,
       y__h19310,
       y__h19312,
       y__h19435,
       y__h19495,
       y__h19497,
       y__h19499,
       y__h19501,
       y__h20047,
       y__h20049,
       y__h20051,
       y__h20350,
       y__h20352,
       y__h20470,
       y__h3717,
       y__h3719,
       y__h3721,
       y__h4027,
       y__h4029,
       y__h4152,
       y__h4212,
       y__h4214,
       y__h4216,
       y__h4218,
       y__h5094,
       y__h5096,
       y__h5098,
       y__h5344,
       y__h5346,
       y__h5464,
       y__h5524,
       y__h5526,
       y__h5528,
       y__h5530,
       y__h6558,
       y__h6560,
       y__h6562,
       y__h6816,
       y__h6818,
       y__h6941,
       y__h7001,
       y__h7003,
       y__h7005,
       y__h7007,
       y__h7652,
       y__h7654,
       y__h7656,
       y__h7910,
       y__h7912,
       y__h8035,
       y__h8095,
       y__h8097,
       y__h8099,
       y__h8101,
       y__h8697,
       y__h8699,
       y__h8701,
       y__h9302,
       y__h9304,
       y__h9306,
       y__h9560,
       y__h9562,
       y__h9685,
       y__h9745,
       y__h9747,
       y__h9749,
       y__h9751;

  // submodule obj_inp
  file_read obj_inp(.RST(RST_N),
		    .clk(CLK),
		    .read(obj_inp$read),
		    .EN(obj_inp$EN),
		    .out_a(obj_inp$out_a),
		    .out_b(obj_inp$out_b),
		    .out_c(obj_inp$out_c),
		    .out_mac(obj_inp$out_mac));

  // register as1
  assign as1$D_IN = rg_af ;
  assign as1$EN = 1'd1 ;

  // register bs1
  assign bs1$D_IN = rg_bf ;
  assign bs1$EN = 1'd1 ;

  // register count
  assign count$D_IN = count + 32'd1 ;
  assign count$EN = 1'd1 ;

  // register cs1
  assign cs1$D_IN = rg_cf ;
  assign cs1$EN = 1'd1 ;

  // register failed_cases
  assign failed_cases$D_IN = failed_cases + 32'd1 ;
  assign failed_cases$EN =
	     mac_out_r[30:23] != macs1[30:23] ||
	     mac_out_r[22:2] != macs1[22:2] ;

  // register mac_out_r
  assign mac_out_r$D_IN =
	     { rg_sign_s9__h753,
	       rg_exponent_s9__h751,
	       CASE_grs56_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_ETC__q3 } ;
  assign mac_out_r$EN = 1'd1 ;

  // register mac_rg_A
  assign mac_rg_A$D_IN = obj_inp$out_a ;
  assign mac_rg_A$EN = 1'd1 ;

  // register mac_rg_B
  assign mac_rg_B$D_IN = obj_inp$out_b ;
  assign mac_rg_B$EN = 1'd1 ;

  // register mac_rg_C
  assign mac_rg_C$D_IN = obj_inp$out_c ;
  assign mac_rg_C$EN = 1'd1 ;

  // register macs1
  assign macs1$D_IN = rg_macf ;
  assign macs1$EN = 1'd1 ;

  // register rg_a
  assign rg_a$D_IN = 16'h0 ;
  assign rg_a$EN = 1'b0 ;

  // register rg_af
  assign rg_af$D_IN = obj_inp$out_a ;
  assign rg_af$EN = 1'd1 ;

  // register rg_b
  assign rg_b$D_IN = 16'h0 ;
  assign rg_b$EN = 1'b0 ;

  // register rg_bf
  assign rg_bf$D_IN = obj_inp$out_b ;
  assign rg_bf$EN = 1'd1 ;

  // register rg_c
  assign rg_c$D_IN = 32'h0 ;
  assign rg_c$EN = 1'b0 ;

  // register rg_cf
  assign rg_cf$D_IN = obj_inp$out_c ;
  assign rg_cf$EN = 1'd1 ;

  // register rg_macf
  assign rg_macf$D_IN = obj_inp$out_mac ;
  assign rg_macf$EN = 1'd1 ;

  // register rg_r
  assign rg_r$D_IN = 1'b0 ;
  assign rg_r$EN = 1'b0 ;

  // submodule obj_inp
  assign obj_inp$read = 1'b1 ;
  assign obj_inp$EN = 1'd1 ;

  // remaining internal signals
  assign IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d796 =
	     (spliced_bits__h22434[3] & spliced_bits__h22405[3]) ?
	       5'b10000 :
	       ((~spliced_bits__h22434[3]) ?
		  { 1'b0, spliced_bits__h22434 } :
		  { 2'b01, spliced_bits__h22405[2:0] }) ;
  assign IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698 =
	     (IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d668[31] ^
	      IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d680[31]) ?
	       a_temp__h21515 - b_temp__h21516 :
	       a_temp__h21515 + b_temp__h21516 ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d668 =
	     (rg_mult_s5__h720[30:23] != 8'd255 &&
	      rg_C_s5__h721[30:23] != 8'd255) ?
	       _theResult_____3_fst__h21352 :
	       rg_mult_s6__h21356 ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d680 =
	     (rg_mult_s5__h720[30:23] != 8'd255 &&
	      rg_C_s5__h721[30:23] != 8'd255) ?
	       _theResult_____3_snd_fst__h21354 :
	       rg_C_s6__h21357 ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d913 =
	     (rg_mult_s5__h720[30:23] != 8'd255 &&
	      rg_C_s5__h721[30:23] != 8'd255) ?
	       _theResult_____2_fst__h21465 :
	       ((rg_C_s5__h721[22:0] != 23'd0 ||
		 rg_mult_s5__h720[22:0] != 23'd0) ?
		  27'd67108864 :
		  27'd0) ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d915 =
	     IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d913[26:4] +
	     23'd1 ;
  assign IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d637 =
	     (mac_rg_A[14:7] != 8'd0 && mac_rg_B[14:7] != 8'd0 &&
	      mac_rg_A[14:7] != 8'd255 &&
	      mac_rg_B[14:7] != 8'd255) ?
	       { _theResult_____1__h1318,
		 IF_theResult_____1318_EQ_255_THEN_0_ELSE_IF_IF_ETC__q2[22:0] } :
	       { (mac_rg_A[14:7] != 8'd0 && mac_rg_B[14:7] != 8'd0 &&
		  (mac_rg_A[14:7] == 8'd255 || mac_rg_B[14:7] == 8'd255)) ?
		   8'd255 :
		   (((mac_rg_A[14:7] != 8'd255 || mac_rg_B[14:7] != 8'd0) &&
		     (mac_rg_A[14:7] != 8'd0 || mac_rg_B[14:7] != 8'd255) &&
		     (mac_rg_A[14:7] == 8'd0 || mac_rg_B[14:7] == 8'd0)) ?
		      8'd0 :
		      8'd255),
		 (mac_rg_A[14:7] != 8'd0 && mac_rg_B[14:7] != 8'd0 &&
		  (mac_rg_A[14:7] == 8'd255 || mac_rg_B[14:7] == 8'd255) ||
		  (mac_rg_A[14:7] != 8'd255 || mac_rg_B[14:7] != 8'd0) &&
		  (mac_rg_A[14:7] != 8'd0 || mac_rg_B[14:7] != 8'd255) &&
		  (mac_rg_A[14:7] == 8'd0 || mac_rg_B[14:7] == 8'd0)) ?
		   23'd0 :
		   23'd4194304 } ;
  assign IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d641 =
	     IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d637[30:23] <
	     mac_rg_C[30:23] ;
  assign IF_theResult_____1318_EQ_255_THEN_0_ELSE_IF_IF_ETC__q2 =
	     (_theResult_____1__h1318 == 8'd255) ?
	       24'd0 :
	       { IF_IF_1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_ETC___d600[7:0],
		 16'd0 } ;
  assign IF_y7416_OR_y7414_THEN_1_ELSE_0__q1 =
	     (y__h17416 | y__h17414) ? 4'd1 : 4'd0 ;
  assign _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d687 =
	     mult_mant_s7__h733 <= shiftedmantissa__h735 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[5:2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[4:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150 =
	     x__h3587 & y__h3465 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153 =
	     x__h9744 | y__h9745 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[3:0] &
	     b__h11694 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174 =
	     x__h12319 | y__h12320 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20 =
	     x__h3587 & y__h7493 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207 =
	     spliced_bits__h9046[3:1] & spliced_bits__h11616[3:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211 =
	     spliced_bits__h9046[3:1] ^ spliced_bits__h11616[3:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229 =
	     { x__h8094 | y__h8095,
	       x__h16066 | y__h16067,
	       x__h15859 | y__h15860 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[7:4] &
	     mac_rg_A[6:3] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244 =
	     x__h15759 ^ cin__h15710 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264 =
	     x__h15652 | y__h15653 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267 =
	     x__h15552 ^ cin__h15503 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80 ^
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] |
	       y__h5464,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[5:2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[4:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297 =
	     x__h7000 | y__h7001 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[0] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d346 =
	     { x__h14585 | y__h14586,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] |
	       y__h14711,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d346 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350 =
	     x__h15445 | y__h15446 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356 =
	     x__h15345 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[2] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377 =
	     spliced_bits__h11275[3] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[5:2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[4:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39 =
	     x__h3587 & y__h4900 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425 =
	     a__h2597 & b__h2598 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448 =
	     a__h2160 & spliced_bits__h11275[2] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454 =
	     a__h2160 ^ spliced_bits__h11275[2] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479 =
	     spliced_bits__h2515[3:1] & { spliced_bits__h11275[1:0], 1'd0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483 =
	     spliced_bits__h2515[3:1] ^ { spliced_bits__h11275[1:0], 1'd0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[1:0] &
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[0],
	       1'b0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[1:0] ^
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[0],
	       1'b0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d536 =
	     { x__h18266 | y__h18267,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] |
	       y__h18392,
	       IF_y7416_OR_y7414_THEN_1_ELSE_0__q1[0] } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d537 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d536 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56 =
	     x__h3587 & y__h4705 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d593 =
	     { y__h19085 ^ (y__h19083 | y__h19435), mul_guard_bit__h20858 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[7] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[6] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63 =
	     x__h3587 & y__h4786 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73 =
	     x__h3587 & y__h3967 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[7:6] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[6:5] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[7:6] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[6:5] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90 =
	     x__h3587 & y__h3588 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d572 =
	     { x__h20349 | y__h20350,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[0] |
	       y__h20470,
	       cin__h19866 } ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98 =
	     { 1'd1,
	       spliced_bits__h6243[3],
	       x__h15966 ^
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[7] } ;
  assign _theResult_____1__h1318 =
	     IF_IF_1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_ETC___d600[8] ?
	       exp___1__h21059 :
	       exp__h1308 ;
  assign _theResult_____2_fst__h21465 =
	     (IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[27:26] ==
	      2'b0) ?
	       rg_mant_s9__h22106 :
	       _theResult_____2_fst__h28752 ;
  assign _theResult_____2_fst__h28752 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[27] ?
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[26:0] :
	       rg_mant_s9__h28809 ;
  assign _theResult_____2_snd_fst__h21467 =
	     (IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[27:26] ==
	      2'b0) ?
	       exponent__h22104 :
	       _theResult_____2_snd_fst__h28754 ;
  assign _theResult_____2_snd_fst__h28754 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[27] ?
	       exponent__h28760 :
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d668[30:23] ;
  assign _theResult_____2_snd_snd_snd_fst__h21457 =
	     rg_mult_s5__h720[30:23] != 8'd255 &&
	     rg_C_s5__h721[30:23] != 8'd255 &&
	     ((IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[27:26] ==
	       2'b0) ?
		mantissa_a__h22105[3] :
		_theResult_____2_snd_snd_snd_fst__h28758) ;
  assign _theResult_____2_snd_snd_snd_fst__h28758 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[27] ?
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[4] :
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[3] ;
  assign _theResult_____2_snd_snd_snd_snd_fst__h28865 =
	     rg_mult_s5__h720[30:23] != 8'd255 &&
	     rg_C_s5__h721[30:23] != 8'd255 &&
	     ((IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[27:26] ==
	       2'b0) ?
		mantissa_a__h22105[2] :
		_theResult_____2_snd_snd_snd_snd_fst__h28892) ;
  assign _theResult_____2_snd_snd_snd_snd_fst__h28892 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[27] ?
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[3] :
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[2] ;
  assign _theResult_____2_snd_snd_snd_snd_snd_fst__h28937 =
	     rg_mult_s5__h720[30:23] != 8'd255 &&
	     rg_C_s5__h721[30:23] != 8'd255 &&
	     ((IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[27:26] ==
	       2'b0) ?
		sticky_bit_s9__h22109 :
		_theResult_____2_snd_snd_snd_snd_snd_fst__h28985) ;
  assign _theResult_____2_snd_snd_snd_snd_snd_fst__h28985 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[27] ?
	       sticky_bit_s9__h28764 :
	       sticky_bit_s9__h28812 ;
  assign _theResult_____3_fst__h21352 =
	     (rg_mult_s5__h720[30:23] != 8'd0 ||
	      rg_C_s5__h721[30:23] != 8'd0) ?
	       rg_mult_s5__h720 :
	       rg_mult_s6__h21603 ;
  assign _theResult_____3_snd_fst__h21354 =
	     (rg_mult_s5__h720[30:23] != 8'd0 ||
	      rg_C_s5__h721[30:23] != 8'd0) ?
	       rg_C_s5__h721 :
	       rg_C_s6__h21604 ;
  assign _theResult___snd_fst__h1268 =
	     (mac_rg_A[14:7] == 8'd0 || mac_rg_B[14:7] == 8'd0) ?
	       8'd0 :
	       _theResult___snd_fst__h1270 ;
  assign _theResult___snd_fst__h1270 =
	     (mac_rg_A[14:7] == 8'd255 || mac_rg_B[14:7] == 8'd255) ?
	       8'd255 :
	       exp_add_s1__h1215 ;
  assign a__h15501 = x__h5133 ^ (x__h5343 | y__h5344) ;
  assign a__h15708 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 ^
	     (x__h5093 | y__h5094) ;
  assign a__h15915 = x__h5523 | y__h5524 ;
  assign a__h2160 = x__h10465 | y__h10466 ;
  assign a__h2597 = { x__h4211 | y__h4212, spliced_bits__h3173[3:1] } ;
  assign a_temp__h21515 =
	     _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d687 ?
	       { 2'd0, shiftedmantissa__h735 } :
	       { 3'd1,
		 IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d668[22:0],
		 3'b0 } ;
  assign b__h11694 =
	     { mac_rg_A[2:0],
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[5] } ;
  assign b__h15295 = x__h13256 | y__h13257 ;
  assign b__h2598 =
	     { spliced_bits__h6302[2:0],
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[1] } ;
  assign b_temp__h21516 =
	     _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d687 ?
	       { 3'd1,
		 IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d668[22:0],
		 3'b0 } :
	       { 2'd0, shiftedmantissa__h735 } ;
  assign c_mant_s7__h734 =
	     { IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d680[22:0],
	       3'b0 } ;
  assign carrrg_b__h11365 =
	     { x__h12856 | y__h12857,
	       y__h12895 | y__h13079,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334,
	       1'b0 } ;
  assign carrrg_b__h11706 =
	     { x__h11905 | y__h11906,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[1] |
	       y__h12135,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0],
	       1'b0 } ;
  assign carrrg_b__h2610 =
	     { x__h8696 | y__h8697,
	       x__h10280 | y__h10281,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] |
	       y__h10406,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] } ;
  assign carrrg_b__h3268 =
	     { x__h3716 | y__h3717,
	       x__h4026 | y__h4027,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] |
	       y__h4152,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] } ;
  assign carrrg_b__h6392 =
	     { x__h6557 | y__h6558,
	       x__h6815 | y__h6816,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] |
	       y__h6941,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] } ;
  assign carrrg_b__h7434 =
	     { x__h7651 | y__h7652,
	       x__h7909 | y__h7910,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] |
	       y__h8035,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] } ;
  assign carrrg_b__h9136 =
	     { x__h9301 | y__h9302,
	       x__h9559 | y__h9560,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] |
	       y__h9685,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] } ;
  assign cin__h15503 = x__h14800 ^ (x__h14327 | y__h14328) ;
  assign cin__h15710 = x__h14770 | y__h14771 ;
  assign cin__h18823 = x__h18451 | y__h18452 ;
  assign cin__h19866 = x__h19494 | y__h19495 ;
  assign e__h21064 = x__h21089 - 8'd127 ;
  assign e__h24679 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[0] ?
	       2'b01 :
	       2'b10 ;
  assign e__h24820 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[2] ?
	       2'b01 :
	       2'b10 ;
  assign e__h24961 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[4] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25102 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[6] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25243 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[8] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25384 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[10] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25525 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[12] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25666 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[14] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25807 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[16] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25948 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[18] ?
	       2'b01 :
	       2'b10 ;
  assign e__h26089 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[20] ?
	       2'b01 :
	       2'b10 ;
  assign e__h26230 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[22] ?
	       2'b01 :
	       2'b10 ;
  assign e__h26370 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[24] ?
	       2'b01 :
	       2'b10 ;
  assign exp___1__h20856 = exp__h1306 + 8'd1 ;
  assign exp___1__h21059 = exp__h1308 + 8'd1 ;
  assign exp__h1306 =
	     (mac_rg_A[14:7] == 8'd255 && mac_rg_B[14:7] == 8'd0 ||
	      mac_rg_A[14:7] == 8'd0 && mac_rg_B[14:7] == 8'd255) ?
	       8'd255 :
	       _theResult___snd_fst__h1268 ;
  assign exp__h1308 =
	     spliced_bits_BIT_3___h20840 ? exp___1__h20856 : exp__h1306 ;
  assign exp_add_s1__h1215 =
	     (e__h21064 > 8'd1 && e__h21064 < 8'd254) ? e__h21064 : 8'd0 ;
  assign exp_diff_s6__h21350 =
	     rg_mult_s5__h720[30:23] - rg_C_s5__h721[30:23] ;
  assign exponent__h22104 =
	     IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d668[30:23] -
	     op2__h29143 ;
  assign exponent__h28760 =
	     IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d668[30:23] +
	     8'd1 ;
  assign grs__h756 =
	     { _theResult_____2_snd_snd_snd_fst__h21457,
	       _theResult_____2_snd_snd_snd_snd_fst__h28865,
	       _theResult_____2_snd_snd_snd_snd_snd_fst__h28937 } ;
  assign grs_mul_round__h1316 =
	     spliced_bits_BIT_3___h20840 ?
	       { mul_guard_bit__h20858,
		 mul_round_bit__h20859,
		 mul_sticky_bit__h20860 } :
	       { mul_round_bit__h20859,
		 _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d537[2],
		 mul_sticky_bit__h20886 } ;
  assign leftshift_count__h22103 = out__h22174 + 5'd1 ;
  assign mant_1__h1310 =
	     spliced_bits_BIT_3___h20840 ? mant_1__h20857 : mant_1__h20883 ;
  assign mant_1__h20857 = { spliced_bits__h1470, spliced_bits__h1502 } ;
  assign mant_1__h20883 =
	     { spliced_bits_BITS_2_TO_0___h21053,
	       spliced_bits__h1502,
	       mul_round_bit__h20859 } ;
  assign mantissa_a__h22105 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[25:0] <<
	     leftshift_count__h22103 ;
  assign mantissa_round__h21013 = { 1'd0, mant_1__h1310 } + 9'd1 ;
  assign mul_guard_bit__h20858 = y__h19151 ^ cin__h18823 ;
  assign mul_result__h719 =
	     { sign_s1__h1214,
	       IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d637 } ;
  assign mul_round_bit__h20859 = x__h18481 ^ (x__h17958 | y__h17959) ;
  assign mul_sticky_bit__h20860 = x__h20949 != 7'd0 ;
  assign mul_sticky_bit__h20886 = x__h20973 != 6'd0 ;
  assign mult_mant_s7__h733 =
	     { 1'b1,
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d668[22:0],
	       3'b0 } ;
  assign op2__h29143 = { 3'd0, leftshift_count__h22103 } ;
  assign out__h22174 =
	     (IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d796[4] &
	      spliced_bits__h22222[4]) ?
	       5'b0 :
	       ((~IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d796[4]) ?
		  IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d796 :
		  { 1'b1, spliced_bits__h22222[3:0] }) ;
  assign p__h11361 =
	     { x__h13283,
	       x__h12894,
	       y__h12939,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[1] ^
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[0] } ;
  assign p__h11702 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[3:0] ^
	     b__h11694 ;
  assign p__h2606 = a__h2597 ^ b__h2598 ;
  assign p__h3264 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[5:2] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[4:1] ;
  assign p__h6388 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[5:2] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[4:1] ;
  assign p__h7430 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[7:4] ^
	     mac_rg_A[6:3] ;
  assign p__h9132 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[5:2] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[4:1] ;
  assign rg_C_s5__h721 =
	     IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d641 ?
	       mul_result__h719 :
	       mac_rg_C ;
  assign rg_C_s6__h21357 =
	     { rg_C_s5__h721[31],
	       (rg_C_s5__h721[22:0] == 23'd0) ?
		 31'h7F800000 :
		 { 8'd255, rg_C_s5__h721[22:0] } } ;
  assign rg_C_s6__h21604 = { rg_C_s5__h721[31], 31'd0 } ;
  assign rg_exponent_s9__h751 =
	     (rg_mult_s5__h720[30:23] != 8'd255 &&
	      rg_C_s5__h721[30:23] != 8'd255) ?
	       _theResult_____2_snd_fst__h21467 :
	       8'd255 ;
  assign rg_mant_s9__h22106 = { mantissa_a__h22105, 1'b0 } ;
  assign rg_mant_s9__h28809 =
	     { IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[25:0],
	       1'b0 } ;
  assign rg_mult_s5__h720 =
	     IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d641 ?
	       mac_rg_C :
	       mul_result__h719 ;
  assign rg_mult_s6__h21356 =
	     { rg_mult_s5__h720[31],
	       (rg_mult_s5__h720[22:0] == 23'd0) ?
		 31'h7F800000 :
		 { 8'd255, rg_mult_s5__h720[22:0] } } ;
  assign rg_mult_s6__h21603 = { rg_mult_s5__h720[31], 31'd0 } ;
  assign rg_sign_s9__h753 =
	     _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d687 ?
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d680[31] :
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d668[31] ;
  assign shift_count__h732 =
	     (rg_mult_s5__h720[30:23] != 8'd255 &&
	      rg_C_s5__h721[30:23] != 8'd255) ?
	       exp_diff_s6__h21350 :
	       8'd255 ;
  assign shiftedmantissa__h735 = x__h21722 >> shift_count__h732 ;
  assign sign_s1__h1214 = mac_rg_A[15] ^ mac_rg_B[15] ;
  assign spliced_bits_BITS_2_TO_0___h21053 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232 ^
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d572 ;
  assign spliced_bits_BIT_3___h20840 = x__h20046 | y__h20047 ;
  assign spliced_bits__h11275 = p__h11361 ^ carrrg_b__h11365 ;
  assign spliced_bits__h11616 = p__h11702 ^ carrrg_b__h11706 ;
  assign spliced_bits__h1470 =
	     { spliced_bits_BIT_3___h20840,
	       spliced_bits_BITS_2_TO_0___h21053 } ;
  assign spliced_bits__h1502 =
	     { x__h19524 ^ (x__h18999 | y__h19000),
	       x__h19038 ^ (x__h19309 | y__h19310),
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d593 } ;
  assign spliced_bits__h1562 =
	     { spliced_bits__h2515[0] ^ (x__h16999 | y__h17000),
	       spliced_bits__h3173[0] ^
	       (_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[1] |
		y__h17229),
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505 ^
	       { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0],
		 1'b0 } } ;
  assign spliced_bits__h22222 =
	     (spliced_bits__h22375[3] & spliced_bits__h22345[3]) ?
	       5'b10000 :
	       ((~spliced_bits__h22375[3]) ?
		  { 1'b0, spliced_bits__h22375 } :
		  { 2'b01, spliced_bits__h22345[2:0] }) ;
  assign spliced_bits__h22345 =
	     spliced_bits__h22558[2] ?
	       4'b1000 :
	       ((~spliced_bits__h22558[2]) ?
		  { 1'b0, spliced_bits__h22558 } :
		  4'd4) ;
  assign spliced_bits__h22375 =
	     (spliced_bits__h22618[2] & spliced_bits__h22588[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h22618[2]) ?
		  { 1'b0, spliced_bits__h22618 } :
		  { 2'b01, spliced_bits__h22588[1:0] }) ;
  assign spliced_bits__h22405 =
	     (spliced_bits__h22678[2] & spliced_bits__h22648[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h22678[2]) ?
		  { 1'b0, spliced_bits__h22678 } :
		  { 2'b01, spliced_bits__h22648[1:0] }) ;
  assign spliced_bits__h22434 =
	     (spliced_bits__h22737[2] & spliced_bits__h22708[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h22737[2]) ?
		  { 1'b0, spliced_bits__h22737 } :
		  { 2'b01, spliced_bits__h22708[1:0] }) ;
  assign spliced_bits__h22558 =
	     spliced_bits__h23931[1] ?
	       3'b100 :
	       ((~spliced_bits__h23931[1]) ?
		  { 1'b0, spliced_bits__h23931 } :
		  3'd2) ;
  assign spliced_bits__h22588 =
	     (spliced_bits__h23793[1] & spliced_bits__h23862[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23793[1]) ?
		  { 1'b0, spliced_bits__h23793 } :
		  { 2'b01, spliced_bits__h23862[0] }) ;
  assign spliced_bits__h22618 =
	     (spliced_bits__h23655[1] & spliced_bits__h23724[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23655[1]) ?
		  { 1'b0, spliced_bits__h23655 } :
		  { 2'b01, spliced_bits__h23724[0] }) ;
  assign spliced_bits__h22648 =
	     (spliced_bits__h23517[1] & spliced_bits__h23586[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23517[1]) ?
		  { 1'b0, spliced_bits__h23517 } :
		  { 2'b01, spliced_bits__h23586[0] }) ;
  assign spliced_bits__h22678 =
	     (spliced_bits__h23379[1] & spliced_bits__h23448[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23379[1]) ?
		  { 1'b0, spliced_bits__h23379 } :
		  { 2'b01, spliced_bits__h23448[0] }) ;
  assign spliced_bits__h22708 =
	     (spliced_bits__h23241[1] & spliced_bits__h23310[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23241[1]) ?
		  { 1'b0, spliced_bits__h23241 } :
		  { 2'b01, spliced_bits__h23310[0] }) ;
  assign spliced_bits__h22737 =
	     (spliced_bits__h23103[1] & spliced_bits__h23172[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23103[1]) ?
		  { 1'b0, spliced_bits__h23103 } :
		  { 2'b01, spliced_bits__h23172[0] }) ;
  assign spliced_bits__h23103 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[25] ?
	       2'b0 :
	       e__h26370 ;
  assign spliced_bits__h23172 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[23] ?
	       2'b0 :
	       e__h26230 ;
  assign spliced_bits__h23241 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[21] ?
	       2'b0 :
	       e__h26089 ;
  assign spliced_bits__h23310 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[19] ?
	       2'b0 :
	       e__h25948 ;
  assign spliced_bits__h23379 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[17] ?
	       2'b0 :
	       e__h25807 ;
  assign spliced_bits__h23448 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[15] ?
	       2'b0 :
	       e__h25666 ;
  assign spliced_bits__h23517 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[13] ?
	       2'b0 :
	       e__h25525 ;
  assign spliced_bits__h23586 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[11] ?
	       2'b0 :
	       e__h25384 ;
  assign spliced_bits__h23655 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[9] ?
	       2'b0 :
	       e__h25243 ;
  assign spliced_bits__h23724 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[7] ?
	       2'b0 :
	       e__h25102 ;
  assign spliced_bits__h23793 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[5] ?
	       2'b0 :
	       e__h24961 ;
  assign spliced_bits__h23862 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[3] ?
	       2'b0 :
	       e__h24820 ;
  assign spliced_bits__h23931 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[1] ?
	       2'b0 :
	       e__h24679 ;
  assign spliced_bits__h2515 = p__h2606 ^ carrrg_b__h2610 ;
  assign spliced_bits__h3173 = p__h3264 ^ carrrg_b__h3268 ;
  assign spliced_bits__h6243 = p__h7430 ^ carrrg_b__h7434 ;
  assign spliced_bits__h6302 = p__h6388 ^ carrrg_b__h6392 ;
  assign spliced_bits__h9046 = p__h9132 ^ carrrg_b__h9136 ;
  assign sticky_bit_s9__h22109 =
	     mantissa_a__h22105[1] | mantissa_a__h22105[0] ;
  assign sticky_bit_s9__h28764 =
	     x__h28999 |
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[0] ;
  assign sticky_bit_s9__h28812 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[1] |
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[0] ;
  assign x__h10280 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[1] |
	     y__h10283 ;
  assign x__h10350 = p__h2606[1] & p__h2606[0] ;
  assign x__h10465 = x__h10467 | y__h10468 ;
  assign x__h10467 = x__h10469 | y__h10470 ;
  assign x__h10469 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[3] |
	     y__h10472 ;
  assign x__h10539 = p__h2606[3] & p__h2606[2] ;
  assign x__h10606 = x__h10539 & p__h2606[1] ;
  assign x__h10696 = x__h10606 & p__h2606[0] ;
  assign x__h11905 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[2] |
	     y__h11908 ;
  assign x__h11986 = p__h11702[2] & p__h11702[1] ;
  assign x__h12319 = x__h12321 | y__h12322 ;
  assign x__h12321 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[3] |
	     y__h12324 ;
  assign x__h12391 = p__h11702[3] & p__h11702[2] ;
  assign x__h12458 = x__h12391 & p__h11702[1] ;
  assign x__h12856 = x__h12858 | y__h12859 ;
  assign x__h12858 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[7] &
	     spliced_bits__h6302[3] ;
  assign x__h12894 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[7] ^
	     spliced_bits__h6302[3] ;
  assign x__h12936 = x__h12894 & y__h12939 ;
  assign x__h13256 = x__h13258 | y__h13259 ;
  assign x__h13258 = x__h13260 | y__h13261 ;
  assign x__h13260 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297 ;
  assign x__h13283 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[0] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297 ;
  assign x__h13325 = x__h13283 & x__h12894 ;
  assign x__h13389 = x__h13325 & y__h12939 ;
  assign x__h14327 = x__h14329 | y__h14330 ;
  assign x__h14329 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[2] |
	     y__h14332 ;
  assign x__h14410 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] ;
  assign x__h14477 =
	     x__h14410 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] ;
  assign x__h14585 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[1] |
	     y__h14588 ;
  assign x__h14655 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] ;
  assign x__h14770 = x__h14772 | y__h14773 ;
  assign x__h14772 = x__h14774 | y__h14775 ;
  assign x__h14774 = x__h14776 | y__h14777 ;
  assign x__h14776 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174 ;
  assign x__h14800 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174 ;
  assign x__h14844 =
	     x__h14800 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[2] ;
  assign x__h14911 =
	     x__h14844 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] ;
  assign x__h15001 =
	     x__h14911 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] ;
  assign x__h15345 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[1] ^
	     b__h15295 ;
  assign x__h15445 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[1] &
	     b__h15295 ;
  assign x__h15552 = a__h15501 ^ spliced_bits__h6243[0] ;
  assign x__h15652 = a__h15501 & spliced_bits__h6243[0] ;
  assign x__h15759 = a__h15708 ^ spliced_bits__h6243[1] ;
  assign x__h15859 = a__h15708 & spliced_bits__h6243[1] ;
  assign x__h15966 = a__h15915 ^ spliced_bits__h6243[2] ;
  assign x__h16066 = a__h15915 & spliced_bits__h6243[2] ;
  assign x__h16999 =
	     spliced_bits__h3173[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[1] ;
  assign x__h17080 =
	     spliced_bits__h3173[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505[1] ;
  assign x__h17485 = spliced_bits__h2515[0] & spliced_bits__h3173[0] ;
  assign x__h17552 =
	     x__h17485 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505[1] ;
  assign x__h17958 = x__h17960 | y__h17961 ;
  assign x__h17960 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[2] |
	     y__h17963 ;
  assign x__h18041 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] ;
  assign x__h18108 =
	     x__h18041 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] ;
  assign x__h18266 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[1] |
	     y__h18269 ;
  assign x__h18336 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] ;
  assign x__h18451 = x__h18453 | y__h18454 ;
  assign x__h18453 = x__h18455 | y__h18456 ;
  assign x__h18455 = x__h18457 | y__h18458 ;
  assign x__h18457 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[0] ;
  assign x__h18481 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[0] ;
  assign x__h18525 =
	     x__h18481 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[2] ;
  assign x__h18592 =
	     x__h18525 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] ;
  assign x__h18682 =
	     x__h18592 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] ;
  assign x__h18999 = x__h19001 | y__h19002 ;
  assign x__h19001 = x__h19003 | y__h19004 ;
  assign x__h19003 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350 ;
  assign x__h19038 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350 ;
  assign x__h19082 = x__h19038 & y__h19085 ;
  assign x__h19149 = x__h19082 & y__h19151 ;
  assign x__h19309 = y__h19039 | y__h19312 ;
  assign x__h19379 = y__h19085 & y__h19151 ;
  assign x__h19494 = x__h19496 | y__h19497 ;
  assign x__h19496 = x__h19498 | y__h19499 ;
  assign x__h19498 = x__h19500 | y__h19501 ;
  assign x__h19500 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264 ;
  assign x__h19524 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264 ;
  assign x__h19568 = x__h19524 & x__h19038 ;
  assign x__h19635 = x__h19568 & y__h19085 ;
  assign x__h19725 = x__h19635 & y__h19151 ;
  assign x__h20046 = x__h20048 | y__h20049 ;
  assign x__h20048 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[2] |
	     y__h20051 ;
  assign x__h20127 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[2] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[1] ;
  assign x__h20191 =
	     x__h20127 &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[0] ;
  assign x__h20349 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[1] |
	     y__h20352 ;
  assign x__h20416 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[1] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[0] ;
  assign x__h20949 =
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d537,
	       spliced_bits__h1562 } ;
  assign x__h20973 =
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d537[1:0],
	       spliced_bits__h1562 } ;
  assign x__h21089 = mac_rg_A[14:7] + mac_rg_B[14:7] ;
  assign x__h21722 = { 1'b1, c_mant_s7__h734 } ;
  assign x__h28999 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[2] |
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d698[1] ;
  assign x__h3587 = { 1'b1, mac_rg_A[6:0] } ;
  assign x__h3716 = x__h3718 | y__h3719 ;
  assign x__h3718 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[2] |
	     y__h3721 ;
  assign x__h3799 = p__h3264[2] & p__h3264[1] ;
  assign x__h3866 = x__h3799 & p__h3264[0] ;
  assign x__h4026 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[1] |
	     y__h4029 ;
  assign x__h4096 = p__h3264[1] & p__h3264[0] ;
  assign x__h4211 = x__h4213 | y__h4214 ;
  assign x__h4213 = x__h4215 | y__h4216 ;
  assign x__h4215 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[3] |
	     y__h4218 ;
  assign x__h4285 = p__h3264[3] & p__h3264[2] ;
  assign x__h4352 = x__h4285 & p__h3264[1] ;
  assign x__h4442 = x__h4352 & p__h3264[0] ;
  assign x__h5093 = x__h5095 | y__h5096 ;
  assign x__h5095 = x__h5097 | y__h5098 ;
  assign x__h5097 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[7] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[6] ;
  assign x__h5133 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[7] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[6] ;
  assign x__h5175 =
	     x__h5133 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] ;
  assign x__h5239 =
	     x__h5175 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] ;
  assign x__h5343 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[1] |
	     y__h5346 ;
  assign x__h5410 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] ;
  assign x__h5523 = x__h5525 | y__h5526 ;
  assign x__h5525 = x__h5527 | y__h5528 ;
  assign x__h5527 = x__h5529 | y__h5530 ;
  assign x__h5529 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[7] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[6] ;
  assign x__h5594 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 &
	     x__h5133 ;
  assign x__h5658 =
	     x__h5594 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] ;
  assign x__h5744 =
	     x__h5658 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] ;
  assign x__h6557 = x__h6559 | y__h6560 ;
  assign x__h6559 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[2] |
	     y__h6562 ;
  assign x__h6640 = p__h6388[2] & p__h6388[1] ;
  assign x__h6707 = x__h6640 & p__h6388[0] ;
  assign x__h6815 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[1] |
	     y__h6818 ;
  assign x__h6885 = p__h6388[1] & p__h6388[0] ;
  assign x__h7000 = x__h7002 | y__h7003 ;
  assign x__h7002 = x__h7004 | y__h7005 ;
  assign x__h7004 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[3] |
	     y__h7007 ;
  assign x__h7074 = p__h6388[3] & p__h6388[2] ;
  assign x__h7141 = x__h7074 & p__h6388[1] ;
  assign x__h7231 = x__h7141 & p__h6388[0] ;
  assign x__h7651 = x__h7653 | y__h7654 ;
  assign x__h7653 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[2] |
	     y__h7656 ;
  assign x__h7734 = p__h7430[2] & p__h7430[1] ;
  assign x__h7801 = x__h7734 & p__h7430[0] ;
  assign x__h7909 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[1] |
	     y__h7912 ;
  assign x__h7979 = p__h7430[1] & p__h7430[0] ;
  assign x__h8094 = x__h8096 | y__h8097 ;
  assign x__h8096 = x__h8098 | y__h8099 ;
  assign x__h8098 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[3] |
	     y__h8101 ;
  assign x__h8168 = p__h7430[3] & p__h7430[2] ;
  assign x__h8235 = x__h8168 & p__h7430[1] ;
  assign x__h8325 = x__h8235 & p__h7430[0] ;
  assign x__h8696 = x__h8698 | y__h8699 ;
  assign x__h8698 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[2] |
	     y__h8701 ;
  assign x__h8779 = p__h2606[2] & p__h2606[1] ;
  assign x__h8846 = x__h8779 & p__h2606[0] ;
  assign x__h9301 = x__h9303 | y__h9304 ;
  assign x__h9303 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[2] |
	     y__h9306 ;
  assign x__h9384 = p__h9132[2] & p__h9132[1] ;
  assign x__h9451 = x__h9384 & p__h9132[0] ;
  assign x__h9559 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[1] |
	     y__h9562 ;
  assign x__h9629 = p__h9132[1] & p__h9132[0] ;
  assign x__h9744 = x__h9746 | y__h9747 ;
  assign x__h9746 = x__h9748 | y__h9749 ;
  assign x__h9748 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[3] |
	     y__h9751 ;
  assign x__h9818 = p__h9132[3] & p__h9132[2] ;
  assign x__h9885 = x__h9818 & p__h9132[1] ;
  assign x__h9975 = x__h9885 & p__h9132[0] ;
  assign y__h10281 =
	     x__h10350 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h10283 =
	     p__h2606[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] ;
  assign y__h10406 =
	     p__h2606[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h10466 =
	     x__h10696 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h10468 =
	     x__h10606 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] ;
  assign y__h10470 =
	     x__h10539 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[1] ;
  assign y__h10472 =
	     p__h2606[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[2] ;
  assign y__h11906 =
	     x__h11986 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0] ;
  assign y__h11908 =
	     p__h11702[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[1] ;
  assign y__h12135 =
	     p__h11702[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0] ;
  assign y__h12320 =
	     x__h12458 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0] ;
  assign y__h12322 =
	     x__h12391 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[1] ;
  assign y__h12324 =
	     p__h11702[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[2] ;
  assign y__h12857 =
	     x__h12936 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 ;
  assign y__h12859 = x__h12894 & y__h12895 ;
  assign y__h12895 = spliced_bits__h9046[0] & spliced_bits__h11616[0] ;
  assign y__h12939 = spliced_bits__h9046[0] ^ spliced_bits__h11616[0] ;
  assign y__h13079 =
	     y__h12939 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 ;
  assign y__h13257 =
	     x__h13389 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 ;
  assign y__h13259 = x__h13325 & y__h12895 ;
  assign y__h13261 = x__h13283 & x__h12858 ;
  assign y__h14328 =
	     x__h14477 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h14330 =
	     x__h14410 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] ;
  assign y__h14332 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[1] ;
  assign y__h14586 =
	     x__h14655 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h14588 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] ;
  assign y__h14711 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h14771 =
	     x__h15001 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h14773 =
	     x__h14911 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] ;
  assign y__h14775 =
	     x__h14844 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[1] ;
  assign y__h14777 =
	     x__h14800 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[2] ;
  assign y__h15239 =
	     spliced_bits__h11275[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[1] ;
  assign y__h15446 =
	     x__h15345 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[2] ;
  assign y__h15653 = x__h15552 & cin__h15503 ;
  assign y__h15860 = x__h15759 & cin__h15710 ;
  assign y__h16067 =
	     x__h15966 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[7] ;
  assign y__h17000 =
	     x__h17080 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0] ;
  assign y__h17229 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0] ;
  assign y__h17414 =
	     x__h17552 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0] ;
  assign y__h17416 =
	     x__h17485 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[1] ;
  assign y__h17959 = x__h18108 & IF_y7416_OR_y7414_THEN_1_ELSE_0__q1[0] ;
  assign y__h17961 =
	     x__h18041 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] ;
  assign y__h17963 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[1] ;
  assign y__h18267 = x__h18336 & IF_y7416_OR_y7414_THEN_1_ELSE_0__q1[0] ;
  assign y__h18269 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] ;
  assign y__h18392 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] &
	     IF_y7416_OR_y7414_THEN_1_ELSE_0__q1[0] ;
  assign y__h18452 = x__h18682 & IF_y7416_OR_y7414_THEN_1_ELSE_0__q1[0] ;
  assign y__h18454 =
	     x__h18592 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] ;
  assign y__h18456 =
	     x__h18525 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[1] ;
  assign y__h18458 =
	     x__h18481 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[2] ;
  assign y__h19000 = x__h19149 & cin__h18823 ;
  assign y__h19002 = x__h19082 & y__h19083 ;
  assign y__h19004 = x__h19038 & y__h19039 ;
  assign y__h19039 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356 &
	     y__h15239 ;
  assign y__h19083 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448 ;
  assign y__h19085 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356 ^
	     y__h15239 ;
  assign y__h19151 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448 ;
  assign y__h19310 = x__h19379 & cin__h18823 ;
  assign y__h19312 = y__h19085 & y__h19083 ;
  assign y__h19435 = y__h19151 & cin__h18823 ;
  assign y__h19495 = x__h19725 & cin__h18823 ;
  assign y__h19497 = x__h19635 & y__h19083 ;
  assign y__h19499 = x__h19568 & y__h19039 ;
  assign y__h19501 = x__h19524 & x__h19003 ;
  assign y__h20047 = x__h20191 & cin__h19866 ;
  assign y__h20049 =
	     x__h20127 &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[0] ;
  assign y__h20051 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[2] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[1] ;
  assign y__h20350 = x__h20416 & cin__h19866 ;
  assign y__h20352 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[1] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[0] ;
  assign y__h20470 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[0] &
	     cin__h19866 ;
  assign y__h3465 = {8{mac_rg_B[0]}} ;
  assign y__h3588 = {8{mac_rg_B[1]}} ;
  assign y__h3717 =
	     x__h3866 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h3719 =
	     x__h3799 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] ;
  assign y__h3721 =
	     p__h3264[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[1] ;
  assign y__h3967 = {8{mac_rg_B[2]}} ;
  assign y__h4027 =
	     x__h4096 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h4029 =
	     p__h3264[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] ;
  assign y__h4152 =
	     p__h3264[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h4212 =
	     x__h4442 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h4214 =
	     x__h4352 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] ;
  assign y__h4216 =
	     x__h4285 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[1] ;
  assign y__h4218 =
	     p__h3264[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[2] ;
  assign y__h4705 = {8{mac_rg_B[4]}} ;
  assign y__h4786 = {8{mac_rg_B[3]}} ;
  assign y__h4900 = {8{mac_rg_B[5]}} ;
  assign y__h5094 =
	     x__h5239 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5096 =
	     x__h5175 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] ;
  assign y__h5098 =
	     x__h5133 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[1] ;
  assign y__h5344 =
	     x__h5410 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5346 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] ;
  assign y__h5464 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5524 =
	     x__h5744 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5526 =
	     x__h5658 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] ;
  assign y__h5528 =
	     x__h5594 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[1] ;
  assign y__h5530 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 &
	     x__h5097 ;
  assign y__h6558 =
	     x__h6707 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h6560 =
	     x__h6640 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] ;
  assign y__h6562 =
	     p__h6388[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[1] ;
  assign y__h6816 =
	     x__h6885 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h6818 =
	     p__h6388[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] ;
  assign y__h6941 =
	     p__h6388[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h7001 =
	     x__h7231 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h7003 =
	     x__h7141 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] ;
  assign y__h7005 =
	     x__h7074 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[1] ;
  assign y__h7007 =
	     p__h6388[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[2] ;
  assign y__h7493 = {8{mac_rg_B[6]}} ;
  assign y__h7652 =
	     x__h7801 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h7654 =
	     x__h7734 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] ;
  assign y__h7656 =
	     p__h7430[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[1] ;
  assign y__h7910 =
	     x__h7979 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h7912 =
	     p__h7430[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] ;
  assign y__h8035 =
	     p__h7430[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h8095 =
	     x__h8325 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h8097 =
	     x__h8235 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] ;
  assign y__h8099 =
	     x__h8168 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[1] ;
  assign y__h8101 =
	     p__h7430[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[2] ;
  assign y__h8697 =
	     x__h8846 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h8699 =
	     x__h8779 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] ;
  assign y__h8701 =
	     p__h2606[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[1] ;
  assign y__h9302 =
	     x__h9451 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9304 =
	     x__h9384 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] ;
  assign y__h9306 =
	     p__h9132[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[1] ;
  assign y__h9560 =
	     x__h9629 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9562 =
	     p__h9132[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] ;
  assign y__h9685 =
	     p__h9132[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9745 =
	     x__h9975 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9747 =
	     x__h9885 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] ;
  assign y__h9749 =
	     x__h9818 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[1] ;
  assign y__h9751 =
	     p__h9132[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[2] ;
  always@(grs_mul_round__h1316 or mant_1__h1310 or mantissa_round__h21013)
  begin
    case (grs_mul_round__h1316)
      3'b011, 3'b110, 3'b111:
	  IF_IF_1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_ETC___d600 =
	      mantissa_round__h21013;
      default: IF_IF_1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_ETC___d600 =
		   { 1'd0, mant_1__h1310 };
    endcase
  end
  always@(grs__h756 or
	  IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d913 or
	  IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d915)
  begin
    case (grs__h756)
      3'b011, 3'b110, 3'b111:
	  CASE_grs56_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_ETC__q3 =
	      IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d915;
      default: CASE_grs56_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_ETC__q3 =
		   IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d913[26:4];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        as1 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	bs1 <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	cs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	failed_cases <= `BSV_ASSIGNMENT_DELAY 32'd0;
	mac_out_r <= `BSV_ASSIGNMENT_DELAY 32'd0;
	mac_rg_A <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	mac_rg_B <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	mac_rg_C <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	macs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_a <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_af <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_b <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_bf <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_c <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_cf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_macf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_r <= `BSV_ASSIGNMENT_DELAY 1'b1;
      end
    else
      begin
        if (as1$EN) as1 <= `BSV_ASSIGNMENT_DELAY as1$D_IN;
	if (bs1$EN) bs1 <= `BSV_ASSIGNMENT_DELAY bs1$D_IN;
	if (count$EN) count <= `BSV_ASSIGNMENT_DELAY count$D_IN;
	if (cs1$EN) cs1 <= `BSV_ASSIGNMENT_DELAY cs1$D_IN;
	if (failed_cases$EN)
	  failed_cases <= `BSV_ASSIGNMENT_DELAY failed_cases$D_IN;
	if (mac_out_r$EN) mac_out_r <= `BSV_ASSIGNMENT_DELAY mac_out_r$D_IN;
	if (mac_rg_A$EN) mac_rg_A <= `BSV_ASSIGNMENT_DELAY mac_rg_A$D_IN;
	if (mac_rg_B$EN) mac_rg_B <= `BSV_ASSIGNMENT_DELAY mac_rg_B$D_IN;
	if (mac_rg_C$EN) mac_rg_C <= `BSV_ASSIGNMENT_DELAY mac_rg_C$D_IN;
	if (macs1$EN) macs1 <= `BSV_ASSIGNMENT_DELAY macs1$D_IN;
	if (rg_a$EN) rg_a <= `BSV_ASSIGNMENT_DELAY rg_a$D_IN;
	if (rg_af$EN) rg_af <= `BSV_ASSIGNMENT_DELAY rg_af$D_IN;
	if (rg_b$EN) rg_b <= `BSV_ASSIGNMENT_DELAY rg_b$D_IN;
	if (rg_bf$EN) rg_bf <= `BSV_ASSIGNMENT_DELAY rg_bf$D_IN;
	if (rg_c$EN) rg_c <= `BSV_ASSIGNMENT_DELAY rg_c$D_IN;
	if (rg_cf$EN) rg_cf <= `BSV_ASSIGNMENT_DELAY rg_cf$D_IN;
	if (rg_macf$EN) rg_macf <= `BSV_ASSIGNMENT_DELAY rg_macf$D_IN;
	if (rg_r$EN) rg_r <= `BSV_ASSIGNMENT_DELAY rg_r$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    as1 = 16'hAAAA;
    bs1 = 16'hAAAA;
    count = 32'hAAAAAAAA;
    cs1 = 32'hAAAAAAAA;
    failed_cases = 32'hAAAAAAAA;
    mac_out_r = 32'hAAAAAAAA;
    mac_rg_A = 16'hAAAA;
    mac_rg_B = 16'hAAAA;
    mac_rg_C = 32'hAAAAAAAA;
    macs1 = 32'hAAAAAAAA;
    rg_a = 16'hAAAA;
    rg_af = 16'hAAAA;
    rg_b = 16'hAAAA;
    rg_bf = 16'hAAAA;
    rg_c = 32'hAAAAAAAA;
    rg_cf = 32'hAAAAAAAA;
    rg_macf = 32'hAAAAAAAA;
    rg_r = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (mac_out_r[30:23] != macs1[30:23] || mac_out_r[22:2] != macs1[22:2])
	$display("%d A:%b, B:%b, C:%b\n--Expected O/P --- %b, Actual O/P-- %b",
		 $signed(count),
		 as1,
		 bs1,
		 cs1,
		 macs1,
		 mac_out_r);
    if (RST_N != `BSV_RESET_VALUE)
      if (count == 32'd1003)
	$display("Failed for %d cases", $signed(failed_cases));
    if (RST_N != `BSV_RESET_VALUE) if (count == 32'd1003) $finish(32'd0);
  end
  // synopsys translate_on
endmodule  // mk_Tb

