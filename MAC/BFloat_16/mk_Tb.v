//
// Generated by Bluespec Compiler, version 2024.07 (build b4f31dbe)
//
// On Wed Oct 23 22:40:28 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mk_Tb(CLK,
	     RST_N);
  input  CLK;
  input  RST_N;

  // register as1
  reg [31 : 0] as1;
  wire [31 : 0] as1$D_IN;
  wire as1$EN;

  // register bs1
  reg [31 : 0] bs1;
  wire [31 : 0] bs1$D_IN;
  wire bs1$EN;

  // register count
  reg [31 : 0] count;
  wire [31 : 0] count$D_IN;
  wire count$EN;

  // register cs1
  reg [31 : 0] cs1;
  wire [31 : 0] cs1$D_IN;
  wire cs1$EN;

  // register failed_cases
  reg [31 : 0] failed_cases;
  wire [31 : 0] failed_cases$D_IN;
  wire failed_cases$EN;

  // register mac_out_r
  reg [31 : 0] mac_out_r;
  wire [31 : 0] mac_out_r$D_IN;
  wire mac_out_r$EN;

  // register mac_rg_A
  reg [15 : 0] mac_rg_A;
  wire [15 : 0] mac_rg_A$D_IN;
  wire mac_rg_A$EN;

  // register mac_rg_B
  reg [15 : 0] mac_rg_B;
  wire [15 : 0] mac_rg_B$D_IN;
  wire mac_rg_B$EN;

  // register mac_rg_C
  reg [31 : 0] mac_rg_C;
  wire [31 : 0] mac_rg_C$D_IN;
  wire mac_rg_C$EN;

  // register rg_a
  reg [15 : 0] rg_a;
  wire [15 : 0] rg_a$D_IN;
  wire rg_a$EN;

  // register rg_af
  reg [31 : 0] rg_af;
  wire [31 : 0] rg_af$D_IN;
  wire rg_af$EN;

  // register rg_b
  reg [15 : 0] rg_b;
  wire [15 : 0] rg_b$D_IN;
  wire rg_b$EN;

  // register rg_bf
  reg [31 : 0] rg_bf;
  wire [31 : 0] rg_bf$D_IN;
  wire rg_bf$EN;

  // register rg_c
  reg [31 : 0] rg_c;
  wire [31 : 0] rg_c$D_IN;
  wire rg_c$EN;

  // register rg_cf
  reg [31 : 0] rg_cf;
  wire [31 : 0] rg_cf$D_IN;
  wire rg_cf$EN;

  // register rg_r
  reg rg_r;
  wire rg_r$D_IN, rg_r$EN;

  // ports of submodule obj_inp
  wire [31 : 0] obj_inp$out_c;
  wire [15 : 0] obj_inp$out_a, obj_inp$out_b;
  wire obj_inp$EN, obj_inp$read;

  // remaining internal signals
  reg [30 : 0] IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1638,
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1344;
  reg [22 : 0] CASE_grs040_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BIT_ETC__q16,
	       CASE_guard3621_0b10_out_sfd9184_0b11_theResult_ETC__q14,
	       CASE_guard8867_0b10_out_sfd7533_0b11_theResult_ETC__q7;
  reg [7 : 0] CASE_guard3621_0b10_out_exp9183_0b11_theResult_ETC__q15,
	      CASE_guard8867_0b10_out_exp7532_0b11_theResult_ETC__q8;
  wire [47 : 0] IF_0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30__ETC__q5,
		NOT_as1_07_BITS_30_TO_23_08_EQ_0_32_72_CONCAT__ETC___d992,
		_theResult___snd__h59411,
		_theResult___snd__h66970,
		_theResult___snd__h66984,
		_theResult___snd__h66986,
		_theResult___snd__h66998,
		_theResult___snd__h67004,
		_theResult___snd__h67022,
		_theResult___snd__h67027,
		sfdin__h66941,
		sfdres__h57464,
		sfdres__h58548,
		x__h59493;
  wire [31 : 0] IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645,
		IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d657,
		_theResult_____3_fst__h21378,
		_theResult_____3_snd_fst__h21380,
		mul_result__h1003,
		rg_C_s5__h1005,
		rg_C_s6__h21383,
		rg_C_s6__h21630,
		rg_mult_s5__h1004,
		rg_mult_s6__h21382,
		rg_mult_s6__h21629;
  wire [30 : 0] IF_0b0_CONCAT_NOT_IF_NOT_IF_as1_07_BITS_30_TO__ETC___d1634,
		IF_0b0_CONCAT_NOT_IF_NOT_as1_07_BITS_30_TO_23__ETC___d1341,
		IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1337,
		IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1613,
		IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1639,
		IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1345,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1371,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1372,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1374,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1376,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640,
		IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d614,
		IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1346,
		IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1334;
  wire [28 : 0] IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675,
		a_temp__h21541,
		b_temp__h21542;
  wire [27 : 0] IF_0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_ETC__q12,
		IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1442,
		_0b0_CONCAT_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_ETC___d1431,
		_theResult___snd__h78641,
		_theResult___snd__h78655,
		_theResult___snd__h78657,
		_theResult___snd__h78669,
		_theResult___snd__h78675,
		_theResult___snd__h78693,
		_theResult___snd__h78698,
		a__h57386,
		b__h57388,
		guard__h74224,
		opB__h57402,
		result__h74212,
		result__h74229,
		result__h74341,
		sfdA__h57420,
		sfdB__h57421,
		sfdin__h73634,
		sfdin__h78612;
  wire [26 : 0] IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d890,
		IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1429,
		_theResult_____2_fst__h21491,
		_theResult_____2_fst__h28778,
		mult_mant_s7__h1017,
		rg_mant_s9__h22132,
		rg_mant_s9__h28835,
		shiftedmantissa__h1019,
		x__h21748;
  wire [25 : 0] c_mant_s7__h1018, mantissa_a__h22131;
  wire [24 : 0] sfd__h67057, sfd__h78728;
  wire [23 : 0] opAsfd__h57494, opBsfd__h57495;
  wire [22 : 0] IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1369,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1668,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1672,
		IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1679,
		IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d892,
		IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1286,
		IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1282,
		IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1284,
		IF_cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NO_ETC___d1671,
		_theResult___fst_sfd__h66951,
		_theResult___fst_sfd__h67549,
		_theResult___fst_sfd__h78622,
		_theResult___fst_sfd__h79200,
		_theResult___sfd__h67530,
		_theResult___sfd__h79181,
		_theResult___snd_fst_sfd__h66957,
		_theResult___snd_fst_sfd__h78628,
		mant_1__h1588,
		mant_1__h21092,
		mant_1__h21235,
		mantissa__h1589,
		out_sfd__h67533,
		out_sfd__h79184,
		sfd__h31102,
		sfd__h31105,
		sfd__h46160,
		sfd__h73605,
		x__h67586;
  wire [9 : 0] IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399,
	       IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943,
	       IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395,
	       _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d985,
	       value__h39418,
	       x__h32062,
	       x__h74217,
	       x__h74221;
  wire [8 : 0] IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011,
	       IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1210,
	       IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452,
	       IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1571;
  wire [7 : 0] IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1631,
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1266,
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1653,
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1655,
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1657,
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1664,
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d960,
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d956,
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d958,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90,
	       _theResult_____2_snd_fst__h21493,
	       _theResult_____2_snd_fst__h28780,
	       _theResult___exp__h67529,
	       _theResult___exp__h79180,
	       _theResult___fst_exp__h39511,
	       _theResult___fst_exp__h39526,
	       _theResult___fst_exp__h66947,
	       _theResult___fst_exp__h66950,
	       _theResult___fst_exp__h67029,
	       _theResult___fst_exp__h67035,
	       _theResult___fst_exp__h67038,
	       _theResult___fst_exp__h67548,
	       _theResult___fst_exp__h78618,
	       _theResult___fst_exp__h78621,
	       _theResult___fst_exp__h78646,
	       _theResult___fst_exp__h78661,
	       _theResult___fst_exp__h78700,
	       _theResult___fst_exp__h78706,
	       _theResult___fst_exp__h78709,
	       _theResult___fst_exp__h79199,
	       _theResult___snd_fst__h1552,
	       _theResult___snd_fst__h1554,
	       _theResult___snd_fst_exp__h66956,
	       _theResult___snd_fst_exp__h78627,
	       as1_BITS_30_TO_23_MINUS_127__q2,
	       bs1_BITS_30_TO_23_MINUS_127__q3,
	       cs1_BITS_30_TO_23_MINUS_127__q9,
	       diff__h57406,
	       din_exp8564_MINUS_127__q11,
	       din_exp9401_MINUS_127__q4,
	       din_exp__h39401,
	       din_exp__h78564,
	       din_inc___2_exp__h67565,
	       din_inc___2_exp__h79248,
	       e__h21097,
	       exp___1__h21091,
	       exp__h1585,
	       exp__h1587,
	       exp_add_s1__h1499,
	       exp_diff_s6__h21376,
	       exponent__h22130,
	       exponent__h28786,
	       op2__h29169,
	       out_exp__h67532,
	       out_exp__h79183,
	       rg_exponent_s9__h1035,
	       shift_count__h1016,
	       x7448_MINUS_127__q10,
	       x__h21122,
	       x__h3832,
	       x__h57448,
	       x__h74281,
	       y__h3710,
	       y__h3833,
	       y__h4212,
	       y__h4950,
	       y__h5031,
	       y__h5145,
	       y__h7738;
  wire [5 : 0] IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1208;
  wire [4 : 0] IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d773,
	       IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1569,
	       leftshift_count__h22129,
	       out__h22200,
	       spliced_bits__h22248;
  wire [3 : 0] IF_y7661_OR_y7659_THEN_1_ELSE_0__q1,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425,
	       a__h2842,
	       b__h11939,
	       b__h2843,
	       carrrg_b__h11610,
	       carrrg_b__h11951,
	       carrrg_b__h2855,
	       carrrg_b__h3513,
	       carrrg_b__h6637,
	       carrrg_b__h7679,
	       carrrg_b__h9381,
	       p__h11606,
	       p__h11947,
	       p__h2851,
	       p__h3509,
	       p__h6633,
	       p__h7675,
	       p__h9377,
	       spliced_bits__h11520,
	       spliced_bits__h11861,
	       spliced_bits__h1747,
	       spliced_bits__h1777,
	       spliced_bits__h1807,
	       spliced_bits__h22371,
	       spliced_bits__h22401,
	       spliced_bits__h22431,
	       spliced_bits__h22460,
	       spliced_bits__h2760,
	       spliced_bits__h3418,
	       spliced_bits__h6488,
	       spliced_bits__h6547,
	       spliced_bits__h9291;
  wire [2 : 0] _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d346,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d583,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d544,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d545,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98,
	       grs__h1040,
	       spliced_bits__h22584,
	       spliced_bits__h22614,
	       spliced_bits__h22644,
	       spliced_bits__h22674,
	       spliced_bits__h22704,
	       spliced_bits__h22734,
	       spliced_bits__h22763;
  wire [1 : 0] IF_sfdin6941_BIT_24_THEN_2_ELSE_0__q6,
	       IF_sfdin8612_BIT_4_THEN_2_ELSE_0__q13,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d565,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80,
	       _theResult___snd_fst__h67095,
	       _theResult___snd_fst__h78751,
	       e__h24705,
	       e__h24846,
	       e__h24987,
	       e__h25128,
	       e__h25269,
	       e__h25410,
	       e__h25551,
	       e__h25692,
	       e__h25833,
	       e__h25974,
	       e__h26115,
	       e__h26256,
	       e__h26396,
	       guard__h58867,
	       guard__h73587,
	       guard__h73621,
	       spliced_bits__h23129,
	       spliced_bits__h23198,
	       spliced_bits__h23267,
	       spliced_bits__h23336,
	       spliced_bits__h23405,
	       spliced_bits__h23474,
	       spliced_bits__h23543,
	       spliced_bits__h23612,
	       spliced_bits__h23681,
	       spliced_bits__h23750,
	       spliced_bits__h23819,
	       spliced_bits__h23888,
	       spliced_bits__h23957;
  wire IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1365,
       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1693,
       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1694,
       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1696,
       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1698,
       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1704,
       IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1701,
       IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d618,
       IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d944,
       IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d946,
       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366,
       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368,
       IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1359,
       IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_bs1_1_ETC___d1357,
       NOT_IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AN_ETC___d1691,
       NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1683,
       NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1688,
       NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412,
       NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_NO_ETC___d980,
       NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_as_ETC___d984,
       NOT_as1_07_BIT_31_349_EQ_bs1_17_BIT_31_350_354___d1355,
       NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390,
       _0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30_TO__ETC___d1211,
       _0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_ETC___d1572,
       _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d664,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454,
       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60,
       _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d986,
       _theResult_____2_snd_snd_snd_fst__h21483,
       _theResult_____2_snd_snd_snd_fst__h28784,
       _theResult_____2_snd_snd_snd_snd_fst__h28891,
       _theResult_____2_snd_snd_snd_snd_fst__h28918,
       _theResult_____2_snd_snd_snd_snd_snd_fst__h28963,
       _theResult_____2_snd_snd_snd_snd_snd_fst__h29011,
       a__h15746,
       a__h15953,
       a__h16160,
       a__h2405,
       as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953,
       as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_07_B_ETC___d949,
       b__h15540,
       cin__h15748,
       cin__h15955,
       cin__h19068,
       cin__h20111,
       cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319,
       cs1_302_BIT_31_367_EQ_IF_as1_07_BITS_30_TO_23__ETC___d1413,
       rg_sign_s9__h1037,
       sfdlsb__h59408,
       sign_s1__h1498,
       spliced_bits_BIT_3___h21085,
       sticky_bit_s9__h22135,
       sticky_bit_s9__h28790,
       sticky_bit_s9__h28838,
       x__h10063,
       x__h10130,
       x__h10220,
       x__h10525,
       x__h10595,
       x__h10710,
       x__h10712,
       x__h10714,
       x__h10784,
       x__h10851,
       x__h10941,
       x__h12150,
       x__h12231,
       x__h12564,
       x__h12566,
       x__h12636,
       x__h12703,
       x__h13101,
       x__h13103,
       x__h13139,
       x__h13181,
       x__h13501,
       x__h13503,
       x__h13505,
       x__h13528,
       x__h13570,
       x__h13634,
       x__h14572,
       x__h14574,
       x__h14655,
       x__h14722,
       x__h14830,
       x__h14900,
       x__h15015,
       x__h15017,
       x__h15019,
       x__h15021,
       x__h15045,
       x__h15089,
       x__h15156,
       x__h15246,
       x__h15590,
       x__h15690,
       x__h15797,
       x__h15897,
       x__h16004,
       x__h16104,
       x__h16211,
       x__h16311,
       x__h17244,
       x__h17325,
       x__h17730,
       x__h17797,
       x__h18203,
       x__h18205,
       x__h18286,
       x__h18353,
       x__h18511,
       x__h18581,
       x__h18696,
       x__h18698,
       x__h18700,
       x__h18702,
       x__h18726,
       x__h18770,
       x__h18837,
       x__h18927,
       x__h19244,
       x__h19246,
       x__h19248,
       x__h19283,
       x__h19327,
       x__h19394,
       x__h19554,
       x__h19624,
       x__h19739,
       x__h19741,
       x__h19743,
       x__h19745,
       x__h19769,
       x__h19813,
       x__h19880,
       x__h19970,
       x__h20291,
       x__h20293,
       x__h20372,
       x__h20436,
       x__h20594,
       x__h20661,
       x__h29025,
       x__h3961,
       x__h3963,
       x__h4044,
       x__h4111,
       x__h4271,
       x__h4341,
       x__h4456,
       x__h4458,
       x__h4460,
       x__h4530,
       x__h4597,
       x__h4687,
       x__h5338,
       x__h5340,
       x__h5342,
       x__h5378,
       x__h5420,
       x__h5484,
       x__h5588,
       x__h5655,
       x__h5768,
       x__h5770,
       x__h5772,
       x__h5774,
       x__h5839,
       x__h5903,
       x__h5989,
       x__h6802,
       x__h6804,
       x__h6885,
       x__h6952,
       x__h7060,
       x__h7130,
       x__h7245,
       x__h7247,
       x__h7249,
       x__h7319,
       x__h7386,
       x__h7476,
       x__h7896,
       x__h7898,
       x__h7979,
       x__h8046,
       x__h8154,
       x__h8224,
       x__h8339,
       x__h8341,
       x__h8343,
       x__h8413,
       x__h8480,
       x__h8570,
       x__h8941,
       x__h8943,
       x__h9024,
       x__h9091,
       x__h9546,
       x__h9548,
       x__h9629,
       x__h9696,
       x__h9804,
       x__h9874,
       x__h9989,
       x__h9991,
       x__h9993,
       y__h10526,
       y__h10528,
       y__h10651,
       y__h10711,
       y__h10713,
       y__h10715,
       y__h10717,
       y__h12151,
       y__h12153,
       y__h12380,
       y__h12565,
       y__h12567,
       y__h12569,
       y__h13102,
       y__h13104,
       y__h13140,
       y__h13184,
       y__h13324,
       y__h13502,
       y__h13504,
       y__h13506,
       y__h14573,
       y__h14575,
       y__h14577,
       y__h14831,
       y__h14833,
       y__h14956,
       y__h15016,
       y__h15018,
       y__h15020,
       y__h15022,
       y__h15484,
       y__h15691,
       y__h15898,
       y__h16105,
       y__h16312,
       y__h17245,
       y__h17474,
       y__h17659,
       y__h17661,
       y__h18204,
       y__h18206,
       y__h18208,
       y__h18512,
       y__h18514,
       y__h18637,
       y__h18697,
       y__h18699,
       y__h18701,
       y__h18703,
       y__h19245,
       y__h19247,
       y__h19249,
       y__h19284,
       y__h19328,
       y__h19330,
       y__h19396,
       y__h19555,
       y__h19557,
       y__h19680,
       y__h19740,
       y__h19742,
       y__h19744,
       y__h19746,
       y__h20292,
       y__h20294,
       y__h20296,
       y__h20595,
       y__h20597,
       y__h20715,
       y__h3962,
       y__h3964,
       y__h3966,
       y__h4272,
       y__h4274,
       y__h4397,
       y__h4457,
       y__h4459,
       y__h4461,
       y__h4463,
       y__h5339,
       y__h5341,
       y__h5343,
       y__h5589,
       y__h5591,
       y__h5709,
       y__h5769,
       y__h5771,
       y__h5773,
       y__h5775,
       y__h6803,
       y__h6805,
       y__h6807,
       y__h7061,
       y__h7063,
       y__h7186,
       y__h7246,
       y__h7248,
       y__h7250,
       y__h7252,
       y__h7897,
       y__h7899,
       y__h7901,
       y__h8155,
       y__h8157,
       y__h8280,
       y__h8340,
       y__h8342,
       y__h8344,
       y__h8346,
       y__h8942,
       y__h8944,
       y__h8946,
       y__h9547,
       y__h9549,
       y__h9551,
       y__h9805,
       y__h9807,
       y__h9930,
       y__h9990,
       y__h9992,
       y__h9994,
       y__h9996;

  // submodule obj_inp
  file_read obj_inp(.RST(RST_N),
		    .clk(CLK),
		    .read(obj_inp$read),
		    .EN(obj_inp$EN),
		    .out_a(obj_inp$out_a),
		    .out_b(obj_inp$out_b),
		    .out_c(obj_inp$out_c));

  // register as1
  assign as1$D_IN = rg_af ;
  assign as1$EN = 1'd1 ;

  // register bs1
  assign bs1$D_IN = rg_bf ;
  assign bs1$EN = 1'd1 ;

  // register count
  assign count$D_IN = count + 32'd1 ;
  assign count$EN = 1'd1 ;

  // register cs1
  assign cs1$D_IN = rg_cf ;
  assign cs1$EN = 1'd1 ;

  // register failed_cases
  assign failed_cases$D_IN = failed_cases + 32'd1 ;
  assign failed_cases$EN =
	     mac_out_r[30:23] !=
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640[30:23] ||
	     mac_out_r[22:2] !=
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640[22:2] ;

  // register mac_out_r
  assign mac_out_r$D_IN =
	     { rg_sign_s9__h1037,
	       rg_exponent_s9__h1035,
	       CASE_grs040_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BIT_ETC__q16 } ;
  assign mac_out_r$EN = 1'd1 ;

  // register mac_rg_A
  assign mac_rg_A$D_IN = obj_inp$out_a ;
  assign mac_rg_A$EN = 1'd1 ;

  // register mac_rg_B
  assign mac_rg_B$D_IN = obj_inp$out_b ;
  assign mac_rg_B$EN = 1'd1 ;

  // register mac_rg_C
  assign mac_rg_C$D_IN = obj_inp$out_c ;
  assign mac_rg_C$EN = 1'd1 ;

  // register rg_a
  assign rg_a$D_IN = 16'h0 ;
  assign rg_a$EN = 1'b0 ;

  // register rg_af
  assign rg_af$D_IN = { obj_inp$out_a, 16'd0 } ;
  assign rg_af$EN = 1'd1 ;

  // register rg_b
  assign rg_b$D_IN = 16'h0 ;
  assign rg_b$EN = 1'b0 ;

  // register rg_bf
  assign rg_bf$D_IN = { obj_inp$out_b, 16'd0 } ;
  assign rg_bf$EN = 1'd1 ;

  // register rg_c
  assign rg_c$D_IN = 32'h0 ;
  assign rg_c$EN = 1'b0 ;

  // register rg_cf
  assign rg_cf$D_IN = obj_inp$out_c ;
  assign rg_cf$EN = 1'd1 ;

  // register rg_r
  assign rg_r$D_IN = 1'b0 ;
  assign rg_r$EN = 1'b0 ;

  // submodule obj_inp
  assign obj_inp$read = 1'b1 ;
  assign obj_inp$EN = 1'd1 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30__ETC__q5 =
	     _0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30_TO__ETC___d1211 ?
	       _theResult___snd__h67027 :
	       _theResult___snd__h67022 ;
  assign IF_0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_ETC__q12 =
	     _0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_ETC___d1572 ?
	       _theResult___snd__h78698 :
	       _theResult___snd__h78693 ;
  assign IF_0b0_CONCAT_NOT_IF_NOT_IF_as1_07_BITS_30_TO__ETC___d1634 =
	     sfd__h78728[24] ?
	       ((_theResult___snd_fst_exp__h78627 == 8'd254) ?
		  31'h7F800000 :
		  { din_inc___2_exp__h79248, sfd__h78728[23:1] }) :
	       { IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1631,
		 sfd__h78728[22:0] } ;
  assign IF_0b0_CONCAT_NOT_IF_NOT_as1_07_BITS_30_TO_23__ETC___d1341 =
	     sfd__h67057[24] ?
	       ((_theResult___snd_fst_exp__h66956 == 8'd254) ?
		  31'h7F800000 :
		  { din_inc___2_exp__h67565, sfd__h67057[23:1] }) :
	       { IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1266,
		 sfd__h67057[22:0] } ;
  assign IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 =
	     (din_exp__h39401 == 8'd0) ?
	       9'd386 :
	       { din_exp9401_MINUS_127__q4[7], din_exp9401_MINUS_127__q4 } ;
  assign IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1208 =
	     (sfdres__h58548[47] ?
		6'd0 :
		(sfdres__h58548[46] ?
		   6'd1 :
		   (sfdres__h58548[45] ?
		      6'd2 :
		      (sfdres__h58548[44] ?
			 6'd3 :
			 (sfdres__h58548[43] ?
			    6'd4 :
			    (sfdres__h58548[42] ?
			       6'd5 :
			       (sfdres__h58548[41] ?
				  6'd6 :
				  (sfdres__h58548[40] ?
				     6'd7 :
				     (sfdres__h58548[39] ?
					6'd8 :
					(sfdres__h58548[38] ?
					   6'd9 :
					   (sfdres__h58548[37] ?
					      6'd10 :
					      (sfdres__h58548[36] ?
						 6'd11 :
						 (sfdres__h58548[35] ?
						    6'd12 :
						    (sfdres__h58548[34] ?
						       6'd13 :
						       (sfdres__h58548[33] ?
							  6'd14 :
							  (sfdres__h58548[32] ?
							     6'd15 :
							     (sfdres__h58548[31] ?
								6'd16 :
								(sfdres__h58548[30] ?
								   6'd17 :
								   (sfdres__h58548[29] ?
								      6'd18 :
								      (sfdres__h58548[28] ?
									 6'd19 :
									 (sfdres__h58548[27] ?
									    6'd20 :
									    (sfdres__h58548[26] ?
									       6'd21 :
									       (sfdres__h58548[25] ?
										  6'd22 :
										  (sfdres__h58548[24] ?
										     6'd23 :
										     (sfdres__h58548[23] ?
											6'd24 :
											(sfdres__h58548[22] ?
											   6'd25 :
											   (sfdres__h58548[21] ?
											      6'd26 :
											      (sfdres__h58548[20] ?
												 6'd27 :
												 (sfdres__h58548[19] ?
												    6'd28 :
												    (sfdres__h58548[18] ?
												       6'd29 :
												       (sfdres__h58548[17] ?
													  6'd30 :
													  (sfdres__h58548[16] ?
													     6'd31 :
													     (sfdres__h58548[15] ?
														6'd32 :
														(sfdres__h58548[14] ?
														   6'd33 :
														   (sfdres__h58548[13] ?
														      6'd34 :
														      (sfdres__h58548[12] ?
															 6'd35 :
															 (sfdres__h58548[11] ?
															    6'd36 :
															    (sfdres__h58548[10] ?
															       6'd37 :
															       (sfdres__h58548[9] ?
																  6'd38 :
																  (sfdres__h58548[8] ?
																     6'd39 :
																     (sfdres__h58548[7] ?
																	6'd40 :
																	(sfdres__h58548[6] ?
																	   6'd41 :
																	   (sfdres__h58548[5] ?
																	      6'd42 :
																	      (sfdres__h58548[4] ?
																		 6'd43 :
																		 (sfdres__h58548[3] ?
																		    6'd44 :
																		    (sfdres__h58548[2] ?
																		       6'd45 :
																		       (sfdres__h58548[1] ?
																			  6'd46 :
																			  (sfdres__h58548[0] ?
																			     6'd47 :
																			     6'd48)))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1210 =
	     IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 -
	     9'd386 ;
  assign IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1337 =
	     (sfdres__h58548[47] &&
	      IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h66947, sfdin__h66941[47:25] } ;
  assign IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d773 =
	     (spliced_bits__h22460[3] & spliced_bits__h22431[3]) ?
	       5'b10000 :
	       ((~spliced_bits__h22460[3]) ?
		  { 1'b0, spliced_bits__h22460 } :
		  { 2'b01, spliced_bits__h22431[2:0] }) ;
  assign IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1569 =
	     (sfdin__h73634[27] ?
		5'd0 :
		(sfdin__h73634[26] ?
		   5'd1 :
		   (sfdin__h73634[25] ?
		      5'd2 :
		      (sfdin__h73634[24] ?
			 5'd3 :
			 (sfdin__h73634[23] ?
			    5'd4 :
			    (sfdin__h73634[22] ?
			       5'd5 :
			       (sfdin__h73634[21] ?
				  5'd6 :
				  (sfdin__h73634[20] ?
				     5'd7 :
				     (sfdin__h73634[19] ?
					5'd8 :
					(sfdin__h73634[18] ?
					   5'd9 :
					   (sfdin__h73634[17] ?
					      5'd10 :
					      (sfdin__h73634[16] ?
						 5'd11 :
						 (sfdin__h73634[15] ?
						    5'd12 :
						    (sfdin__h73634[14] ?
						       5'd13 :
						       (sfdin__h73634[13] ?
							  5'd14 :
							  (sfdin__h73634[12] ?
							     5'd15 :
							     (sfdin__h73634[11] ?
								5'd16 :
								(sfdin__h73634[10] ?
								   5'd17 :
								   (sfdin__h73634[9] ?
								      5'd18 :
								      (sfdin__h73634[8] ?
									 5'd19 :
									 (sfdin__h73634[7] ?
									    5'd20 :
									    (sfdin__h73634[6] ?
									       5'd21 :
									       (sfdin__h73634[5] ?
										  5'd22 :
										  (sfdin__h73634[4] ?
										     5'd23 :
										     (sfdin__h73634[3] ?
											5'd24 :
											(sfdin__h73634[2] ?
											   5'd25 :
											   (sfdin__h73634[1] ?
											      5'd26 :
											      (sfdin__h73634[0] ?
												 5'd27 :
												 5'd28)))))))))))))))))))))))))))) -
	     5'd1 ;
  assign IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1613 =
	     (sfdin__h73634[27] &&
	      IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h78618, sfdin__h78612[27:5] } ;
  assign IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675 =
	     (IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[31] ^
	      IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d657[31]) ?
	       a_temp__h21541 - b_temp__h21542 :
	       a_temp__h21541 + b_temp__h21542 ;
  assign IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1631 =
	     (_theResult___snd_fst_exp__h78627 == 8'd0 &&
	      sfd__h78728[24:23] == 2'b01) ?
	       8'd1 :
	       _theResult___snd_fst_exp__h78627 ;
  assign IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1639 =
	     (_theResult___snd_fst_exp__h78627 == 8'd255 ||
	      guard__h73621 == 2'b0 ||
	      guard__h73621 == 2'b01) ?
	       IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1613 :
	       IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1638 ;
  assign IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1442 =
	     (diff__h57406 < 8'd28) ?
	       result__h74229 :
	       ((IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1429 ==
		 27'd0) ?
		  opB__h57402 :
		  28'd1) ;
  assign IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 =
	     (din_exp__h78564 == 8'd0) ?
	       9'd386 :
	       { din_exp8564_MINUS_127__q11[7], din_exp8564_MINUS_127__q11 } ;
  assign IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1571 =
	     IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 -
	     9'd386 ;
  assign IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1266 =
	     (_theResult___snd_fst_exp__h66956 == 8'd0 &&
	      sfd__h67057[24:23] == 2'b01) ?
	       8'd1 :
	       _theResult___snd_fst_exp__h66956 ;
  assign IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1345 =
	     (_theResult___snd_fst_exp__h66956 == 8'd255 ||
	      guard__h58867 == 2'b0 ||
	      guard__h58867 == 2'b01) ?
	       IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1337 :
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1344 ;
  assign IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1365 =
	     (_theResult___snd_fst_exp__h66956 == 8'd255 ||
	      guard__h58867 == 2'b0 ||
	      guard__h58867 == 2'b01 ||
	      guard__h58867 == 2'b10) ?
	       NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_as_ETC___d984 &&
	       NOT_as1_07_BIT_31_349_EQ_bs1_17_BIT_31_350_354___d1355 :
	       guard__h58867 == 2'b11 &&
	       NOT_as1_07_BIT_31_349_EQ_bs1_17_BIT_31_350_354___d1355 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1369 =
	     IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368 ?
	       23'd0 :
	       23'd4194304 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1371 =
	     (x__h57448 == 8'd255 && x__h67586 == 23'd0) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1346 :
	       cs1[30:0] ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1372 =
	     (x__h57448 == 8'd255 && x__h67586 == 23'd0 &&
	      cs1[30:23] == 8'd255 &&
	      cs1[22:0] == 23'd0) ?
	       { 8'd255,
		 IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1369 } :
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1371 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1374 =
	     (x__h57448 == 8'd255 && x__h67586[22]) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1346 :
	       ((cs1[30:23] == 8'd255 && cs1[22]) ?
		  cs1[30:0] :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1372) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1376 =
	     (x__h57448 == 8'd255 && x__h67586 != 23'd0 && !x__h67586[22]) ?
	       { x__h57448, sfd__h73605 } :
	       ((cs1[30:23] == 8'd255 && cs1[22:0] != 23'd0 && !cs1[22]) ?
		  { cs1[30:23], sfd__h46160 } :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1374) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399 =
	     (x__h57448 == 8'd0) ?
	       10'd898 :
	       { {2{x7448_MINUS_127__q10[7]}}, x7448_MINUS_127__q10 } ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640 =
	     (x__h57448 == 8'd255 && x__h67586 != 23'd0 && !x__h67586[22] ||
	      cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319) ?
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1376 :
	       IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1639 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1653 =
	     (x__h57448 == 8'd255 && x__h67586 == 23'd0 &&
	      cs1[30:23] == 8'd255 &&
	      cs1[22:0] == 23'd0) ?
	       8'd255 :
	       ((x__h57448 == 8'd255 && x__h67586 == 23'd0) ?
		  x__h57448 :
		  cs1[30:23]) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1655 =
	     (x__h57448 == 8'd255 && x__h67586[22]) ?
	       x__h57448 :
	       ((cs1[30:23] == 8'd255 && cs1[22]) ?
		  cs1[30:23] :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1653) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1657 =
	     (x__h57448 == 8'd255 && x__h67586 != 23'd0 && !x__h67586[22]) ?
	       x__h57448 :
	       ((cs1[30:23] == 8'd255 && cs1[22:0] != 23'd0 && !cs1[22]) ?
		  cs1[30:23] :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1655) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1664 =
	     (x__h57448 == 8'd255 && x__h67586 != 23'd0 && !x__h67586[22] ||
	      cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319) ?
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1657 :
	       _theResult___fst_exp__h79199 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1668 =
	     (x__h57448 == 8'd255 && x__h67586 == 23'd0 &&
	      cs1[30:23] == 8'd255 &&
	      cs1[22:0] == 23'd0) ?
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1369 :
	       ((x__h57448 == 8'd255 && x__h67586 == 23'd0) ?
		  x__h67586 :
		  cs1[22:0]) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1672 =
	     (x__h57448 == 8'd255 && x__h67586 != 23'd0 && !x__h67586[22]) ?
	       sfd__h73605 :
	       IF_cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NO_ETC___d1671 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1679 =
	     (x__h57448 == 8'd255 && x__h67586 != 23'd0 && !x__h67586[22] ||
	      cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319) ?
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1672 :
	       _theResult___fst_sfd__h79200 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1693 =
	     (x__h57448 == 8'd255 && x__h67586 == 23'd0) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 :
	       cs1[31] ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1694 =
	     (x__h57448 == 8'd255 && x__h67586 == 23'd0 &&
	      cs1[30:23] == 8'd255 &&
	      cs1[22:0] == 23'd0) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368 &&
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 :
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1693 ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1696 =
	     (x__h57448 == 8'd255 && x__h67586[22]) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 :
	       ((cs1[30:23] == 8'd255 && cs1[22]) ?
		  cs1[31] :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1694) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1698 =
	     (x__h57448 == 8'd255 && x__h67586 != 23'd0 && !x__h67586[22]) ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 :
	       ((cs1[30:23] == 8'd255 && cs1[22:0] != 23'd0 && !cs1[22]) ?
		  cs1[31] :
		  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1696) ;
  assign IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1704 =
	     (x__h57448 == 8'd255 && x__h67586 != 23'd0 && !x__h67586[22] ||
	      cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319) ?
	       IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1698 :
	       ((_theResult___snd_fst_exp__h78627 == 8'd255 ||
		 guard__h73621 == 2'b0 ||
		 guard__h73621 == 2'b01 ||
		 guard__h73621 == 2'b10) ?
		  IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1701 :
		  guard__h73621 == 2'b11 &&
		  IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1701) ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645 =
	     (rg_mult_s5__h1004[30:23] != 8'd255 &&
	      rg_C_s5__h1005[30:23] != 8'd255) ?
	       _theResult_____3_fst__h21378 :
	       rg_mult_s6__h21382 ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d657 =
	     (rg_mult_s5__h1004[30:23] != 8'd255 &&
	      rg_C_s5__h1005[30:23] != 8'd255) ?
	       _theResult_____3_snd_fst__h21380 :
	       rg_C_s6__h21383 ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d890 =
	     (rg_mult_s5__h1004[30:23] != 8'd255 &&
	      rg_C_s5__h1005[30:23] != 8'd255) ?
	       _theResult_____2_fst__h21491 :
	       ((rg_C_s5__h1005[22:0] != 23'd0 ||
		 rg_mult_s5__h1004[22:0] != 23'd0) ?
		  27'd67108864 :
		  27'd0) ;
  assign IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d892 =
	     IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d890[26:4] +
	     23'd1 ;
  assign IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1429 =
	     { NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		 x__h57448 != 8'd0 :
		 cs1[30:23] != 8'd0,
	       NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		 x__h67586 :
		 cs1[22:0],
	       3'b0 } ;
  assign IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1701 =
	     NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
	       cs1[31] :
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 ;
  assign IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d614 =
	     (mac_rg_A[14:7] != 8'd0 && mac_rg_B[14:7] != 8'd0 &&
	      mac_rg_A[14:7] != 8'd255 &&
	      mac_rg_B[14:7] != 8'd255) ?
	       { exp__h1587, mantissa__h1589 } :
	       { (mac_rg_A[14:7] != 8'd0 && mac_rg_B[14:7] != 8'd0 &&
		  (mac_rg_A[14:7] == 8'd255 || mac_rg_B[14:7] == 8'd255)) ?
		   8'd255 :
		   (((mac_rg_A[14:7] != 8'd255 || mac_rg_B[14:7] != 8'd0) &&
		     (mac_rg_A[14:7] != 8'd0 || mac_rg_B[14:7] != 8'd255) &&
		     (mac_rg_A[14:7] == 8'd0 || mac_rg_B[14:7] == 8'd0)) ?
		      8'd0 :
		      8'd255),
		 (mac_rg_A[14:7] != 8'd0 && mac_rg_B[14:7] != 8'd0 &&
		  (mac_rg_A[14:7] == 8'd255 || mac_rg_B[14:7] == 8'd255) ||
		  (mac_rg_A[14:7] != 8'd255 || mac_rg_B[14:7] != 8'd0) &&
		  (mac_rg_A[14:7] != 8'd0 || mac_rg_B[14:7] != 8'd255) &&
		  (mac_rg_A[14:7] == 8'd0 || mac_rg_B[14:7] == 8'd0)) ?
		   23'd0 :
		   23'd4194304 } ;
  assign IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d618 =
	     IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d614[30:23] <
	     mac_rg_C[30:23] ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943 =
	     ((as1[30:23] == 8'd0) ?
		10'd898 :
		{ {2{as1_BITS_30_TO_23_MINUS_127__q2[7]}},
		  as1_BITS_30_TO_23_MINUS_127__q2 }) +
	     ((bs1[30:23] == 8'd0) ?
		10'd898 :
		{ {2{bs1_BITS_30_TO_23_MINUS_127__q3[7]}},
		  bs1_BITS_30_TO_23_MINUS_127__q3 }) ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d944 =
	     (IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943 ^
	      10'h200) <=
	     10'd639 ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d946 =
	     (IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943 ^
	      10'h200) <
	     10'd361 ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1286 =
	     (as1[30:23] == 8'd255 && as1[22:0] != 23'd0 && !as1[22]) ?
	       sfd__h31102 :
	       ((bs1[30:23] == 8'd255 && bs1[22:0] != 23'd0 && !bs1[22]) ?
		  sfd__h31105 :
		  IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1284) ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1346 =
	     as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953 ?
	       ((as1[30:23] == 8'd255 && as1[22:0] != 23'd0 && !as1[22]) ?
		  { as1[30:23], sfd__h31102 } :
		  IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1334) :
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1345 ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 =
	     as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953 ?
	       ((as1[30:23] == 8'd255 && as1[22:0] != 23'd0 && !as1[22]) ?
		  as1[31] :
		  IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1359) :
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1365 ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368 =
	     IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 ==
	     cs1[31] ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d960 =
	     (as1[30:23] == 8'd255 && as1[22:0] != 23'd0 && !as1[22]) ?
	       as1[30:23] :
	       ((bs1[30:23] == 8'd255 && bs1[22:0] != 23'd0 && !bs1[22]) ?
		  bs1[30:23] :
		  IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d958) ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1282 =
	     (as1[30:23] == 8'd255 && as1[22:0] == 23'd0 &&
	      bs1[30:23] == 8'd0 &&
	      bs1[22:0] == 23'd0 ||
	      as1[30:23] == 8'd0 && as1[22:0] == 23'd0 &&
	      bs1[30:23] == 8'd255 &&
	      bs1[22:0] == 23'd0) ?
	       23'd4194304 :
	       23'd0 ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1284 =
	     (as1[30:23] == 8'd255 && as1[22]) ?
	       as1[22:0] :
	       ((bs1[30:23] == 8'd255 && bs1[22]) ?
		  bs1[22:0] :
		  IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1282) ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d956 =
	     (as1[30:23] == 8'd255 && as1[22:0] == 23'd0 ||
	      bs1[30:23] == 8'd255 && bs1[22:0] == 23'd0) ?
	       8'd255 :
	       ((as1[30:23] == 8'd0 && as1[22:0] == 23'd0 ||
		 bs1[30:23] == 8'd0 && bs1[22:0] == 23'd0 ||
		 IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d944) ?
		  8'd0 :
		  8'd255) ;
  assign IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d958 =
	     (as1[30:23] == 8'd255 && as1[22]) ?
	       as1[30:23] :
	       ((bs1[30:23] == 8'd255 && bs1[22]) ?
		  bs1[30:23] :
		  IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d956) ;
  assign IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1334 =
	     (bs1[30:23] == 8'd255 && bs1[22:0] != 23'd0 && !bs1[22]) ?
	       { bs1[30:23], sfd__h31105 } :
	       ((as1[30:23] == 8'd255 && as1[22]) ?
		  as1[30:0] :
		  ((bs1[30:23] == 8'd255 && bs1[22]) ?
		     bs1[30:0] :
		     { IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d956,
		       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_0_ETC___d1282 })) ;
  assign IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_NOT_b_ETC___d1359 =
	     (bs1[30:23] == 8'd255 && bs1[22:0] != 23'd0 && !bs1[22]) ?
	       bs1[31] :
	       ((as1[30:23] == 8'd255 && as1[22]) ?
		  as1[31] :
		  IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_bs1_1_ETC___d1357) ;
  assign IF_bs1_17_BITS_30_TO_23_18_EQ_255_19_AND_bs1_1_ETC___d1357 =
	     (bs1[30:23] == 8'd255 && bs1[22]) ?
	       bs1[31] :
	       (as1[30:23] != 8'd255 || as1[22:0] != 23'd0 ||
		bs1[30:23] != 8'd0 ||
		bs1[22:0] != 23'd0) &&
	       (as1[30:23] != 8'd0 || as1[22:0] != 23'd0 ||
		bs1[30:23] != 8'd255 ||
		bs1[22:0] != 23'd0) &&
	       NOT_as1_07_BIT_31_349_EQ_bs1_17_BIT_31_350_354___d1355 ;
  assign IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395 =
	     (cs1[30:23] == 8'd0) ?
	       10'd898 :
	       { {2{cs1_BITS_30_TO_23_MINUS_127__q9[7]}},
		 cs1_BITS_30_TO_23_MINUS_127__q9 } ;
  assign IF_cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NO_ETC___d1671 =
	     (cs1[30:23] == 8'd255 && cs1[22:0] != 23'd0 && !cs1[22]) ?
	       sfd__h46160 :
	       ((x__h57448 == 8'd255 && x__h67586[22]) ?
		  x__h67586 :
		  ((cs1[30:23] == 8'd255 && cs1[22]) ?
		     cs1[22:0] :
		     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1668)) ;
  assign IF_sfdin6941_BIT_24_THEN_2_ELSE_0__q6 =
	     sfdin__h66941[24] ? 2'd2 : 2'd0 ;
  assign IF_sfdin8612_BIT_4_THEN_2_ELSE_0__q13 =
	     sfdin__h78612[4] ? 2'd2 : 2'd0 ;
  assign IF_y7661_OR_y7659_THEN_1_ELSE_0__q1 =
	     (y__h17661 | y__h17659) ? 4'd1 : 4'd0 ;
  assign NOT_IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AN_ETC___d1691 =
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1664 !=
	     8'd0 ||
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1679 !=
	     23'd0 ||
	     NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1688 ||
	     (NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		cs1_302_BIT_31_367_EQ_IF_as1_07_BITS_30_TO_23__ETC___d1413 :
		IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368) ;
  assign NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1683 =
	     (x__h57448 != 8'd255 || x__h67586 == 23'd0 || x__h67586[22]) &&
	     NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390 &&
	     sfdin__h73634[27] &&
	     IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 ==
	     9'd127 ;
  assign NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1688 =
	     (x__h57448 != 8'd255 || x__h67586 == 23'd0 || x__h67586[22]) &&
	     NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390 &&
	     NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_N_ETC___d1683 |
	     (_theResult___snd_fst_exp__h78627 != 8'd255 &&
	      guard__h73621 != 2'b0) ;
  assign NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 =
	     (IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395 ^
	      10'h200) >
	     (IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399 ^
	      10'h200) ||
	     IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395 ==
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399 &&
	     sfdB__h57421 > sfdA__h57420 ;
  assign NOT_as1_07_BITS_30_TO_23_08_EQ_0_32_72_CONCAT__ETC___d992 =
	     sfdres__h57464 >>
	     _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d985 ;
  assign NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_NO_ETC___d980 =
	     (as1[30:23] != 8'd255 || as1[22:0] != 23'd0) &&
	     (bs1[30:23] != 8'd255 || bs1[22:0] != 23'd0) &&
	     (as1[30:23] != 8'd0 || as1[22:0] != 23'd0) &&
	     (bs1[30:23] != 8'd0 || bs1[22:0] != 23'd0) &&
	     IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d944 &&
	     !IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d946 ;
  assign NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_as_ETC___d984 =
	     (as1[30:23] != 8'd255 || as1[22:0] == 23'd0 || as1[22]) &&
	     (bs1[30:23] != 8'd255 || bs1[22:0] == 23'd0 || bs1[22]) &&
	     (as1[30:23] != 8'd255 || !as1[22]) &&
	     (bs1[30:23] != 8'd255 || !bs1[22]) &&
	     NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_NO_ETC___d980 ;
  assign NOT_as1_07_BIT_31_349_EQ_bs1_17_BIT_31_350_354___d1355 =
	     as1[31] != bs1[31] ;
  assign NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390 =
	     (cs1[30:23] != 8'd255 || cs1[22:0] == 23'd0 || cs1[22]) &&
	     (x__h57448 != 8'd255 || !x__h67586[22]) &&
	     (cs1[30:23] != 8'd255 || !cs1[22]) &&
	     (x__h57448 != 8'd255 || x__h67586 != 23'd0) &&
	     (cs1[30:23] != 8'd255 || cs1[22:0] != 23'd0) ;
  assign _0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30_TO__ETC___d1211 =
	     ({ 3'd0,
		IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1208 } ^
	      9'h100) <=
	     (IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1210 ^
	      9'h100) ;
  assign _0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_ETC___d1572 =
	     ({ 4'd0,
		IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1569 } ^
	      9'h100) <=
	     (IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1571 ^
	      9'h100) ;
  assign _0b0_CONCAT_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_ETC___d1431 =
	     opB__h57402 >> diff__h57406 ;
  assign _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d664 =
	     mult_mant_s7__h1017 <= shiftedmantissa__h1019 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[5:2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[4:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150 =
	     x__h3832 & y__h3710 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153 =
	     x__h9989 | y__h9990 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[3:0] &
	     b__h11939 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174 =
	     x__h12564 | y__h12565 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20 =
	     x__h3832 & y__h7738 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207 =
	     spliced_bits__h9291[3:1] & spliced_bits__h11861[3:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211 =
	     spliced_bits__h9291[3:1] ^ spliced_bits__h11861[3:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229 =
	     { x__h8339 | y__h8340,
	       x__h16311 | y__h16312,
	       x__h16104 | y__h16105 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[7:4] &
	     mac_rg_A[6:3] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244 =
	     x__h16004 ^ cin__h15955 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264 =
	     x__h15897 | y__h15898 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267 =
	     x__h15797 ^ cin__h15748 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80 ^
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] |
	       y__h5709,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[5:2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[4:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297 =
	     x__h7245 | y__h7246 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[0] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d346 =
	     { x__h14830 | y__h14831,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] |
	       y__h14956,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d346 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350 =
	     x__h15690 | y__h15691 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356 =
	     x__h15590 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[2] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377 =
	     spliced_bits__h11520[3] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[5:2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[4:1] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39 =
	     x__h3832 & y__h5145 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425 =
	     a__h2842 & b__h2843 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448 =
	     a__h2405 & spliced_bits__h11520[2] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454 =
	     a__h2405 ^ spliced_bits__h11520[2] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479 =
	     spliced_bits__h2760[3:1] & { spliced_bits__h11520[1:0], 1'd0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483 =
	     spliced_bits__h2760[3:1] ^ { spliced_bits__h11520[1:0], 1'd0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[1:0] &
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[0],
	       1'b0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[1:0] ^
	     { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[0],
	       1'b0 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56 =
	     x__h3832 & y__h4950 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d565 =
	     { y__h19330 ^ (y__h19328 | y__h19680),
	       y__h19396 ^ cin__h19068 } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d583 =
	     { x__h18511 | y__h18512,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] |
	       y__h18637,
	       IF_y7661_OR_y7659_THEN_1_ELSE_0__q1[0] } ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[7] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[6] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63 =
	     x__h3832 & y__h5031 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73 =
	     x__h3832 & y__h4212 ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[7:6] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[6:5] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[7:6] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[6:5] ;
  assign _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90 =
	     x__h3832 & y__h3833 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d229 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d544 =
	     { x__h20594 | y__h20595,
	       _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[0] |
	       y__h20715,
	       cin__h20111 } ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d545 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232 ^
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d544 ;
  assign _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d98 =
	     { 1'd1,
	       spliced_bits__h6488[3],
	       x__h16211 ^
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[7] } ;
  assign _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d985 =
	     10'd898 -
	     IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943 ;
  assign _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d986 =
	     (_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d985 ^
	      10'h200) <=
	     10'd512 ;
  assign _theResult_____2_fst__h21491 =
	     (IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27:26] ==
	      2'b0) ?
	       rg_mant_s9__h22132 :
	       _theResult_____2_fst__h28778 ;
  assign _theResult_____2_fst__h28778 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27] ?
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[26:0] :
	       rg_mant_s9__h28835 ;
  assign _theResult_____2_snd_fst__h21493 =
	     (IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27:26] ==
	      2'b0) ?
	       exponent__h22130 :
	       _theResult_____2_snd_fst__h28780 ;
  assign _theResult_____2_snd_fst__h28780 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27] ?
	       exponent__h28786 :
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[30:23] ;
  assign _theResult_____2_snd_snd_snd_fst__h21483 =
	     rg_mult_s5__h1004[30:23] != 8'd255 &&
	     rg_C_s5__h1005[30:23] != 8'd255 &&
	     ((IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27:26] ==
	       2'b0) ?
		mantissa_a__h22131[3] :
		_theResult_____2_snd_snd_snd_fst__h28784) ;
  assign _theResult_____2_snd_snd_snd_fst__h28784 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27] ?
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[4] :
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[3] ;
  assign _theResult_____2_snd_snd_snd_snd_fst__h28891 =
	     rg_mult_s5__h1004[30:23] != 8'd255 &&
	     rg_C_s5__h1005[30:23] != 8'd255 &&
	     ((IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27:26] ==
	       2'b0) ?
		mantissa_a__h22131[2] :
		_theResult_____2_snd_snd_snd_snd_fst__h28918) ;
  assign _theResult_____2_snd_snd_snd_snd_fst__h28918 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27] ?
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[3] :
	       IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[2] ;
  assign _theResult_____2_snd_snd_snd_snd_snd_fst__h28963 =
	     rg_mult_s5__h1004[30:23] != 8'd255 &&
	     rg_C_s5__h1005[30:23] != 8'd255 &&
	     ((IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27:26] ==
	       2'b0) ?
		sticky_bit_s9__h22135 :
		_theResult_____2_snd_snd_snd_snd_snd_fst__h29011) ;
  assign _theResult_____2_snd_snd_snd_snd_snd_fst__h29011 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[27] ?
	       sticky_bit_s9__h28790 :
	       sticky_bit_s9__h28838 ;
  assign _theResult_____3_fst__h21378 =
	     (rg_mult_s5__h1004[30:23] != 8'd0 ||
	      rg_C_s5__h1005[30:23] != 8'd0) ?
	       rg_mult_s5__h1004 :
	       rg_mult_s6__h21629 ;
  assign _theResult_____3_snd_fst__h21380 =
	     (rg_mult_s5__h1004[30:23] != 8'd0 ||
	      rg_C_s5__h1005[30:23] != 8'd0) ?
	       rg_C_s5__h1005 :
	       rg_C_s6__h21630 ;
  assign _theResult___exp__h67529 =
	     sfd__h67057[24] ?
	       ((_theResult___snd_fst_exp__h66956 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h67565) :
	       IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1266 ;
  assign _theResult___exp__h79180 =
	     sfd__h78728[24] ?
	       ((_theResult___snd_fst_exp__h78627 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h79248) :
	       IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1631 ;
  assign _theResult___fst_exp__h39511 =
	     (din_exp__h39401 == 8'd0) ? 8'd2 : din_exp__h39401 + 8'd1 ;
  assign _theResult___fst_exp__h39526 =
	     (din_exp__h39401 == 8'd0) ? 8'd1 : din_exp__h39401 ;
  assign _theResult___fst_exp__h66947 =
	     sfdres__h58548[47] ?
	       _theResult___fst_exp__h39511 :
	       _theResult___fst_exp__h67038 ;
  assign _theResult___fst_exp__h66950 =
	     (sfdres__h58548[47] &&
	      IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h66947 ;
  assign _theResult___fst_exp__h67029 =
	     din_exp__h39401 -
	     { 2'd0,
	       IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1208 } ;
  assign _theResult___fst_exp__h67035 =
	     (!sfdres__h58548[47] && !sfdres__h58548[46] &&
	      !sfdres__h58548[45] &&
	      !sfdres__h58548[44] &&
	      !sfdres__h58548[43] &&
	      !sfdres__h58548[42] &&
	      !sfdres__h58548[41] &&
	      !sfdres__h58548[40] &&
	      !sfdres__h58548[39] &&
	      !sfdres__h58548[38] &&
	      !sfdres__h58548[37] &&
	      !sfdres__h58548[36] &&
	      !sfdres__h58548[35] &&
	      !sfdres__h58548[34] &&
	      !sfdres__h58548[33] &&
	      !sfdres__h58548[32] &&
	      !sfdres__h58548[31] &&
	      !sfdres__h58548[30] &&
	      !sfdres__h58548[29] &&
	      !sfdres__h58548[28] &&
	      !sfdres__h58548[27] &&
	      !sfdres__h58548[26] &&
	      !sfdres__h58548[25] &&
	      !sfdres__h58548[24] &&
	      !sfdres__h58548[23] &&
	      !sfdres__h58548[22] &&
	      !sfdres__h58548[21] &&
	      !sfdres__h58548[20] &&
	      !sfdres__h58548[19] &&
	      !sfdres__h58548[18] &&
	      !sfdres__h58548[17] &&
	      !sfdres__h58548[16] &&
	      !sfdres__h58548[15] &&
	      !sfdres__h58548[14] &&
	      !sfdres__h58548[13] &&
	      !sfdres__h58548[12] &&
	      !sfdres__h58548[11] &&
	      !sfdres__h58548[10] &&
	      !sfdres__h58548[9] &&
	      !sfdres__h58548[8] &&
	      !sfdres__h58548[7] &&
	      !sfdres__h58548[6] &&
	      !sfdres__h58548[5] &&
	      !sfdres__h58548[4] &&
	      !sfdres__h58548[3] &&
	      !sfdres__h58548[2] &&
	      !sfdres__h58548[1] &&
	      !sfdres__h58548[0] ||
	      !_0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30_TO__ETC___d1211) ?
	       8'd0 :
	       _theResult___fst_exp__h67029 ;
  assign _theResult___fst_exp__h67038 =
	     (!sfdres__h58548[47] && sfdres__h58548[46]) ?
	       _theResult___fst_exp__h39526 :
	       _theResult___fst_exp__h67035 ;
  assign _theResult___fst_exp__h67548 =
	     (_theResult___snd_fst_exp__h66956 == 8'd255 ||
	      guard__h58867 == 2'b0 ||
	      guard__h58867 == 2'b01) ?
	       _theResult___snd_fst_exp__h66956 :
	       CASE_guard8867_0b10_out_exp7532_0b11_theResult_ETC__q8 ;
  assign _theResult___fst_exp__h78618 =
	     sfdin__h73634[27] ?
	       _theResult___fst_exp__h78646 :
	       _theResult___fst_exp__h78709 ;
  assign _theResult___fst_exp__h78621 =
	     (sfdin__h73634[27] &&
	      IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h78618 ;
  assign _theResult___fst_exp__h78646 =
	     (din_exp__h78564 == 8'd0) ? 8'd2 : din_exp__h78564 + 8'd1 ;
  assign _theResult___fst_exp__h78661 =
	     (din_exp__h78564 == 8'd0) ? 8'd1 : din_exp__h78564 ;
  assign _theResult___fst_exp__h78700 =
	     din_exp__h78564 -
	     { 3'd0,
	       IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1569 } ;
  assign _theResult___fst_exp__h78706 =
	     (!sfdin__h73634[27] && !sfdin__h73634[26] &&
	      !sfdin__h73634[25] &&
	      !sfdin__h73634[24] &&
	      !sfdin__h73634[23] &&
	      !sfdin__h73634[22] &&
	      !sfdin__h73634[21] &&
	      !sfdin__h73634[20] &&
	      !sfdin__h73634[19] &&
	      !sfdin__h73634[18] &&
	      !sfdin__h73634[17] &&
	      !sfdin__h73634[16] &&
	      !sfdin__h73634[15] &&
	      !sfdin__h73634[14] &&
	      !sfdin__h73634[13] &&
	      !sfdin__h73634[12] &&
	      !sfdin__h73634[11] &&
	      !sfdin__h73634[10] &&
	      !sfdin__h73634[9] &&
	      !sfdin__h73634[8] &&
	      !sfdin__h73634[7] &&
	      !sfdin__h73634[6] &&
	      !sfdin__h73634[5] &&
	      !sfdin__h73634[4] &&
	      !sfdin__h73634[3] &&
	      !sfdin__h73634[2] &&
	      !sfdin__h73634[1] &&
	      !sfdin__h73634[0] ||
	      !_0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_ETC___d1572) ?
	       8'd0 :
	       _theResult___fst_exp__h78700 ;
  assign _theResult___fst_exp__h78709 =
	     (!sfdin__h73634[27] && sfdin__h73634[26]) ?
	       _theResult___fst_exp__h78661 :
	       _theResult___fst_exp__h78706 ;
  assign _theResult___fst_exp__h79199 =
	     (_theResult___snd_fst_exp__h78627 == 8'd255 ||
	      guard__h73621 == 2'b0 ||
	      guard__h73621 == 2'b01) ?
	       _theResult___snd_fst_exp__h78627 :
	       CASE_guard3621_0b10_out_exp9183_0b11_theResult_ETC__q15 ;
  assign _theResult___fst_sfd__h66951 =
	     (sfdres__h58548[47] &&
	      IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 ==
	      9'd127) ?
	       23'd8388607 :
	       sfdin__h66941[47:25] ;
  assign _theResult___fst_sfd__h67549 =
	     (_theResult___snd_fst_exp__h66956 == 8'd255 ||
	      guard__h58867 == 2'b0 ||
	      guard__h58867 == 2'b01) ?
	       _theResult___snd_fst_sfd__h66957 :
	       CASE_guard8867_0b10_out_sfd7533_0b11_theResult_ETC__q7 ;
  assign _theResult___fst_sfd__h78622 =
	     (sfdin__h73634[27] &&
	      IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 ==
	      9'd127) ?
	       23'd8388607 :
	       sfdin__h78612[27:5] ;
  assign _theResult___fst_sfd__h79200 =
	     (_theResult___snd_fst_exp__h78627 == 8'd255 ||
	      guard__h73621 == 2'b0 ||
	      guard__h73621 == 2'b01) ?
	       _theResult___snd_fst_sfd__h78628 :
	       CASE_guard3621_0b10_out_sfd9184_0b11_theResult_ETC__q14 ;
  assign _theResult___sfd__h67530 =
	     sfd__h67057[24] ?
	       ((_theResult___snd_fst_exp__h66956 == 8'd254) ?
		  23'd0 :
		  sfd__h67057[23:1]) :
	       sfd__h67057[22:0] ;
  assign _theResult___sfd__h79181 =
	     sfd__h78728[24] ?
	       ((_theResult___snd_fst_exp__h78627 == 8'd254) ?
		  23'd0 :
		  sfd__h78728[23:1]) :
	       sfd__h78728[22:0] ;
  assign _theResult___snd__h59411 =
	     { NOT_as1_07_BITS_30_TO_23_08_EQ_0_32_72_CONCAT__ETC___d992[47:1],
	       NOT_as1_07_BITS_30_TO_23_08_EQ_0_32_72_CONCAT__ETC___d992[0] |
	       sfdlsb__h59408 } ;
  assign _theResult___snd__h66970 = { sfdres__h58548[46:0], 1'd0 } ;
  assign _theResult___snd__h66984 =
	     (!sfdres__h58548[47] && sfdres__h58548[46]) ?
	       _theResult___snd__h66986 :
	       _theResult___snd__h66998 ;
  assign _theResult___snd__h66986 = { sfdres__h58548[45:0], 2'd0 } ;
  assign _theResult___snd__h66998 =
	     (!sfdres__h58548[47] && !sfdres__h58548[46] &&
	      !sfdres__h58548[45] &&
	      !sfdres__h58548[44] &&
	      !sfdres__h58548[43] &&
	      !sfdres__h58548[42] &&
	      !sfdres__h58548[41] &&
	      !sfdres__h58548[40] &&
	      !sfdres__h58548[39] &&
	      !sfdres__h58548[38] &&
	      !sfdres__h58548[37] &&
	      !sfdres__h58548[36] &&
	      !sfdres__h58548[35] &&
	      !sfdres__h58548[34] &&
	      !sfdres__h58548[33] &&
	      !sfdres__h58548[32] &&
	      !sfdres__h58548[31] &&
	      !sfdres__h58548[30] &&
	      !sfdres__h58548[29] &&
	      !sfdres__h58548[28] &&
	      !sfdres__h58548[27] &&
	      !sfdres__h58548[26] &&
	      !sfdres__h58548[25] &&
	      !sfdres__h58548[24] &&
	      !sfdres__h58548[23] &&
	      !sfdres__h58548[22] &&
	      !sfdres__h58548[21] &&
	      !sfdres__h58548[20] &&
	      !sfdres__h58548[19] &&
	      !sfdres__h58548[18] &&
	      !sfdres__h58548[17] &&
	      !sfdres__h58548[16] &&
	      !sfdres__h58548[15] &&
	      !sfdres__h58548[14] &&
	      !sfdres__h58548[13] &&
	      !sfdres__h58548[12] &&
	      !sfdres__h58548[11] &&
	      !sfdres__h58548[10] &&
	      !sfdres__h58548[9] &&
	      !sfdres__h58548[8] &&
	      !sfdres__h58548[7] &&
	      !sfdres__h58548[6] &&
	      !sfdres__h58548[5] &&
	      !sfdres__h58548[4] &&
	      !sfdres__h58548[3] &&
	      !sfdres__h58548[2] &&
	      !sfdres__h58548[1] &&
	      !sfdres__h58548[0]) ?
	       sfdres__h58548 :
	       _theResult___snd__h67004 ;
  assign _theResult___snd__h67004 =
	     { IF_0_CONCAT_IF_IF_898_MINUS_IF_as1_07_BITS_30__ETC__q5[45:0],
	       2'd0 } ;
  assign _theResult___snd__h67022 =
	     sfdres__h58548 <<
	     IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1210 ;
  assign _theResult___snd__h67027 =
	     sfdres__h58548 <<
	     IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1208 ;
  assign _theResult___snd__h78641 = { sfdin__h73634[26:0], 1'd0 } ;
  assign _theResult___snd__h78655 =
	     (!sfdin__h73634[27] && sfdin__h73634[26]) ?
	       _theResult___snd__h78657 :
	       _theResult___snd__h78669 ;
  assign _theResult___snd__h78657 = { sfdin__h73634[25:0], 2'd0 } ;
  assign _theResult___snd__h78669 =
	     (!sfdin__h73634[27] && !sfdin__h73634[26] &&
	      !sfdin__h73634[25] &&
	      !sfdin__h73634[24] &&
	      !sfdin__h73634[23] &&
	      !sfdin__h73634[22] &&
	      !sfdin__h73634[21] &&
	      !sfdin__h73634[20] &&
	      !sfdin__h73634[19] &&
	      !sfdin__h73634[18] &&
	      !sfdin__h73634[17] &&
	      !sfdin__h73634[16] &&
	      !sfdin__h73634[15] &&
	      !sfdin__h73634[14] &&
	      !sfdin__h73634[13] &&
	      !sfdin__h73634[12] &&
	      !sfdin__h73634[11] &&
	      !sfdin__h73634[10] &&
	      !sfdin__h73634[9] &&
	      !sfdin__h73634[8] &&
	      !sfdin__h73634[7] &&
	      !sfdin__h73634[6] &&
	      !sfdin__h73634[5] &&
	      !sfdin__h73634[4] &&
	      !sfdin__h73634[3] &&
	      !sfdin__h73634[2] &&
	      !sfdin__h73634[1] &&
	      !sfdin__h73634[0]) ?
	       sfdin__h73634 :
	       _theResult___snd__h78675 ;
  assign _theResult___snd__h78675 =
	     { IF_0_CONCAT_IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_ETC__q12[25:0],
	       2'd0 } ;
  assign _theResult___snd__h78693 =
	     sfdin__h73634 <<
	     IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1571 ;
  assign _theResult___snd__h78698 =
	     sfdin__h73634 <<
	     IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1569 ;
  assign _theResult___snd_fst__h1552 =
	     (mac_rg_A[14:7] == 8'd0 || mac_rg_B[14:7] == 8'd0) ?
	       8'd0 :
	       _theResult___snd_fst__h1554 ;
  assign _theResult___snd_fst__h1554 =
	     (mac_rg_A[14:7] == 8'd255 || mac_rg_B[14:7] == 8'd255) ?
	       8'd255 :
	       exp_add_s1__h1499 ;
  assign _theResult___snd_fst__h67095 =
	     { IF_sfdin6941_BIT_24_THEN_2_ELSE_0__q6[1],
	       { sfdin__h66941[23:0], 23'd0 } != 47'd0 } ;
  assign _theResult___snd_fst__h78751 =
	     { IF_sfdin8612_BIT_4_THEN_2_ELSE_0__q13[1],
	       { sfdin__h78612[3:0], 23'd0 } != 27'd0 } ;
  assign _theResult___snd_fst_exp__h66956 =
	     NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_as_ETC___d984 ?
	       _theResult___fst_exp__h66950 :
	       8'd0 ;
  assign _theResult___snd_fst_exp__h78627 =
	     ((x__h57448 != 8'd255 || x__h67586 == 23'd0 || x__h67586[22]) &&
	      NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390) ?
	       _theResult___fst_exp__h78621 :
	       8'd0 ;
  assign _theResult___snd_fst_sfd__h66957 =
	     NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_OR_as_ETC___d984 ?
	       _theResult___fst_sfd__h66951 :
	       23'd0 ;
  assign _theResult___snd_fst_sfd__h78628 =
	     ((x__h57448 != 8'd255 || x__h67586 == 23'd0 || x__h67586[22]) &&
	      NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390) ?
	       _theResult___fst_sfd__h78622 :
	       23'd0 ;
  assign a__h15746 = x__h5378 ^ (x__h5588 | y__h5589) ;
  assign a__h15953 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 ^
	     (x__h5338 | y__h5339) ;
  assign a__h16160 = x__h5768 | y__h5769 ;
  assign a__h2405 = x__h10710 | y__h10711 ;
  assign a__h2842 = { x__h4456 | y__h4457, spliced_bits__h3418[3:1] } ;
  assign a__h57386 =
	     { 1'b0,
	       NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		 cs1[30:23] != 8'd0 :
		 x__h57448 != 8'd0,
	       NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		 cs1[22:0] :
		 x__h67586,
	       3'b0 } ;
  assign a_temp__h21541 =
	     _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d664 ?
	       { 2'd0, shiftedmantissa__h1019 } :
	       { 3'd1,
		 IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[22:0],
		 3'b0 } ;
  assign as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953 =
	     as1[30:23] == 8'd255 && as1[22:0] != 23'd0 && !as1[22] ||
	     bs1[30:23] == 8'd255 && bs1[22:0] != 23'd0 && !bs1[22] ||
	     as1[30:23] == 8'd255 && as1[22] ||
	     bs1[30:23] == 8'd255 && bs1[22] ||
	     as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_07_B_ETC___d949 ;
  assign as1_07_BITS_30_TO_23_08_EQ_255_09_AND_as1_07_B_ETC___d949 =
	     as1[30:23] == 8'd255 && as1[22:0] == 23'd0 ||
	     bs1[30:23] == 8'd255 && bs1[22:0] == 23'd0 ||
	     as1[30:23] == 8'd0 && as1[22:0] == 23'd0 ||
	     bs1[30:23] == 8'd0 && bs1[22:0] == 23'd0 ||
	     !IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d944 ||
	     IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d946 ;
  assign as1_BITS_30_TO_23_MINUS_127__q2 = as1[30:23] - 8'd127 ;
  assign b__h11939 =
	     { mac_rg_A[2:0],
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[5] } ;
  assign b__h15540 = x__h13501 | y__h13502 ;
  assign b__h2843 =
	     { spliced_bits__h6547[2:0],
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[1] } ;
  assign b__h57388 =
	     ((x__h57448 != 8'd255 || x__h67586 == 23'd0 || x__h67586[22]) &&
	      NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390) ?
	       IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1442 :
	       opB__h57402 ;
  assign b_temp__h21542 =
	     _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d664 ?
	       { 3'd1,
		 IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[22:0],
		 3'b0 } :
	       { 2'd0, shiftedmantissa__h1019 } ;
  assign bs1_BITS_30_TO_23_MINUS_127__q3 = bs1[30:23] - 8'd127 ;
  assign c_mant_s7__h1018 =
	     { IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d657[22:0],
	       3'b0 } ;
  assign carrrg_b__h11610 =
	     { x__h13101 | y__h13102,
	       y__h13140 | y__h13324,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334,
	       1'b0 } ;
  assign carrrg_b__h11951 =
	     { x__h12150 | y__h12151,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[1] |
	       y__h12380,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0],
	       1'b0 } ;
  assign carrrg_b__h2855 =
	     { x__h8941 | y__h8942,
	       x__h10525 | y__h10526,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] |
	       y__h10651,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] } ;
  assign carrrg_b__h3513 =
	     { x__h3961 | y__h3962,
	       x__h4271 | y__h4272,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] |
	       y__h4397,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] } ;
  assign carrrg_b__h6637 =
	     { x__h6802 | y__h6803,
	       x__h7060 | y__h7061,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] |
	       y__h7186,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] } ;
  assign carrrg_b__h7679 =
	     { x__h7896 | y__h7897,
	       x__h8154 | y__h8155,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] |
	       y__h8280,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] } ;
  assign carrrg_b__h9381 =
	     { x__h9546 | y__h9547,
	       x__h9804 | y__h9805,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] |
	       y__h9930,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] } ;
  assign cin__h15748 = x__h15045 ^ (x__h14572 | y__h14573) ;
  assign cin__h15955 = x__h15015 | y__h15016 ;
  assign cin__h19068 = x__h18696 | y__h18697 ;
  assign cin__h20111 = x__h19739 | y__h19740 ;
  assign cs1_302_BITS_30_TO_23_303_EQ_255_304_AND_NOT_c_ETC___d1319 =
	     cs1[30:23] == 8'd255 && cs1[22:0] != 23'd0 && !cs1[22] ||
	     x__h57448 == 8'd255 && x__h67586[22] ||
	     cs1[30:23] == 8'd255 && cs1[22] ||
	     x__h57448 == 8'd255 && x__h67586 == 23'd0 ||
	     cs1[30:23] == 8'd255 && cs1[22:0] == 23'd0 ;
  assign cs1_302_BIT_31_367_EQ_IF_as1_07_BITS_30_TO_23__ETC___d1413 =
	     cs1[31] ==
	     IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1366 ;
  assign cs1_BITS_30_TO_23_MINUS_127__q9 = cs1[30:23] - 8'd127 ;
  assign diff__h57406 =
	     NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
	       x__h74217[7:0] :
	       x__h74221[7:0] ;
  assign din_exp8564_MINUS_127__q11 = din_exp__h78564 - 8'd127 ;
  assign din_exp9401_MINUS_127__q4 = din_exp__h39401 - 8'd127 ;
  assign din_exp__h39401 =
	     _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d986 ?
	       value__h39418[7:0] :
	       8'd0 ;
  assign din_exp__h78564 =
	     NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
	       cs1[30:23] :
	       x__h57448 ;
  assign din_inc___2_exp__h67565 = _theResult___snd_fst_exp__h66956 + 8'd1 ;
  assign din_inc___2_exp__h79248 = _theResult___snd_fst_exp__h78627 + 8'd1 ;
  assign e__h21097 = x__h21122 - 8'd127 ;
  assign e__h24705 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[0] ?
	       2'b01 :
	       2'b10 ;
  assign e__h24846 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[2] ?
	       2'b01 :
	       2'b10 ;
  assign e__h24987 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[4] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25128 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[6] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25269 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[8] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25410 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[10] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25551 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[12] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25692 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[14] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25833 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[16] ?
	       2'b01 :
	       2'b10 ;
  assign e__h25974 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[18] ?
	       2'b01 :
	       2'b10 ;
  assign e__h26115 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[20] ?
	       2'b01 :
	       2'b10 ;
  assign e__h26256 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[22] ?
	       2'b01 :
	       2'b10 ;
  assign e__h26396 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[24] ?
	       2'b01 :
	       2'b10 ;
  assign exp___1__h21091 = exp__h1585 + 8'd1 ;
  assign exp__h1585 =
	     (mac_rg_A[14:7] == 8'd255 && mac_rg_B[14:7] == 8'd0 ||
	      mac_rg_A[14:7] == 8'd0 && mac_rg_B[14:7] == 8'd255) ?
	       8'd255 :
	       _theResult___snd_fst__h1552 ;
  assign exp__h1587 =
	     spliced_bits_BIT_3___h21085 ? exp___1__h21091 : exp__h1585 ;
  assign exp_add_s1__h1499 =
	     (e__h21097 > 8'd1 && e__h21097 < 8'd254) ? e__h21097 : 8'd0 ;
  assign exp_diff_s6__h21376 =
	     rg_mult_s5__h1004[30:23] - rg_C_s5__h1005[30:23] ;
  assign exponent__h22130 =
	     IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[30:23] -
	     op2__h29169 ;
  assign exponent__h28786 =
	     IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[30:23] +
	     8'd1 ;
  assign grs__h1040 =
	     { _theResult_____2_snd_snd_snd_fst__h21483,
	       _theResult_____2_snd_snd_snd_snd_fst__h28891,
	       _theResult_____2_snd_snd_snd_snd_snd_fst__h28963 } ;
  assign guard__h58867 =
	     (sfdres__h58548[47] &&
	      IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1011 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h67095 ;
  assign guard__h73587 =
	     (sfdin__h73634[27] &&
	      IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_39_ETC___d1452 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h78751 ;
  assign guard__h73621 =
	     ((x__h57448 != 8'd255 || x__h67586 == 23'd0 || x__h67586[22]) &&
	      NOT_cs1_302_BITS_30_TO_23_303_EQ_255_304_380_O_ETC___d1390) ?
	       guard__h73587 :
	       2'd0 ;
  assign guard__h74224 = opB__h57402 << x__h74281 ;
  assign leftshift_count__h22129 = out__h22200 + 5'd1 ;
  assign mant_1__h1588 =
	     spliced_bits_BIT_3___h21085 ? mant_1__h21092 : mant_1__h21235 ;
  assign mant_1__h21092 =
	     { _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d545,
	       spliced_bits__h1747,
	       spliced_bits__h1777,
	       spliced_bits__h1807,
	       8'd0 } ;
  assign mant_1__h21235 =
	     { _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d545[1:0],
	       spliced_bits__h1747,
	       spliced_bits__h1777,
	       spliced_bits__h1807,
	       9'd0 } ;
  assign mantissa__h1589 = (exp__h1587 == 8'd255) ? 23'd0 : mant_1__h1588 ;
  assign mantissa_a__h22131 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[25:0] <<
	     leftshift_count__h22129 ;
  assign mul_result__h1003 =
	     { sign_s1__h1498,
	       IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d614 } ;
  assign mult_mant_s7__h1017 =
	     { 1'b1,
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[22:0],
	       3'b0 } ;
  assign op2__h29169 = { 3'd0, leftshift_count__h22129 } ;
  assign opAsfd__h57494 = { as1[30:23] != 8'd0, as1[22:0] } ;
  assign opB__h57402 =
	     { 1'b0,
	       IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_T_ETC___d1429 } ;
  assign opBsfd__h57495 = { bs1[30:23] != 8'd0, bs1[22:0] } ;
  assign out__h22200 =
	     (IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d773[4] &
	      spliced_bits__h22248[4]) ?
	       5'b0 :
	       ((~IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d773[4]) ?
		  IF_IF_IF_IF_IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS__ETC___d773 :
		  { 1'b1, spliced_bits__h22248[3:0] }) ;
  assign out_exp__h67532 =
	     _theResult___snd_fst_sfd__h66957[0] ?
	       _theResult___exp__h67529 :
	       _theResult___snd_fst_exp__h66956 ;
  assign out_exp__h79183 =
	     _theResult___snd_fst_sfd__h78628[0] ?
	       _theResult___exp__h79180 :
	       _theResult___snd_fst_exp__h78627 ;
  assign out_sfd__h67533 =
	     _theResult___snd_fst_sfd__h66957[0] ?
	       _theResult___sfd__h67530 :
	       _theResult___snd_fst_sfd__h66957 ;
  assign out_sfd__h79184 =
	     _theResult___snd_fst_sfd__h78628[0] ?
	       _theResult___sfd__h79181 :
	       _theResult___snd_fst_sfd__h78628 ;
  assign p__h11606 =
	     { x__h13528,
	       x__h13139,
	       y__h13184,
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[1] ^
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[0] } ;
  assign p__h11947 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[3:0] ^
	     b__h11939 ;
  assign p__h2851 = a__h2842 ^ b__h2843 ;
  assign p__h3509 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[5:2] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[4:1] ;
  assign p__h6633 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[5:2] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[4:1] ;
  assign p__h7675 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d20[7:4] ^
	     mac_rg_A[6:3] ;
  assign p__h9377 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[5:2] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[4:1] ;
  assign result__h74212 = a__h57386 - b__h57388 ;
  assign result__h74229 =
	     { _0b0_CONCAT_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_ETC___d1431[27:1],
	       _0b0_CONCAT_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_ETC___d1431[0] |
	       guard__h74224 != 28'd0 } ;
  assign result__h74341 = a__h57386 + b__h57388 ;
  assign rg_C_s5__h1005 =
	     IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d618 ?
	       mul_result__h1003 :
	       mac_rg_C ;
  assign rg_C_s6__h21383 =
	     { rg_C_s5__h1005[31],
	       (rg_C_s5__h1005[22:0] == 23'd0) ?
		 31'h7F800000 :
		 { 8'd255, rg_C_s5__h1005[22:0] } } ;
  assign rg_C_s6__h21630 = { rg_C_s5__h1005[31], 31'd0 } ;
  assign rg_exponent_s9__h1035 =
	     (rg_mult_s5__h1004[30:23] != 8'd255 &&
	      rg_C_s5__h1005[30:23] != 8'd255) ?
	       _theResult_____2_snd_fst__h21493 :
	       8'd255 ;
  assign rg_mant_s9__h22132 = { mantissa_a__h22131, 1'b0 } ;
  assign rg_mant_s9__h28835 =
	     { IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[25:0],
	       1'b0 } ;
  assign rg_mult_s5__h1004 =
	     IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AND_NOT_mac__ETC___d618 ?
	       mac_rg_C :
	       mul_result__h1003 ;
  assign rg_mult_s6__h21382 =
	     { rg_mult_s5__h1004[31],
	       (rg_mult_s5__h1004[22:0] == 23'd0) ?
		 31'h7F800000 :
		 { 8'd255, rg_mult_s5__h1004[22:0] } } ;
  assign rg_mult_s6__h21629 = { rg_mult_s5__h1004[31], 31'd0 } ;
  assign rg_sign_s9__h1037 =
	     _0b1_CONCAT_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_T_ETC___d664 ?
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d657[31] :
	       IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d645[31] ;
  assign sfdA__h57420 = { 1'b0, x__h57448 != 8'd0, x__h67586, 3'b0 } ;
  assign sfdB__h57421 = { 1'b0, cs1[30:23] != 8'd0, cs1[22:0], 3'b0 } ;
  assign sfd__h31102 = { 1'd1, as1[21:0] } ;
  assign sfd__h31105 = { 1'd1, bs1[21:0] } ;
  assign sfd__h46160 = { 1'd1, cs1[21:0] } ;
  assign sfd__h67057 =
	     { 1'b0,
	       _theResult___snd_fst_exp__h66956 != 8'd0,
	       _theResult___snd_fst_sfd__h66957 } +
	     25'd1 ;
  assign sfd__h73605 = { 1'd1, x__h67586[21:0] } ;
  assign sfd__h78728 =
	     { 1'b0,
	       _theResult___snd_fst_exp__h78627 != 8'd0,
	       _theResult___snd_fst_sfd__h78628 } +
	     25'd1 ;
  assign sfdin__h66941 =
	     sfdres__h58548[47] ?
	       _theResult___snd__h66970 :
	       _theResult___snd__h66984 ;
  assign sfdin__h73634 =
	     (NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_ETC___d1412 ?
		!cs1_302_BIT_31_367_EQ_IF_as1_07_BITS_30_TO_23__ETC___d1413 :
		!IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1368) ?
	       result__h74212 :
	       result__h74341 ;
  assign sfdin__h78612 =
	     sfdin__h73634[27] ?
	       _theResult___snd__h78641 :
	       _theResult___snd__h78655 ;
  assign sfdlsb__h59408 = x__h59493 != 48'd0 ;
  assign sfdres__h57464 = opAsfd__h57494 * opBsfd__h57495 ;
  assign sfdres__h58548 =
	     _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d986 ?
	       sfdres__h57464 :
	       _theResult___snd__h59411 ;
  assign shift_count__h1016 =
	     (rg_mult_s5__h1004[30:23] != 8'd255 &&
	      rg_C_s5__h1005[30:23] != 8'd255) ?
	       exp_diff_s6__h21376 :
	       8'd255 ;
  assign shiftedmantissa__h1019 = x__h21748 >> shift_count__h1016 ;
  assign sign_s1__h1498 = mac_rg_A[15] ^ mac_rg_B[15] ;
  assign spliced_bits_BIT_3___h21085 = x__h20291 | y__h20292 ;
  assign spliced_bits__h11520 = p__h11606 ^ carrrg_b__h11610 ;
  assign spliced_bits__h11861 = p__h11947 ^ carrrg_b__h11951 ;
  assign spliced_bits__h1747 =
	     { x__h19769 ^ (x__h19244 | y__h19245),
	       x__h19283 ^ (x__h19554 | y__h19555),
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d565 } ;
  assign spliced_bits__h1777 =
	     { x__h18726 ^ (x__h18203 | y__h18204),
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483 ^
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d583 } ;
  assign spliced_bits__h1807 =
	     { spliced_bits__h2760[0] ^ (x__h17244 | y__h17245),
	       spliced_bits__h3418[0] ^
	       (_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[1] |
		y__h17474),
	       _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505 ^
	       { _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0],
		 1'b0 } } ;
  assign spliced_bits__h22248 =
	     (spliced_bits__h22401[3] & spliced_bits__h22371[3]) ?
	       5'b10000 :
	       ((~spliced_bits__h22401[3]) ?
		  { 1'b0, spliced_bits__h22401 } :
		  { 2'b01, spliced_bits__h22371[2:0] }) ;
  assign spliced_bits__h22371 =
	     spliced_bits__h22584[2] ?
	       4'b1000 :
	       ((~spliced_bits__h22584[2]) ?
		  { 1'b0, spliced_bits__h22584 } :
		  4'd4) ;
  assign spliced_bits__h22401 =
	     (spliced_bits__h22644[2] & spliced_bits__h22614[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h22644[2]) ?
		  { 1'b0, spliced_bits__h22644 } :
		  { 2'b01, spliced_bits__h22614[1:0] }) ;
  assign spliced_bits__h22431 =
	     (spliced_bits__h22704[2] & spliced_bits__h22674[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h22704[2]) ?
		  { 1'b0, spliced_bits__h22704 } :
		  { 2'b01, spliced_bits__h22674[1:0] }) ;
  assign spliced_bits__h22460 =
	     (spliced_bits__h22763[2] & spliced_bits__h22734[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h22763[2]) ?
		  { 1'b0, spliced_bits__h22763 } :
		  { 2'b01, spliced_bits__h22734[1:0] }) ;
  assign spliced_bits__h22584 =
	     spliced_bits__h23957[1] ?
	       3'b100 :
	       ((~spliced_bits__h23957[1]) ?
		  { 1'b0, spliced_bits__h23957 } :
		  3'd2) ;
  assign spliced_bits__h22614 =
	     (spliced_bits__h23819[1] & spliced_bits__h23888[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23819[1]) ?
		  { 1'b0, spliced_bits__h23819 } :
		  { 2'b01, spliced_bits__h23888[0] }) ;
  assign spliced_bits__h22644 =
	     (spliced_bits__h23681[1] & spliced_bits__h23750[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23681[1]) ?
		  { 1'b0, spliced_bits__h23681 } :
		  { 2'b01, spliced_bits__h23750[0] }) ;
  assign spliced_bits__h22674 =
	     (spliced_bits__h23543[1] & spliced_bits__h23612[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23543[1]) ?
		  { 1'b0, spliced_bits__h23543 } :
		  { 2'b01, spliced_bits__h23612[0] }) ;
  assign spliced_bits__h22704 =
	     (spliced_bits__h23405[1] & spliced_bits__h23474[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23405[1]) ?
		  { 1'b0, spliced_bits__h23405 } :
		  { 2'b01, spliced_bits__h23474[0] }) ;
  assign spliced_bits__h22734 =
	     (spliced_bits__h23267[1] & spliced_bits__h23336[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23267[1]) ?
		  { 1'b0, spliced_bits__h23267 } :
		  { 2'b01, spliced_bits__h23336[0] }) ;
  assign spliced_bits__h22763 =
	     (spliced_bits__h23129[1] & spliced_bits__h23198[1]) ?
	       3'b100 :
	       ((~spliced_bits__h23129[1]) ?
		  { 1'b0, spliced_bits__h23129 } :
		  { 2'b01, spliced_bits__h23198[0] }) ;
  assign spliced_bits__h23129 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[25] ?
	       2'b0 :
	       e__h26396 ;
  assign spliced_bits__h23198 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[23] ?
	       2'b0 :
	       e__h26256 ;
  assign spliced_bits__h23267 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[21] ?
	       2'b0 :
	       e__h26115 ;
  assign spliced_bits__h23336 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[19] ?
	       2'b0 :
	       e__h25974 ;
  assign spliced_bits__h23405 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[17] ?
	       2'b0 :
	       e__h25833 ;
  assign spliced_bits__h23474 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[15] ?
	       2'b0 :
	       e__h25692 ;
  assign spliced_bits__h23543 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[13] ?
	       2'b0 :
	       e__h25551 ;
  assign spliced_bits__h23612 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[11] ?
	       2'b0 :
	       e__h25410 ;
  assign spliced_bits__h23681 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[9] ?
	       2'b0 :
	       e__h25269 ;
  assign spliced_bits__h23750 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[7] ?
	       2'b0 :
	       e__h25128 ;
  assign spliced_bits__h23819 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[5] ?
	       2'b0 :
	       e__h24987 ;
  assign spliced_bits__h23888 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[3] ?
	       2'b0 :
	       e__h24846 ;
  assign spliced_bits__h23957 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[1] ?
	       2'b0 :
	       e__h24705 ;
  assign spliced_bits__h2760 = p__h2851 ^ carrrg_b__h2855 ;
  assign spliced_bits__h3418 = p__h3509 ^ carrrg_b__h3513 ;
  assign spliced_bits__h6488 = p__h7675 ^ carrrg_b__h7679 ;
  assign spliced_bits__h6547 = p__h6633 ^ carrrg_b__h6637 ;
  assign spliced_bits__h9291 = p__h9377 ^ carrrg_b__h9381 ;
  assign sticky_bit_s9__h22135 =
	     mantissa_a__h22131[1] | mantissa_a__h22131[0] ;
  assign sticky_bit_s9__h28790 =
	     x__h29025 |
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[0] ;
  assign sticky_bit_s9__h28838 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[1] |
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[0] ;
  assign value__h39418 =
	     IF_as1_07_BITS_30_TO_23_08_EQ_0_32_THEN_898_EL_ETC___d943 +
	     10'd127 ;
  assign x7448_MINUS_127__q10 = x__h57448 - 8'd127 ;
  assign x__h10063 = p__h9377[3] & p__h9377[2] ;
  assign x__h10130 = x__h10063 & p__h9377[1] ;
  assign x__h10220 = x__h10130 & p__h9377[0] ;
  assign x__h10525 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[1] |
	     y__h10528 ;
  assign x__h10595 = p__h2851[1] & p__h2851[0] ;
  assign x__h10710 = x__h10712 | y__h10713 ;
  assign x__h10712 = x__h10714 | y__h10715 ;
  assign x__h10714 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[3] |
	     y__h10717 ;
  assign x__h10784 = p__h2851[3] & p__h2851[2] ;
  assign x__h10851 = x__h10784 & p__h2851[1] ;
  assign x__h10941 = x__h10851 & p__h2851[0] ;
  assign x__h12150 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[2] |
	     y__h12153 ;
  assign x__h12231 = p__h11947[2] & p__h11947[1] ;
  assign x__h12564 = x__h12566 | y__h12567 ;
  assign x__h12566 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[3] |
	     y__h12569 ;
  assign x__h12636 = p__h11947[3] & p__h11947[2] ;
  assign x__h12703 = x__h12636 & p__h11947[1] ;
  assign x__h13101 = x__h13103 | y__h13104 ;
  assign x__h13103 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[7] &
	     spliced_bits__h6547[3] ;
  assign x__h13139 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[7] ^
	     spliced_bits__h6547[3] ;
  assign x__h13181 = x__h13139 & y__h13184 ;
  assign x__h13501 = x__h13503 | y__h13504 ;
  assign x__h13503 = x__h13505 | y__h13506 ;
  assign x__h13505 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297 ;
  assign x__h13528 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[0] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d297 ;
  assign x__h13570 = x__h13528 & x__h13139 ;
  assign x__h13634 = x__h13570 & y__h13184 ;
  assign x__h14572 = x__h14574 | y__h14575 ;
  assign x__h14574 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[2] |
	     y__h14577 ;
  assign x__h14655 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] ;
  assign x__h14722 =
	     x__h14655 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] ;
  assign x__h14830 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[1] |
	     y__h14833 ;
  assign x__h14900 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] ;
  assign x__h15015 = x__h15017 | y__h15018 ;
  assign x__h15017 = x__h15019 | y__h15020 ;
  assign x__h15019 = x__h15021 | y__h15022 ;
  assign x__h15021 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174 ;
  assign x__h15045 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d153 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d174 ;
  assign x__h15089 =
	     x__h15045 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[2] ;
  assign x__h15156 =
	     x__h15089 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] ;
  assign x__h15246 =
	     x__h15156 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] ;
  assign x__h15590 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[1] ^
	     b__h15540 ;
  assign x__h15690 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d271[1] &
	     b__h15540 ;
  assign x__h15797 = a__h15746 ^ spliced_bits__h6488[0] ;
  assign x__h15897 = a__h15746 & spliced_bits__h6488[0] ;
  assign x__h16004 = a__h15953 ^ spliced_bits__h6488[1] ;
  assign x__h16104 = a__h15953 & spliced_bits__h6488[1] ;
  assign x__h16211 = a__h16160 ^ spliced_bits__h6488[2] ;
  assign x__h16311 = a__h16160 & spliced_bits__h6488[2] ;
  assign x__h17244 =
	     spliced_bits__h3418[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[1] ;
  assign x__h17325 =
	     spliced_bits__h3418[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505[1] ;
  assign x__h17730 = spliced_bits__h2760[0] & spliced_bits__h3418[0] ;
  assign x__h17797 =
	     x__h17730 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505[1] ;
  assign x__h18203 = x__h18205 | y__h18206 ;
  assign x__h18205 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[2] |
	     y__h18208 ;
  assign x__h18286 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] ;
  assign x__h18353 =
	     x__h18286 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] ;
  assign x__h18511 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[1] |
	     y__h18514 ;
  assign x__h18581 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] ;
  assign x__h18696 = x__h18698 | y__h18699 ;
  assign x__h18698 = x__h18700 | y__h18701 ;
  assign x__h18700 = x__h18702 | y__h18703 ;
  assign x__h18702 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[0] ;
  assign x__h18726 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d454 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[0] ;
  assign x__h18770 =
	     x__h18726 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[2] ;
  assign x__h18837 =
	     x__h18770 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] ;
  assign x__h18927 =
	     x__h18837 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] ;
  assign x__h19244 = x__h19246 | y__h19247 ;
  assign x__h19246 = x__h19248 | y__h19249 ;
  assign x__h19248 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350 ;
  assign x__h19283 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d267 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d350 ;
  assign x__h19327 = x__h19283 & y__h19330 ;
  assign x__h19394 = x__h19327 & y__h19396 ;
  assign x__h19554 = y__h19284 | y__h19557 ;
  assign x__h19624 = y__h19330 & y__h19396 ;
  assign x__h19739 = x__h19741 | y__h19742 ;
  assign x__h19741 = x__h19743 | y__h19744 ;
  assign x__h19743 = x__h19745 | y__h19746 ;
  assign x__h19745 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264 ;
  assign x__h19769 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d244 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d264 ;
  assign x__h19813 = x__h19769 & x__h19283 ;
  assign x__h19880 = x__h19813 & y__h19330 ;
  assign x__h19970 = x__h19880 & y__h19396 ;
  assign x__h20291 = x__h20293 | y__h20294 ;
  assign x__h20293 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[2] |
	     y__h20296 ;
  assign x__h20372 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[2] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[1] ;
  assign x__h20436 =
	     x__h20372 &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[0] ;
  assign x__h20594 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[1] |
	     y__h20597 ;
  assign x__h20661 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[1] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[0] ;
  assign x__h21122 = mac_rg_A[14:7] + mac_rg_B[14:7] ;
  assign x__h21748 = { 1'b1, c_mant_s7__h1018 } ;
  assign x__h29025 =
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[2] |
	     IF_IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_ETC___d675[1] ;
  assign x__h32062 =
	     10'd48 -
	     _898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ_0_32_T_ETC___d985 ;
  assign x__h3832 = { 1'b1, mac_rg_A[6:0] } ;
  assign x__h3961 = x__h3963 | y__h3964 ;
  assign x__h3963 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[2] |
	     y__h3966 ;
  assign x__h4044 = p__h3509[2] & p__h3509[1] ;
  assign x__h4111 = x__h4044 & p__h3509[0] ;
  assign x__h4271 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[1] |
	     y__h4274 ;
  assign x__h4341 = p__h3509[1] & p__h3509[0] ;
  assign x__h4456 = x__h4458 | y__h4459 ;
  assign x__h4458 = x__h4460 | y__h4461 ;
  assign x__h4460 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[3] |
	     y__h4463 ;
  assign x__h4530 = p__h3509[3] & p__h3509[2] ;
  assign x__h4597 = x__h4530 & p__h3509[1] ;
  assign x__h4687 = x__h4597 & p__h3509[0] ;
  assign x__h5338 = x__h5340 | y__h5341 ;
  assign x__h5340 = x__h5342 | y__h5343 ;
  assign x__h5342 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[7] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[6] ;
  assign x__h5378 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[7] ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[6] ;
  assign x__h5420 =
	     x__h5378 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] ;
  assign x__h5484 =
	     x__h5420 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] ;
  assign x__h5588 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[1] |
	     y__h5591 ;
  assign x__h5655 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] ;
  assign x__h57448 =
	     as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953 ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d960 :
	       _theResult___fst_exp__h67548 ;
  assign x__h5768 = x__h5770 | y__h5771 ;
  assign x__h5770 = x__h5772 | y__h5773 ;
  assign x__h5772 = x__h5774 | y__h5775 ;
  assign x__h5774 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[7] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[6] ;
  assign x__h5839 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 &
	     x__h5378 ;
  assign x__h5903 =
	     x__h5839 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] ;
  assign x__h59493 = sfdres__h57464 << x__h32062 ;
  assign x__h5989 =
	     x__h5903 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] ;
  assign x__h67586 =
	     as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_as1__ETC___d953 ?
	       IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NOT_a_ETC___d1286 :
	       _theResult___fst_sfd__h67549 ;
  assign x__h6802 = x__h6804 | y__h6805 ;
  assign x__h6804 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[2] |
	     y__h6807 ;
  assign x__h6885 = p__h6633[2] & p__h6633[1] ;
  assign x__h6952 = x__h6885 & p__h6633[0] ;
  assign x__h7060 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[1] |
	     y__h7063 ;
  assign x__h7130 = p__h6633[1] & p__h6633[0] ;
  assign x__h7245 = x__h7247 | y__h7248 ;
  assign x__h7247 = x__h7249 | y__h7250 ;
  assign x__h7249 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[3] |
	     y__h7252 ;
  assign x__h7319 = p__h6633[3] & p__h6633[2] ;
  assign x__h7386 = x__h7319 & p__h6633[1] ;
  assign x__h74217 =
	     IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395 -
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399 ;
  assign x__h74221 =
	     IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1399 -
	     IF_cs1_302_BITS_30_TO_23_303_EQ_0_392_THEN_898_ETC___d1395 ;
  assign x__h74281 = 8'd28 - diff__h57406 ;
  assign x__h7476 = x__h7386 & p__h6633[0] ;
  assign x__h7896 = x__h7898 | y__h7899 ;
  assign x__h7898 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[2] |
	     y__h7901 ;
  assign x__h7979 = p__h7675[2] & p__h7675[1] ;
  assign x__h8046 = x__h7979 & p__h7675[0] ;
  assign x__h8154 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[1] |
	     y__h8157 ;
  assign x__h8224 = p__h7675[1] & p__h7675[0] ;
  assign x__h8339 = x__h8341 | y__h8342 ;
  assign x__h8341 = x__h8343 | y__h8344 ;
  assign x__h8343 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[3] |
	     y__h8346 ;
  assign x__h8413 = p__h7675[3] & p__h7675[2] ;
  assign x__h8480 = x__h8413 & p__h7675[1] ;
  assign x__h8570 = x__h8480 & p__h7675[0] ;
  assign x__h8941 = x__h8943 | y__h8944 ;
  assign x__h8943 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[2] |
	     y__h8946 ;
  assign x__h9024 = p__h2851[2] & p__h2851[1] ;
  assign x__h9091 = x__h9024 & p__h2851[0] ;
  assign x__h9546 = x__h9548 | y__h9549 ;
  assign x__h9548 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[2] |
	     y__h9551 ;
  assign x__h9629 = p__h9377[2] & p__h9377[1] ;
  assign x__h9696 = x__h9629 & p__h9377[0] ;
  assign x__h9804 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[1] |
	     y__h9807 ;
  assign x__h9874 = p__h9377[1] & p__h9377[0] ;
  assign x__h9989 = x__h9991 | y__h9992 ;
  assign x__h9991 = x__h9993 | y__h9994 ;
  assign x__h9993 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[3] |
	     y__h9996 ;
  assign y__h10526 =
	     x__h10595 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h10528 =
	     p__h2851[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] ;
  assign y__h10651 =
	     p__h2851[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h10711 =
	     x__h10941 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h10713 =
	     x__h10851 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] ;
  assign y__h10715 =
	     x__h10784 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[1] ;
  assign y__h10717 =
	     p__h2851[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[2] ;
  assign y__h12151 =
	     x__h12231 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0] ;
  assign y__h12153 =
	     p__h11947[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[1] ;
  assign y__h12380 =
	     p__h11947[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0] ;
  assign y__h12565 =
	     x__h12703 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[0] ;
  assign y__h12567 =
	     x__h12636 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[1] ;
  assign y__h12569 =
	     p__h11947[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d158[2] ;
  assign y__h13102 =
	     x__h13181 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 ;
  assign y__h13104 = x__h13139 & y__h13140 ;
  assign y__h13140 = spliced_bits__h9291[0] & spliced_bits__h11861[0] ;
  assign y__h13184 = spliced_bits__h9291[0] ^ spliced_bits__h11861[0] ;
  assign y__h13324 =
	     y__h13184 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 ;
  assign y__h13502 =
	     x__h13634 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d334 ;
  assign y__h13504 = x__h13570 & y__h13140 ;
  assign y__h13506 = x__h13528 & x__h13103 ;
  assign y__h14573 =
	     x__h14722 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h14575 =
	     x__h14655 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] ;
  assign y__h14577 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[1] ;
  assign y__h14831 =
	     x__h14900 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h14833 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] ;
  assign y__h14956 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d211[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h15016 =
	     x__h15246 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[6] ;
  assign y__h15018 =
	     x__h15156 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[0] ;
  assign y__h15020 =
	     x__h15089 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[1] ;
  assign y__h15022 =
	     x__h15045 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d207[2] ;
  assign y__h15484 =
	     spliced_bits__h11520[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[1] ;
  assign y__h15691 =
	     x__h15590 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d347[2] ;
  assign y__h15898 = x__h15797 & cin__h15748 ;
  assign y__h16105 = x__h16004 & cin__h15955 ;
  assign y__h16312 =
	     x__h16211 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[7] ;
  assign y__h17245 =
	     x__h17325 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0] ;
  assign y__h17474 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d505[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0] ;
  assign y__h17659 =
	     x__h17797 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[0] ;
  assign y__h17661 =
	     x__h17730 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d502[1] ;
  assign y__h18204 = x__h18353 & IF_y7661_OR_y7659_THEN_1_ELSE_0__q1[0] ;
  assign y__h18206 =
	     x__h18286 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] ;
  assign y__h18208 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[1] ;
  assign y__h18512 = x__h18581 & IF_y7661_OR_y7659_THEN_1_ELSE_0__q1[0] ;
  assign y__h18514 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] ;
  assign y__h18637 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d483[0] &
	     IF_y7661_OR_y7659_THEN_1_ELSE_0__q1[0] ;
  assign y__h18697 = x__h18927 & IF_y7661_OR_y7659_THEN_1_ELSE_0__q1[0] ;
  assign y__h18699 =
	     x__h18837 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[0] ;
  assign y__h18701 =
	     x__h18770 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[1] ;
  assign y__h18703 =
	     x__h18726 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d479[2] ;
  assign y__h19245 = x__h19394 & cin__h19068 ;
  assign y__h19247 = x__h19327 & y__h19328 ;
  assign y__h19249 = x__h19283 & y__h19284 ;
  assign y__h19284 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356 &
	     y__h15484 ;
  assign y__h19328 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448 ;
  assign y__h19330 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d356 ^
	     y__h15484 ;
  assign y__h19396 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d377 ^
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d448 ;
  assign y__h19555 = x__h19624 & cin__h19068 ;
  assign y__h19557 = y__h19330 & y__h19328 ;
  assign y__h19680 = y__h19396 & cin__h19068 ;
  assign y__h19740 = x__h19970 & cin__h19068 ;
  assign y__h19742 = x__h19880 & y__h19328 ;
  assign y__h19744 = x__h19813 & y__h19284 ;
  assign y__h19746 = x__h19769 & x__h19248 ;
  assign y__h20292 = x__h20436 & cin__h20111 ;
  assign y__h20294 =
	     x__h20372 &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[0] ;
  assign y__h20296 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[2] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[1] ;
  assign y__h20595 = x__h20661 & cin__h20111 ;
  assign y__h20597 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[1] &
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d230[0] ;
  assign y__h20715 =
	     _1_CONCAT_0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_A_ETC___d232[0] &
	     cin__h20111 ;
  assign y__h3710 = {8{mac_rg_B[0]}} ;
  assign y__h3833 = {8{mac_rg_B[1]}} ;
  assign y__h3962 =
	     x__h4111 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h3964 =
	     x__h4044 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] ;
  assign y__h3966 =
	     p__h3509[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[1] ;
  assign y__h4212 = {8{mac_rg_B[2]}} ;
  assign y__h4272 =
	     x__h4341 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h4274 =
	     p__h3509[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] ;
  assign y__h4397 =
	     p__h3509[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h4457 =
	     x__h4687 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d73[0] ;
  assign y__h4459 =
	     x__h4597 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[0] ;
  assign y__h4461 =
	     x__h4530 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[1] ;
  assign y__h4463 =
	     p__h3509[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d380[2] ;
  assign y__h4950 = {8{mac_rg_B[4]}} ;
  assign y__h5031 = {8{mac_rg_B[3]}} ;
  assign y__h5145 = {8{mac_rg_B[5]}} ;
  assign y__h5339 =
	     x__h5484 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5341 =
	     x__h5420 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] ;
  assign y__h5343 =
	     x__h5378 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[1] ;
  assign y__h5589 =
	     x__h5655 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5591 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] ;
  assign y__h5709 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d80[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5769 =
	     x__h5989 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d90[7] ;
  assign y__h5771 =
	     x__h5903 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[0] ;
  assign y__h5773 =
	     x__h5839 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d76[1] ;
  assign y__h5775 =
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d60 &
	     x__h5342 ;
  assign y__h6803 =
	     x__h6952 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h6805 =
	     x__h6885 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] ;
  assign y__h6807 =
	     p__h6633[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[1] ;
  assign y__h7061 =
	     x__h7130 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h7063 =
	     p__h6633[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] ;
  assign y__h7186 =
	     p__h6633[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h7246 =
	     x__h7476 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d56[0] ;
  assign y__h7248 =
	     x__h7386 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[0] ;
  assign y__h7250 =
	     x__h7319 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[1] ;
  assign y__h7252 =
	     p__h6633[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d276[2] ;
  assign y__h7738 = {8{mac_rg_B[6]}} ;
  assign y__h7897 =
	     x__h8046 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h7899 =
	     x__h7979 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] ;
  assign y__h7901 =
	     p__h7675[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[1] ;
  assign y__h8155 =
	     x__h8224 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h8157 =
	     p__h7675[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] ;
  assign y__h8280 =
	     p__h7675[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h8340 =
	     x__h8570 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d39[5] ;
  assign y__h8342 =
	     x__h8480 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[0] ;
  assign y__h8344 =
	     x__h8413 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[1] ;
  assign y__h8346 =
	     p__h7675[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d24[2] ;
  assign y__h8942 =
	     x__h9091 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d63[0] ;
  assign y__h8944 =
	     x__h9024 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[0] ;
  assign y__h8946 =
	     p__h2851[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d425[1] ;
  assign y__h9547 =
	     x__h9696 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9549 =
	     x__h9629 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] ;
  assign y__h9551 =
	     p__h9377[2] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[1] ;
  assign y__h9805 =
	     x__h9874 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9807 =
	     p__h9377[1] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] ;
  assign y__h9930 =
	     p__h9377[0] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9990 =
	     x__h10220 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d150[6] ;
  assign y__h9992 =
	     x__h10130 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[0] ;
  assign y__h9994 =
	     x__h10063 &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[1] ;
  assign y__h9996 =
	     p__h9377[3] &
	     _0b1_CONCAT_mac_rg_A_BITS_6_TO_0_6_7_AND_SEXT_m_ETC___d129[2] ;
  always@(guard__h58867 or out_sfd__h67533 or _theResult___sfd__h67530)
  begin
    case (guard__h58867)
      2'b10:
	  CASE_guard8867_0b10_out_sfd7533_0b11_theResult_ETC__q7 =
	      out_sfd__h67533;
      2'b11:
	  CASE_guard8867_0b10_out_sfd7533_0b11_theResult_ETC__q7 =
	      _theResult___sfd__h67530;
      default: CASE_guard8867_0b10_out_sfd7533_0b11_theResult_ETC__q7 = 23'd0;
    endcase
  end
  always@(guard__h58867 or out_exp__h67532 or _theResult___exp__h67529)
  begin
    case (guard__h58867)
      2'b10:
	  CASE_guard8867_0b10_out_exp7532_0b11_theResult_ETC__q8 =
	      out_exp__h67532;
      2'b11:
	  CASE_guard8867_0b10_out_exp7532_0b11_theResult_ETC__q8 =
	      _theResult___exp__h67529;
      default: CASE_guard8867_0b10_out_exp7532_0b11_theResult_ETC__q8 = 8'd0;
    endcase
  end
  always@(guard__h73621 or out_sfd__h79184 or _theResult___sfd__h79181)
  begin
    case (guard__h73621)
      2'b10:
	  CASE_guard3621_0b10_out_sfd9184_0b11_theResult_ETC__q14 =
	      out_sfd__h79184;
      2'b11:
	  CASE_guard3621_0b10_out_sfd9184_0b11_theResult_ETC__q14 =
	      _theResult___sfd__h79181;
      default: CASE_guard3621_0b10_out_sfd9184_0b11_theResult_ETC__q14 =
		   23'd0;
    endcase
  end
  always@(guard__h73621 or out_exp__h79183 or _theResult___exp__h79180)
  begin
    case (guard__h73621)
      2'b10:
	  CASE_guard3621_0b10_out_exp9183_0b11_theResult_ETC__q15 =
	      out_exp__h79183;
      2'b11:
	  CASE_guard3621_0b10_out_exp9183_0b11_theResult_ETC__q15 =
	      _theResult___exp__h79180;
      default: CASE_guard3621_0b10_out_exp9183_0b11_theResult_ETC__q15 = 8'd0;
    endcase
  end
  always@(guard__h58867 or
	  _theResult___snd_fst_sfd__h66957 or
	  IF_0b0_CONCAT_NOT_IF_NOT_as1_07_BITS_30_TO_23__ETC___d1341 or
	  IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1337)
  begin
    case (guard__h58867)
      2'b10:
	  IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1344 =
	      _theResult___snd_fst_sfd__h66957[0] ?
		IF_0b0_CONCAT_NOT_IF_NOT_as1_07_BITS_30_TO_23__ETC___d1341 :
		IF_IF_898_MINUS_IF_as1_07_BITS_30_TO_23_08_EQ__ETC___d1337;
      2'b11:
	  IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1344 =
	      IF_0b0_CONCAT_NOT_IF_NOT_as1_07_BITS_30_TO_23__ETC___d1341;
      default: IF_IF_NOT_as1_07_BITS_30_TO_23_08_EQ_255_09_61_ETC___d1344 =
		   31'd0;
    endcase
  end
  always@(guard__h73621 or
	  _theResult___snd_fst_sfd__h78628 or
	  IF_0b0_CONCAT_NOT_IF_NOT_IF_as1_07_BITS_30_TO__ETC___d1634 or
	  IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1613)
  begin
    case (guard__h73621)
      2'b10:
	  IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1638 =
	      _theResult___snd_fst_sfd__h78628[0] ?
		IF_0b0_CONCAT_NOT_IF_NOT_IF_as1_07_BITS_30_TO__ETC___d1634 :
		IF_IF_IF_NOT_IF_cs1_302_BITS_30_TO_23_303_EQ_0_ETC___d1613;
      2'b11:
	  IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1638 =
	      IF_0b0_CONCAT_NOT_IF_NOT_IF_as1_07_BITS_30_TO__ETC___d1634;
      default: IF_IF_NOT_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_ETC___d1638 =
		   31'd0;
    endcase
  end
  always@(grs__h1040 or
	  IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d890 or
	  IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d892)
  begin
    case (grs__h1040)
      3'b011, 3'b110, 3'b111:
	  CASE_grs040_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BIT_ETC__q16 =
	      IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d892;
      default: CASE_grs040_0b11_IF_NOT_IF_IF_NOT_mac_rg_A_BIT_ETC__q16 =
		   IF_NOT_IF_IF_NOT_mac_rg_A_BITS_14_TO_7_EQ_0_AN_ETC___d890[26:4];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        as1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	bs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	cs1 <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	failed_cases <= `BSV_ASSIGNMENT_DELAY 32'd0;
	mac_out_r <= `BSV_ASSIGNMENT_DELAY 32'd0;
	mac_rg_A <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	mac_rg_B <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	mac_rg_C <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_a <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_af <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_b <= `BSV_ASSIGNMENT_DELAY 16'hAAAA;
	rg_bf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_c <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_cf <= `BSV_ASSIGNMENT_DELAY 32'hAAAAAAAA;
	rg_r <= `BSV_ASSIGNMENT_DELAY 1'b1;
      end
    else
      begin
        if (as1$EN) as1 <= `BSV_ASSIGNMENT_DELAY as1$D_IN;
	if (bs1$EN) bs1 <= `BSV_ASSIGNMENT_DELAY bs1$D_IN;
	if (count$EN) count <= `BSV_ASSIGNMENT_DELAY count$D_IN;
	if (cs1$EN) cs1 <= `BSV_ASSIGNMENT_DELAY cs1$D_IN;
	if (failed_cases$EN)
	  failed_cases <= `BSV_ASSIGNMENT_DELAY failed_cases$D_IN;
	if (mac_out_r$EN) mac_out_r <= `BSV_ASSIGNMENT_DELAY mac_out_r$D_IN;
	if (mac_rg_A$EN) mac_rg_A <= `BSV_ASSIGNMENT_DELAY mac_rg_A$D_IN;
	if (mac_rg_B$EN) mac_rg_B <= `BSV_ASSIGNMENT_DELAY mac_rg_B$D_IN;
	if (mac_rg_C$EN) mac_rg_C <= `BSV_ASSIGNMENT_DELAY mac_rg_C$D_IN;
	if (rg_a$EN) rg_a <= `BSV_ASSIGNMENT_DELAY rg_a$D_IN;
	if (rg_af$EN) rg_af <= `BSV_ASSIGNMENT_DELAY rg_af$D_IN;
	if (rg_b$EN) rg_b <= `BSV_ASSIGNMENT_DELAY rg_b$D_IN;
	if (rg_bf$EN) rg_bf <= `BSV_ASSIGNMENT_DELAY rg_bf$D_IN;
	if (rg_c$EN) rg_c <= `BSV_ASSIGNMENT_DELAY rg_c$D_IN;
	if (rg_cf$EN) rg_cf <= `BSV_ASSIGNMENT_DELAY rg_cf$D_IN;
	if (rg_r$EN) rg_r <= `BSV_ASSIGNMENT_DELAY rg_r$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    as1 = 32'hAAAAAAAA;
    bs1 = 32'hAAAAAAAA;
    count = 32'hAAAAAAAA;
    cs1 = 32'hAAAAAAAA;
    failed_cases = 32'hAAAAAAAA;
    mac_out_r = 32'hAAAAAAAA;
    mac_rg_A = 16'hAAAA;
    mac_rg_B = 16'hAAAA;
    mac_rg_C = 32'hAAAAAAAA;
    rg_a = 16'hAAAA;
    rg_af = 32'hAAAAAAAA;
    rg_b = 16'hAAAA;
    rg_bf = 32'hAAAAAAAA;
    rg_c = 32'hAAAAAAAA;
    rg_cf = 32'hAAAAAAAA;
    rg_r = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (mac_out_r[30:23] !=
	  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640[30:23] ||
	  mac_out_r[22:2] !=
	  IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640[22:2])
	$display("%d --Expected O/P --- %b, Actual O/P-- %b",
		 $signed(count),
		 { NOT_IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AN_ETC___d1691 &&
		   IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1704,
		   IF_IF_as1_07_BITS_30_TO_23_08_EQ_255_09_AND_NO_ETC___d1640 },
		 mac_out_r);
    if (RST_N != `BSV_RESET_VALUE)
      if (count == 32'd1003)
	$display("Failed for %d cases", $signed(failed_cases));
    if (RST_N != `BSV_RESET_VALUE) if (count == 32'd1003) $finish(32'd0);
  end
  // synopsys translate_on
endmodule  // mk_Tb

