/*
 * Generated by Bluespec Compiler, version 2024.07 (build b4f31dbe)
 * 
 * On Mon Oct 21 14:14:37 IST 2024
 * 
 */

/* Generation options: keep-fires */
#ifndef __mk_Test_h__
#define __mk_Test_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mk_Test module */
class MOD_mk_Test : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_count;
  MOD_Reg<tUInt8> INST_obj_mac_pp00;
  MOD_Reg<tUInt8> INST_obj_mac_pp00_s2;
  MOD_Reg<tUInt8> INST_obj_mac_pp00_s3;
  MOD_Reg<tUInt8> INST_obj_mac_pp00_s4;
  MOD_Reg<tUInt8> INST_obj_mac_pp01;
  MOD_Reg<tUInt8> INST_obj_mac_pp01_s2;
  MOD_Reg<tUInt8> INST_obj_mac_pp01_s3;
  MOD_Reg<tUInt8> INST_obj_mac_pp07;
  MOD_Reg<tUInt8> INST_obj_mac_pp10;
  MOD_Reg<tUInt8> INST_obj_mac_pp10_s2;
  MOD_Reg<tUInt8> INST_obj_mac_pp10_s3;
  MOD_Reg<tUInt8> INST_obj_mac_pp16;
  MOD_Reg<tUInt8> INST_obj_mac_pp21;
  MOD_Reg<tUInt8> INST_obj_mac_pp30;
  MOD_Reg<tUInt8> INST_obj_mac_pp35;
  MOD_Reg<tUInt8> INST_obj_mac_pp35_s2;
  MOD_Reg<tUInt8> INST_obj_mac_pp41;
  MOD_Reg<tUInt8> INST_obj_mac_pp50;
  MOD_Reg<tUInt8> INST_obj_mac_pp57;
  MOD_Reg<tUInt8> INST_obj_mac_pp57_s2;
  MOD_Reg<tUInt8> INST_obj_mac_pp77;
  MOD_Reg<tUInt8> INST_obj_mac_pp77_s2;
  MOD_Reg<tUInt8> INST_obj_mac_pp77_s3;
  MOD_Reg<tUInt8> INST_obj_mac_s11;
  MOD_Reg<tUInt8> INST_obj_mac_s11_s2;
  MOD_Reg<tUInt8> INST_obj_mac_s11_s3;
  MOD_Reg<tUInt8> INST_obj_mac_s12;
  MOD_Reg<tUInt8> INST_obj_mac_s13;
  MOD_Reg<tUInt8> INST_obj_mac_s14;
  MOD_Reg<tUInt8> INST_obj_mac_s15;
  MOD_Reg<tUInt8> INST_obj_mac_s15_s2;
  MOD_Reg<tUInt8> INST_obj_mac_s16;
  MOD_Reg<tUInt8> INST_obj_mac_s16_s2;
  MOD_Reg<tUInt8> INST_obj_mac_s16_s3;
  MOD_Reg<tUInt8> INST_obj_mac_s21;
  MOD_Reg<tUInt8> INST_obj_mac_s21_s3;
  MOD_Reg<tUInt8> INST_obj_mac_s22;
  MOD_Reg<tUInt8> INST_obj_mac_s22_s3;
  MOD_Reg<tUInt8> INST_obj_mac_s23;
  MOD_Reg<tUInt8> INST_obj_mac_s23_s3;
  MOD_Reg<tUInt8> INST_obj_mac_s31;
  MOD_Reg<tUInt8> INST_obj_mac_s32;
  MOD_Reg<tUInt8> INST_obj_mac_s33;
  MOD_Reg<tUInt8> INST_obj_mac_s34;
  MOD_Reg<tUInt8> INST_obj_mac_s35;
  MOD_Reg<tUInt8> INST_obj_mac_s36;
  MOD_Reg<tUInt8> INST_obj_mac_s41;
  MOD_Reg<tUInt8> INST_obj_mac_s42;
  MOD_Reg<tUInt8> INST_obj_mac_s43;
  MOD_Reg<tUInt8> INST_obj_mac_s44;
  MOD_Reg<tUInt8> INST_obj_mac_x;
  MOD_Reg<tUInt8> INST_obj_mac_y;
  MOD_Reg<tUInt32> INST_obj_mac_z;
  MOD_Reg<tUInt8> INST_rg_a;
  MOD_Reg<tUInt8> INST_rg_b;
  MOD_Reg<tUInt32> INST_rg_c;
 
 /* Constructor */
 public:
  MOD_mk_Test(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_stop;
  tUInt8 DEF_CAN_FIRE_RL_stop;
  tUInt8 DEF_WILL_FIRE_RL_res;
  tUInt8 DEF_CAN_FIRE_RL_res;
  tUInt8 DEF_WILL_FIRE_RL_stall;
  tUInt8 DEF_CAN_FIRE_RL_stall;
  tUInt8 DEF_WILL_FIRE_RL_inp;
  tUInt8 DEF_CAN_FIRE_RL_inp;
  tUInt8 DEF_WILL_FIRE_RL_obj_mac_res1;
  tUInt8 DEF_CAN_FIRE_RL_obj_mac_res1;
  tUInt8 DEF_WILL_FIRE_RL_obj_mac_stage4;
  tUInt8 DEF_CAN_FIRE_RL_obj_mac_stage4;
  tUInt8 DEF_WILL_FIRE_RL_obj_mac_stage3;
  tUInt8 DEF_CAN_FIRE_RL_obj_mac_stage3;
  tUInt8 DEF_WILL_FIRE_RL_obj_mac_stage2;
  tUInt8 DEF_CAN_FIRE_RL_obj_mac_stage2;
  tUInt8 DEF_WILL_FIRE_RL_obj_mac_stage1;
  tUInt8 DEF_CAN_FIRE_RL_obj_mac_stage1;
  tUInt32 DEF_b__h17397;
 
 /* Local definitions */
 private:
  tUInt8 DEF_obj_mac_s43__h16572;
  tUInt8 DEF_obj_mac_s42__h15661;
  tUInt8 DEF_obj_mac_s41__h14641;
  tUInt8 DEF_x__h11869;
  tUInt32 DEF_count_65_PLUS_1___d669;
 
 /* Rules */
 public:
  void RL_obj_mac_stage1();
  void RL_obj_mac_stage2();
  void RL_obj_mac_stage3();
  void RL_obj_mac_stage4();
  void RL_obj_mac_res1();
  void RL_inp();
  void RL_stall();
  void RL_res();
  void RL_stop();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mk_Test &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mk_Test &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mk_Test &backing);
};

#endif /* ifndef __mk_Test_h__ */
