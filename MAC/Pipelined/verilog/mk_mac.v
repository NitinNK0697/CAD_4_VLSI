//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
//
// On Mon Oct 28 02:21:25 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_put_inp_A                  O     1 const
// RDY_put_inp_B                  O     1 const
// RDY_put_inp_C                  O     1 const
// RDY_put_inp_sel                O     1 const
// get_mac_op                     O    32 reg
// RDY_get_mac_op                 O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// put_inp_A_a                    I    16 reg
// put_inp_B_b                    I    16 reg
// put_inp_C_c                    I    32 reg
// put_inp_sel_sel                I     1 reg
// EN_put_inp_A                   I     1
// EN_put_inp_B                   I     1
// EN_put_inp_C                   I     1
// EN_put_inp_sel                 I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mk_mac(CLK,
	      RST_N,

	      put_inp_A_a,
	      EN_put_inp_A,
	      RDY_put_inp_A,

	      put_inp_B_b,
	      EN_put_inp_B,
	      RDY_put_inp_B,

	      put_inp_C_c,
	      EN_put_inp_C,
	      RDY_put_inp_C,

	      put_inp_sel_sel,
	      EN_put_inp_sel,
	      RDY_put_inp_sel,

	      get_mac_op,
	      RDY_get_mac_op);
  input  CLK;
  input  RST_N;

  // action method put_inp_A
  input  [15 : 0] put_inp_A_a;
  input  EN_put_inp_A;
  output RDY_put_inp_A;

  // action method put_inp_B
  input  [15 : 0] put_inp_B_b;
  input  EN_put_inp_B;
  output RDY_put_inp_B;

  // action method put_inp_C
  input  [31 : 0] put_inp_C_c;
  input  EN_put_inp_C;
  output RDY_put_inp_C;

  // action method put_inp_sel
  input  put_inp_sel_sel;
  input  EN_put_inp_sel;
  output RDY_put_inp_sel;

  // value method get_mac_op
  output [31 : 0] get_mac_op;
  output RDY_get_mac_op;

  // signals for module outputs
  wire [31 : 0] get_mac_op;
  wire RDY_get_mac_op,
       RDY_put_inp_A,
       RDY_put_inp_B,
       RDY_put_inp_C,
       RDY_put_inp_sel;

  // register bfloat_guard_bit_s9
  reg bfloat_guard_bit_s9;
  wire bfloat_guard_bit_s9_D_IN, bfloat_guard_bit_s9_EN;

  // register bfloat_obj_unsignedmult_rg_a
  reg [7 : 0] bfloat_obj_unsignedmult_rg_a;
  wire [7 : 0] bfloat_obj_unsignedmult_rg_a_D_IN;
  wire bfloat_obj_unsignedmult_rg_a_EN;

  // register bfloat_obj_unsignedmult_rg_b
  reg [7 : 0] bfloat_obj_unsignedmult_rg_b;
  wire [7 : 0] bfloat_obj_unsignedmult_rg_b_D_IN;
  wire bfloat_obj_unsignedmult_rg_b_EN;

  // register bfloat_obj_unsignedmult_rg_s1_op_0
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s1_op_0;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s1_op_0_D_IN;
  wire bfloat_obj_unsignedmult_rg_s1_op_0_EN;

  // register bfloat_obj_unsignedmult_rg_s1_op_1
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s1_op_1;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s1_op_1_D_IN;
  wire bfloat_obj_unsignedmult_rg_s1_op_1_EN;

  // register bfloat_obj_unsignedmult_rg_s1_op_2
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s1_op_2;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s1_op_2_D_IN;
  wire bfloat_obj_unsignedmult_rg_s1_op_2_EN;

  // register bfloat_obj_unsignedmult_rg_s1_op_3
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s1_op_3;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s1_op_3_D_IN;
  wire bfloat_obj_unsignedmult_rg_s1_op_3_EN;

  // register bfloat_obj_unsignedmult_rg_s1_op_4
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s1_op_4;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s1_op_4_D_IN;
  wire bfloat_obj_unsignedmult_rg_s1_op_4_EN;

  // register bfloat_obj_unsignedmult_rg_s1_val
  reg bfloat_obj_unsignedmult_rg_s1_val;
  wire bfloat_obj_unsignedmult_rg_s1_val_D_IN,
       bfloat_obj_unsignedmult_rg_s1_val_EN;

  // register bfloat_obj_unsignedmult_rg_s2_op_0
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s2_op_0;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s2_op_0_D_IN;
  wire bfloat_obj_unsignedmult_rg_s2_op_0_EN;

  // register bfloat_obj_unsignedmult_rg_s2_op_1
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s2_op_1;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s2_op_1_D_IN;
  wire bfloat_obj_unsignedmult_rg_s2_op_1_EN;

  // register bfloat_obj_unsignedmult_rg_s2_op_2
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s2_op_2;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s2_op_2_D_IN;
  wire bfloat_obj_unsignedmult_rg_s2_op_2_EN;

  // register bfloat_obj_unsignedmult_rg_s2_val
  reg bfloat_obj_unsignedmult_rg_s2_val;
  wire bfloat_obj_unsignedmult_rg_s2_val_D_IN,
       bfloat_obj_unsignedmult_rg_s2_val_EN;

  // register bfloat_obj_unsignedmult_rg_s3_op_0
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s3_op_0;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s3_op_0_D_IN;
  wire bfloat_obj_unsignedmult_rg_s3_op_0_EN;

  // register bfloat_obj_unsignedmult_rg_s3_op_1
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s3_op_1;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s3_op_1_D_IN;
  wire bfloat_obj_unsignedmult_rg_s3_op_1_EN;

  // register bfloat_obj_unsignedmult_rg_s3_val
  reg bfloat_obj_unsignedmult_rg_s3_val;
  wire bfloat_obj_unsignedmult_rg_s3_val_D_IN,
       bfloat_obj_unsignedmult_rg_s3_val_EN;

  // register bfloat_obj_unsignedmult_rg_s4_op
  reg [15 : 0] bfloat_obj_unsignedmult_rg_s4_op;
  wire [15 : 0] bfloat_obj_unsignedmult_rg_s4_op_D_IN;
  wire bfloat_obj_unsignedmult_rg_s4_op_EN;

  // register bfloat_obj_unsignedmult_rg_s4_val
  reg bfloat_obj_unsignedmult_rg_s4_val;
  wire bfloat_obj_unsignedmult_rg_s4_val_D_IN,
       bfloat_obj_unsignedmult_rg_s4_val_EN;

  // register bfloat_obj_unsignedmult_rg_s5_val
  reg bfloat_obj_unsignedmult_rg_s5_val;
  wire bfloat_obj_unsignedmult_rg_s5_val_D_IN,
       bfloat_obj_unsignedmult_rg_s5_val_EN;

  // register bfloat_out
  reg [31 : 0] bfloat_out;
  wire [31 : 0] bfloat_out_D_IN;
  wire bfloat_out_EN;

  // register bfloat_rg_A
  reg [15 : 0] bfloat_rg_A;
  wire [15 : 0] bfloat_rg_A_D_IN;
  wire bfloat_rg_A_EN;

  // register bfloat_rg_B
  reg [15 : 0] bfloat_rg_B;
  wire [15 : 0] bfloat_rg_B_D_IN;
  wire bfloat_rg_B_EN;

  // register bfloat_rg_C
  reg [31 : 0] bfloat_rg_C;
  wire [31 : 0] bfloat_rg_C_D_IN;
  wire bfloat_rg_C_EN;

  // register bfloat_rg_C_s1
  reg [31 : 0] bfloat_rg_C_s1;
  wire [31 : 0] bfloat_rg_C_s1_D_IN;
  wire bfloat_rg_C_s1_EN;

  // register bfloat_rg_C_s2
  reg [31 : 0] bfloat_rg_C_s2;
  wire [31 : 0] bfloat_rg_C_s2_D_IN;
  wire bfloat_rg_C_s2_EN;

  // register bfloat_rg_C_s3
  reg [31 : 0] bfloat_rg_C_s3;
  wire [31 : 0] bfloat_rg_C_s3_D_IN;
  wire bfloat_rg_C_s3_EN;

  // register bfloat_rg_C_s4
  reg [31 : 0] bfloat_rg_C_s4;
  wire [31 : 0] bfloat_rg_C_s4_D_IN;
  wire bfloat_rg_C_s4_EN;

  // register bfloat_rg_C_s5
  reg [31 : 0] bfloat_rg_C_s5;
  wire [31 : 0] bfloat_rg_C_s5_D_IN;
  wire bfloat_rg_C_s5_EN;

  // register bfloat_rg_C_s6
  reg [31 : 0] bfloat_rg_C_s6;
  wire [31 : 0] bfloat_rg_C_s6_D_IN;
  wire bfloat_rg_C_s6_EN;

  // register bfloat_rg_C_s7
  reg [31 : 0] bfloat_rg_C_s7;
  wire [31 : 0] bfloat_rg_C_s7_D_IN;
  wire bfloat_rg_C_s7_EN;

  // register bfloat_rg_exception_s1
  reg [1 : 0] bfloat_rg_exception_s1;
  wire [1 : 0] bfloat_rg_exception_s1_D_IN;
  wire bfloat_rg_exception_s1_EN;

  // register bfloat_rg_exception_s2
  reg [1 : 0] bfloat_rg_exception_s2;
  wire [1 : 0] bfloat_rg_exception_s2_D_IN;
  wire bfloat_rg_exception_s2_EN;

  // register bfloat_rg_exception_s3
  reg [1 : 0] bfloat_rg_exception_s3;
  wire [1 : 0] bfloat_rg_exception_s3_D_IN;
  wire bfloat_rg_exception_s3_EN;

  // register bfloat_rg_exception_s4
  reg [1 : 0] bfloat_rg_exception_s4;
  wire [1 : 0] bfloat_rg_exception_s4_D_IN;
  wire bfloat_rg_exception_s4_EN;

  // register bfloat_rg_exception_s6
  reg [1 : 0] bfloat_rg_exception_s6;
  wire [1 : 0] bfloat_rg_exception_s6_D_IN;
  wire bfloat_rg_exception_s6_EN;

  // register bfloat_rg_exception_s7
  reg [1 : 0] bfloat_rg_exception_s7;
  wire [1 : 0] bfloat_rg_exception_s7_D_IN;
  wire bfloat_rg_exception_s7_EN;

  // register bfloat_rg_exception_s8
  reg [1 : 0] bfloat_rg_exception_s8;
  wire [1 : 0] bfloat_rg_exception_s8_D_IN;
  wire bfloat_rg_exception_s8_EN;

  // register bfloat_rg_exp_add_s1
  reg [7 : 0] bfloat_rg_exp_add_s1;
  wire [7 : 0] bfloat_rg_exp_add_s1_D_IN;
  wire bfloat_rg_exp_add_s1_EN;

  // register bfloat_rg_exp_add_s2
  reg [7 : 0] bfloat_rg_exp_add_s2;
  wire [7 : 0] bfloat_rg_exp_add_s2_D_IN;
  wire bfloat_rg_exp_add_s2_EN;

  // register bfloat_rg_exp_add_s3
  reg [7 : 0] bfloat_rg_exp_add_s3;
  wire [7 : 0] bfloat_rg_exp_add_s3_D_IN;
  wire bfloat_rg_exp_add_s3_EN;

  // register bfloat_rg_exp_add_s4
  reg [7 : 0] bfloat_rg_exp_add_s4;
  wire [7 : 0] bfloat_rg_exp_add_s4_D_IN;
  wire bfloat_rg_exp_add_s4_EN;

  // register bfloat_rg_exp_diff_s6
  reg [7 : 0] bfloat_rg_exp_diff_s6;
  wire [7 : 0] bfloat_rg_exp_diff_s6_D_IN;
  wire bfloat_rg_exp_diff_s6_EN;

  // register bfloat_rg_exp_diff_s7
  reg [7 : 0] bfloat_rg_exp_diff_s7;
  wire [7 : 0] bfloat_rg_exp_diff_s7_D_IN;
  wire bfloat_rg_exp_diff_s7_EN;

  // register bfloat_rg_exponent_s8
  reg [7 : 0] bfloat_rg_exponent_s8;
  wire [7 : 0] bfloat_rg_exponent_s8_D_IN;
  wire bfloat_rg_exponent_s8_EN;

  // register bfloat_rg_exponent_s9
  reg [7 : 0] bfloat_rg_exponent_s9;
  wire [7 : 0] bfloat_rg_exponent_s9_D_IN;
  wire bfloat_rg_exponent_s9_EN;

  // register bfloat_rg_mant_s8
  reg [27 : 0] bfloat_rg_mant_s8;
  wire [27 : 0] bfloat_rg_mant_s8_D_IN;
  wire bfloat_rg_mant_s8_EN;

  // register bfloat_rg_mant_s9
  reg [26 : 0] bfloat_rg_mant_s9;
  reg [26 : 0] bfloat_rg_mant_s9_D_IN;
  wire bfloat_rg_mant_s9_EN;

  // register bfloat_rg_mant_shift_s7
  reg [26 : 0] bfloat_rg_mant_shift_s7;
  wire [26 : 0] bfloat_rg_mant_shift_s7_D_IN;
  wire bfloat_rg_mant_shift_s7_EN;

  // register bfloat_rg_mult_mant_s7
  reg [26 : 0] bfloat_rg_mult_mant_s7;
  wire [26 : 0] bfloat_rg_mult_mant_s7_D_IN;
  wire bfloat_rg_mult_mant_s7_EN;

  // register bfloat_rg_mult_s5
  reg [31 : 0] bfloat_rg_mult_s5;
  wire [31 : 0] bfloat_rg_mult_s5_D_IN;
  wire bfloat_rg_mult_s5_EN;

  // register bfloat_rg_mult_s6
  reg [31 : 0] bfloat_rg_mult_s6;
  wire [31 : 0] bfloat_rg_mult_s6_D_IN;
  wire bfloat_rg_mult_s6_EN;

  // register bfloat_rg_mult_s7
  reg [31 : 0] bfloat_rg_mult_s7;
  wire [31 : 0] bfloat_rg_mult_s7_D_IN;
  wire bfloat_rg_mult_s7_EN;

  // register bfloat_rg_out_valid
  reg bfloat_rg_out_valid;
  wire bfloat_rg_out_valid_D_IN, bfloat_rg_out_valid_EN;

  // register bfloat_rg_s10_valid
  reg bfloat_rg_s10_valid;
  wire bfloat_rg_s10_valid_D_IN, bfloat_rg_s10_valid_EN;

  // register bfloat_rg_s1_valid
  reg bfloat_rg_s1_valid;
  wire bfloat_rg_s1_valid_D_IN, bfloat_rg_s1_valid_EN;

  // register bfloat_rg_s2_valid
  reg bfloat_rg_s2_valid;
  wire bfloat_rg_s2_valid_D_IN, bfloat_rg_s2_valid_EN;

  // register bfloat_rg_s3_valid
  reg bfloat_rg_s3_valid;
  wire bfloat_rg_s3_valid_D_IN, bfloat_rg_s3_valid_EN;

  // register bfloat_rg_s4_valid
  reg bfloat_rg_s4_valid;
  wire bfloat_rg_s4_valid_D_IN, bfloat_rg_s4_valid_EN;

  // register bfloat_rg_s5_valid
  reg bfloat_rg_s5_valid;
  wire bfloat_rg_s5_valid_D_IN, bfloat_rg_s5_valid_EN;

  // register bfloat_rg_s6_valid
  reg bfloat_rg_s6_valid;
  wire bfloat_rg_s6_valid_D_IN, bfloat_rg_s6_valid_EN;

  // register bfloat_rg_s7_valid
  reg bfloat_rg_s7_valid;
  wire bfloat_rg_s7_valid_D_IN, bfloat_rg_s7_valid_EN;

  // register bfloat_rg_s8_valid
  reg bfloat_rg_s8_valid;
  wire bfloat_rg_s8_valid_D_IN, bfloat_rg_s8_valid_EN;

  // register bfloat_rg_s9_valid
  reg bfloat_rg_s9_valid;
  wire bfloat_rg_s9_valid_D_IN, bfloat_rg_s9_valid_EN;

  // register bfloat_rg_sign_s1
  reg bfloat_rg_sign_s1;
  wire bfloat_rg_sign_s1_D_IN, bfloat_rg_sign_s1_EN;

  // register bfloat_rg_sign_s2
  reg bfloat_rg_sign_s2;
  wire bfloat_rg_sign_s2_D_IN, bfloat_rg_sign_s2_EN;

  // register bfloat_rg_sign_s3
  reg bfloat_rg_sign_s3;
  wire bfloat_rg_sign_s3_D_IN, bfloat_rg_sign_s3_EN;

  // register bfloat_rg_sign_s4
  reg bfloat_rg_sign_s4;
  wire bfloat_rg_sign_s4_D_IN, bfloat_rg_sign_s4_EN;

  // register bfloat_rg_sign_s8
  reg bfloat_rg_sign_s8;
  wire bfloat_rg_sign_s8_D_IN, bfloat_rg_sign_s8_EN;

  // register bfloat_rg_sign_s9
  reg bfloat_rg_sign_s9;
  wire bfloat_rg_sign_s9_D_IN, bfloat_rg_sign_s9_EN;

  // register bfloat_round_bit_s9
  reg bfloat_round_bit_s9;
  wire bfloat_round_bit_s9_D_IN, bfloat_round_bit_s9_EN;

  // register bfloat_sticky_bit_s9
  reg bfloat_sticky_bit_s9;
  wire bfloat_sticky_bit_s9_D_IN, bfloat_sticky_bit_s9_EN;

  // register int_8_out
  reg [31 : 0] int_8_out;
  wire [31 : 0] int_8_out_D_IN;
  wire int_8_out_EN;

  // register int_8_rg_a
  reg [7 : 0] int_8_rg_a;
  wire [7 : 0] int_8_rg_a_D_IN;
  wire int_8_rg_a_EN;

  // register int_8_rg_b
  reg [7 : 0] int_8_rg_b;
  wire [7 : 0] int_8_rg_b_D_IN;
  wire int_8_rg_b_EN;

  // register int_8_rg_c
  reg [31 : 0] int_8_rg_c;
  wire [31 : 0] int_8_rg_c_D_IN;
  wire int_8_rg_c_EN;

  // register int_8_rg_c1
  reg [31 : 0] int_8_rg_c1;
  wire [31 : 0] int_8_rg_c1_D_IN;
  wire int_8_rg_c1_EN;

  // register int_8_rg_prod1
  reg [15 : 0] int_8_rg_prod1;
  wire [15 : 0] int_8_rg_prod1_D_IN;
  wire int_8_rg_prod1_EN;

  // register rg_A
  reg [15 : 0] rg_A;
  wire [15 : 0] rg_A_D_IN;
  wire rg_A_EN;

  // register rg_B
  reg [15 : 0] rg_B;
  wire [15 : 0] rg_B_D_IN;
  wire rg_B_EN;

  // register rg_C
  reg [31 : 0] rg_C;
  wire [31 : 0] rg_C_D_IN;
  wire rg_C_EN;

  // register rg_out
  reg [31 : 0] rg_out;
  wire [31 : 0] rg_out_D_IN;
  wire rg_out_EN;

  // register rg_sel
  reg rg_sel;
  wire rg_sel_D_IN, rg_sel_EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_bfloat_obj_unsignedmult_rg_s1_val__dreg_update,
       CAN_FIRE_RL_bfloat_obj_unsignedmult_rg_s2_val__dreg_update,
       CAN_FIRE_RL_bfloat_obj_unsignedmult_rg_s3_val__dreg_update,
       CAN_FIRE_RL_bfloat_obj_unsignedmult_rg_s4_val__dreg_update,
       CAN_FIRE_RL_bfloat_obj_unsignedmult_rg_s5_val__dreg_update,
       CAN_FIRE_RL_bfloat_obj_unsignedmult_s1,
       CAN_FIRE_RL_bfloat_obj_unsignedmult_s2,
       CAN_FIRE_RL_bfloat_obj_unsignedmult_s3,
       CAN_FIRE_RL_bfloat_obj_unsignedmult_s4,
       CAN_FIRE_RL_bfloat_rg_out_valid__dreg_update,
       CAN_FIRE_RL_bfloat_rg_s10_valid__dreg_update,
       CAN_FIRE_RL_bfloat_rg_s1_valid__dreg_update,
       CAN_FIRE_RL_bfloat_rg_s2_valid__dreg_update,
       CAN_FIRE_RL_bfloat_rg_s3_valid__dreg_update,
       CAN_FIRE_RL_bfloat_rg_s4_valid__dreg_update,
       CAN_FIRE_RL_bfloat_rg_s5_valid__dreg_update,
       CAN_FIRE_RL_bfloat_rg_s6_valid__dreg_update,
       CAN_FIRE_RL_bfloat_rg_s7_valid__dreg_update,
       CAN_FIRE_RL_bfloat_rg_s8_valid__dreg_update,
       CAN_FIRE_RL_bfloat_rg_s9_valid__dreg_update,
       CAN_FIRE_RL_bfloat_stage1,
       CAN_FIRE_RL_bfloat_stage10,
       CAN_FIRE_RL_bfloat_stage2,
       CAN_FIRE_RL_bfloat_stage3,
       CAN_FIRE_RL_bfloat_stage4,
       CAN_FIRE_RL_bfloat_stage5,
       CAN_FIRE_RL_bfloat_stage6,
       CAN_FIRE_RL_bfloat_stage7,
       CAN_FIRE_RL_bfloat_stage8,
       CAN_FIRE_RL_bfloat_stage9,
       CAN_FIRE_RL_inp,
       CAN_FIRE_RL_int_8_add,
       CAN_FIRE_RL_int_8_multiply,
       CAN_FIRE_RL_out,
       CAN_FIRE_put_inp_A,
       CAN_FIRE_put_inp_B,
       CAN_FIRE_put_inp_C,
       CAN_FIRE_put_inp_sel,
       WILL_FIRE_RL_bfloat_obj_unsignedmult_rg_s1_val__dreg_update,
       WILL_FIRE_RL_bfloat_obj_unsignedmult_rg_s2_val__dreg_update,
       WILL_FIRE_RL_bfloat_obj_unsignedmult_rg_s3_val__dreg_update,
       WILL_FIRE_RL_bfloat_obj_unsignedmult_rg_s4_val__dreg_update,
       WILL_FIRE_RL_bfloat_obj_unsignedmult_rg_s5_val__dreg_update,
       WILL_FIRE_RL_bfloat_obj_unsignedmult_s1,
       WILL_FIRE_RL_bfloat_obj_unsignedmult_s2,
       WILL_FIRE_RL_bfloat_obj_unsignedmult_s3,
       WILL_FIRE_RL_bfloat_obj_unsignedmult_s4,
       WILL_FIRE_RL_bfloat_rg_out_valid__dreg_update,
       WILL_FIRE_RL_bfloat_rg_s10_valid__dreg_update,
       WILL_FIRE_RL_bfloat_rg_s1_valid__dreg_update,
       WILL_FIRE_RL_bfloat_rg_s2_valid__dreg_update,
       WILL_FIRE_RL_bfloat_rg_s3_valid__dreg_update,
       WILL_FIRE_RL_bfloat_rg_s4_valid__dreg_update,
       WILL_FIRE_RL_bfloat_rg_s5_valid__dreg_update,
       WILL_FIRE_RL_bfloat_rg_s6_valid__dreg_update,
       WILL_FIRE_RL_bfloat_rg_s7_valid__dreg_update,
       WILL_FIRE_RL_bfloat_rg_s8_valid__dreg_update,
       WILL_FIRE_RL_bfloat_rg_s9_valid__dreg_update,
       WILL_FIRE_RL_bfloat_stage1,
       WILL_FIRE_RL_bfloat_stage10,
       WILL_FIRE_RL_bfloat_stage2,
       WILL_FIRE_RL_bfloat_stage3,
       WILL_FIRE_RL_bfloat_stage4,
       WILL_FIRE_RL_bfloat_stage5,
       WILL_FIRE_RL_bfloat_stage6,
       WILL_FIRE_RL_bfloat_stage7,
       WILL_FIRE_RL_bfloat_stage8,
       WILL_FIRE_RL_bfloat_stage9,
       WILL_FIRE_RL_inp,
       WILL_FIRE_RL_int_8_add,
       WILL_FIRE_RL_int_8_multiply,
       WILL_FIRE_RL_out,
       WILL_FIRE_put_inp_A,
       WILL_FIRE_put_inp_B,
       WILL_FIRE_put_inp_C,
       WILL_FIRE_put_inp_sel;

  // remaining internal signals
  reg [22 : 0] CASE_bfloat_rg_exception_s1_1_0_2_0_4194304__q4,
	       CASE_grs4745_0b11_bfloat_rg_mant_s9_102_BITS_2_ETC__q6;
  reg [8 : 0] IF_IF_IF_bfloat_obj_unsignedmult_rg_s5_val_53__ETC___d778;
  reg [7 : 0] CASE_bfloat_rg_exception_s1_1_0_2_255_255__q3;
  wire [31 : 0] mul_result__h25086,
		x__h25881,
		x__h25935,
		x__h25994,
		x__h26236,
		x__h56194;
  wire [30 : 0] IF_bfloat_rg_exception_s1_39_EQ_3_52_THEN_IF_I_ETC___d798;
  wire [28 : 0] IF_bfloat_rg_mult_s7_64_BIT_31_65_XOR_bfloat_r_ETC___d875,
		a_temp__h26821,
		b_temp__h26822;
  wire [26 : 0] IF_bfloat_rg_mant_s8_81_BITS_27_TO_26_82_EQ_0b_ETC___d1061,
		x__h27234,
		x__h33483;
  wire [25 : 0] c_mant_s7__h26489, mantissa__h27163;
  wire [23 : 0] IF_theResult_____15196_EQ_255_THEN_0_ELSE_IF_I_ETC__q2;
  wire [22 : 0] bfloat_rg_mant_s9_102_BITS_26_TO_4_103_PLUS_1___d1104;
  wire [15 : 0] IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755;
  wire [11 : 0] INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1667;
  wire [9 : 0] INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1666;
  wire [8 : 0] mantissa_round__h25426;
  wire [7 : 0] IF_bfloat_rg_mant_s8_81_BITS_27_TO_26_82_EQ_0b_ETC___d1070,
	       _theResult_____1__h25196,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d172,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d54,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d69,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96,
	       e__h24529,
	       exp___1__h25263,
	       exp___1__h25471,
	       exp__h25186,
	       exp_diff_s6__h25712,
	       exponent__h27162,
	       exponent__h27191,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1665,
	       mant_1__h25188,
	       op2__h33608,
	       spliced_bits__h19266,
	       x__h24554,
	       y_avValue_snd__h24219,
	       y_avValue_snd__h24235,
	       y_avValue_snd__h24251;
  wire [6 : 0] INV_x5597__q5,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1117,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1277,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280,
	       x__h35597,
	       y__h35599;
  wire [5 : 0] bfloat_obj_unsignedmult_rg_s2_op_0_94_BIT_12_9_ETC___d552,
	       spliced_bits__h10957,
	       spliced_bits__h12223;
  wire [4 : 0] IF_IF_IF_IF_bfloat_rg_mant_s8_81_BIT_25_85_THE_ETC___d979,
	       leftshift_count__h27161,
	       out__h27295,
	       spliced_bits__h27338;
  wire [3 : 0] IF_x0633_OR_y0634_THEN_1_ELSE_0__q1,
	       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124,
	       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1166,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d165,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d213,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d256,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d306,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318,
	       bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362,
	       bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d401,
	       bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451,
	       bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d489,
	       bfloat_obj_unsignedmult_rg_s2_op_0_94_BIT_10_0_ETC___d528,
	       bfloat_obj_unsignedmult_rg_s2_op_0_94_BIT_10_0_ETC___d551,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d673,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d691,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1303,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1316,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1372,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1413,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1469,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1523,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1579,
	       int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773,
	       int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1944,
	       int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752,
	       int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1926,
	       int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815,
	       int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794,
	       int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1962,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1677,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1854,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1872,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1890,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1908,
	       p__h11124,
	       p__h12388,
	       p__h13938,
	       p__h15266,
	       p__h16538,
	       p__h20117,
	       p__h20990,
	       p__h21937,
	       p__h35478,
	       p__h35673,
	       p__h38773,
	       p__h38844,
	       p__h39836,
	       p__h40683,
	       p__h42603,
	       p__h44218,
	       p__h44289,
	       p__h46308,
	       p__h48762,
	       p__h49224,
	       p__h49684,
	       p__h50144,
	       p__h50603,
	       p__h50996,
	       p__h51389,
	       p__h51781,
	       p__h6024,
	       p__h8859,
	       p__h9807,
	       rg_a__h35664,
	       rg_a__h44209,
	       rg_a__h50135,
	       rg_b__h12381,
	       rg_b__h44210,
	       spliced_bits__h11043,
	       spliced_bits__h12308,
	       spliced_bits__h13852,
	       spliced_bits__h15186,
	       spliced_bits__h16457,
	       spliced_bits__h19955,
	       spliced_bits__h19983,
	       spliced_bits__h20011,
	       spliced_bits__h20039,
	       spliced_bits__h27456,
	       spliced_bits__h27484,
	       spliced_bits__h27512,
	       spliced_bits__h27539,
	       spliced_bits__h5886,
	       spliced_bits__h5937,
	       spliced_bits__h8676,
	       spliced_bits__h8727,
	       spliced_bits__h8778,
	       sum__h35480,
	       sum__h35675,
	       sum__h38775,
	       sum__h38846,
	       sum__h39838,
	       sum__h40685,
	       sum__h42605,
	       sum__h44220,
	       sum__h44291,
	       sum__h46310,
	       sum__h48764,
	       sum__h49226,
	       sum__h49686,
	       sum__h50146,
	       sum__h50605,
	       sum__h50998,
	       sum__h51391,
	       sum__h51783;
  wire [2 : 0] bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d564,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d654,
	       grs__h34745,
	       grs_mul_round__h25194,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1261,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1428,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430,
	       spliced_bits__h27658,
	       spliced_bits__h27686,
	       spliced_bits__h27714,
	       spliced_bits__h27742,
	       spliced_bits__h27770,
	       spliced_bits__h27798,
	       spliced_bits__h27825;
  wire [1 : 0] bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d118,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d82,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86,
	       bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d411,
	       bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d413,
	       bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d423,
	       bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d427,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1583,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1653,
	       spliced_bits__h28040,
	       spliced_bits__h28109,
	       spliced_bits__h28178,
	       spliced_bits__h28247,
	       spliced_bits__h28316,
	       spliced_bits__h28385,
	       spliced_bits__h28454,
	       spliced_bits__h28523,
	       spliced_bits__h28592,
	       spliced_bits__h28661,
	       spliced_bits__h28730,
	       spliced_bits__h28799,
	       spliced_bits__h28868,
	       x__h26395;
  wire IF_bfloat_rg_exception_s1_39_EQ_3_52_THEN_IF_I_ETC___d802,
       IF_bfloat_rg_mant_s8_81_BITS_27_TO_26_82_EQ_0b_ETC___d1088,
       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1215,
       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1223,
       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1384,
       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1387,
       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1417,
       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1423,
       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1451,
       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1457,
       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1607,
       a__h36785,
       a__h38662,
       a__h42314,
       a__h42512,
       a__h44159,
       b__h42513,
       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d66,
       bfloat_rg_mult_mant_s7_59_ULE_bfloat_rg_mant_s_ETC___d861,
       cin__h21930,
       cin__h22880,
       cin__h36787,
       cin__h38527,
       cin__h38664,
       cin__h44024,
       cout__h35674,
       cout__h38845,
       cout__h39837,
       cout__h40684,
       cout__h44290,
       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1476,
       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1482,
       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1553,
       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1556,
       int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_109_BI_ETC___d1111,
       int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_109_BI_ETC___d1609,
       int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1835,
       int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1837,
       int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1831,
       int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1833,
       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1839,
       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1841,
       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1843,
       mul_sticky_bit__h25267,
       mul_sticky_bit__h25294,
       sum_BIT_0___h39684,
       x__h10047,
       x__h10111,
       x__h10213,
       x__h10280,
       x__h10392,
       x__h10394,
       x__h10396,
       x__h10463,
       x__h10527,
       x__h10613,
       x__h11247,
       x__h11249,
       x__h11316,
       x__h11380,
       x__h11482,
       x__h11549,
       x__h11661,
       x__h11663,
       x__h11665,
       x__h11732,
       x__h11796,
       x__h11882,
       x__h12542,
       x__h12609,
       x__h12929,
       x__h12931,
       x__h12998,
       x__h13062,
       x__h14065,
       x__h14067,
       x__h14134,
       x__h14198,
       x__h14302,
       x__h14369,
       x__h14481,
       x__h14483,
       x__h14485,
       x__h14552,
       x__h14616,
       x__h14702,
       x__h15452,
       x__h15518,
       x__h15825,
       x__h15827,
       x__h15891,
       x__h15952,
       x__h16663,
       x__h16665,
       x__h16732,
       x__h16796,
       x__h16899,
       x__h16966,
       x__h17078,
       x__h17080,
       x__h17082,
       x__h17149,
       x__h17213,
       x__h17299,
       x__h18200,
       x__h18298,
       x__h18394,
       x__h18491,
       x__h18587,
       x__h18684,
       x__h18780,
       x__h18877,
       x__h18973,
       x__h19070,
       x__h20246,
       x__h20313,
       x__h20633,
       x__h20635,
       x__h20702,
       x__h20766,
       x__h21115,
       x__h21117,
       x__h21184,
       x__h21248,
       x__h21396,
       x__h21463,
       x__h21575,
       x__h21577,
       x__h21579,
       x__h21646,
       x__h21710,
       x__h21796,
       x__h22062,
       x__h22064,
       x__h22131,
       x__h22195,
       x__h22346,
       x__h22413,
       x__h22525,
       x__h22527,
       x__h22529,
       x__h22596,
       x__h22660,
       x__h22746,
       x__h23014,
       x__h23016,
       x__h23081,
       x__h23142,
       x__h23291,
       x__h23355,
       x__h33782,
       x__h34065,
       x__h34084,
       x__h34331,
       x__h35688,
       x__h35690,
       x__h35692,
       x__h35747,
       x__h35900,
       x__h35964,
       x__h36050,
       x__h36168,
       x__h36323,
       x__h36325,
       x__h36392,
       x__h36456,
       x__h36531,
       x__h36598,
       x__h36827,
       x__h36872,
       x__h36874,
       x__h36876,
       x__h36878,
       x__h36932,
       x__h37053,
       x__h37174,
       x__h37295,
       x__h37471,
       x__h37513,
       x__h37574,
       x__h37804,
       x__h37806,
       x__h37870,
       x__h38003,
       x__h38213,
       x__h38549,
       x__h38551,
       x__h38553,
       x__h38555,
       x__h38704,
       x__h38788,
       x__h38790,
       x__h38792,
       x__h38794,
       x__h38859,
       x__h38861,
       x__h38863,
       x__h38968,
       x__h39032,
       x__h39118,
       x__h39289,
       x__h39291,
       x__h39358,
       x__h39422,
       x__h39497,
       x__h39564,
       x__h39717,
       x__h39853,
       x__h39855,
       x__h40004,
       x__h40065,
       x__h40297,
       x__h40361,
       x__h40698,
       x__h40700,
       x__h40702,
       x__h40807,
       x__h40871,
       x__h40957,
       x__h41128,
       x__h41130,
       x__h41197,
       x__h41261,
       x__h41336,
       x__h41403,
       x__h41506,
       x__h41548,
       x__h41609,
       x__h41691,
       x__h41858,
       x__h41860,
       x__h41924,
       x__h41985,
       x__h42057,
       x__h42121,
       x__h42227,
       x__h42356,
       x__h42425,
       x__h42554,
       x__h42620,
       x__h42622,
       x__h42771,
       x__h42832,
       x__h43064,
       x__h43128,
       x__h43450,
       x__h43638,
       x__h43707,
       x__h43733,
       x__h43775,
       x__h43836,
       x__h43918,
       x__h44046,
       x__h44048,
       x__h44050,
       x__h44052,
       x__h44233,
       x__h44235,
       x__h44237,
       x__h44304,
       x__h44306,
       x__h44308,
       x__h44413,
       x__h44477,
       x__h44563,
       x__h44734,
       x__h44736,
       x__h44803,
       x__h44867,
       x__h44942,
       x__h45009,
       x__h45194,
       x__h45258,
       x__h45344,
       x__h45515,
       x__h45517,
       x__h45584,
       x__h45648,
       x__h45723,
       x__h45790,
       x__h46012,
       x__h46054,
       x__h46115,
       x__h46197,
       x__h46475,
       x__h46536,
       x__h46832,
       x__h47190,
       x__h47192,
       x__h47256,
       x__h47317,
       x__h47389,
       x__h47453,
       x__h47616,
       x__h47618,
       x__h47682,
       x__h47743,
       x__h47815,
       x__h47879,
       x__h48241,
       x__h48305,
       x__h49239,
       x__h49241,
       x__h49243,
       x__h49418,
       x__h49482,
       x__h49568,
       x__h49699,
       x__h49701,
       x__h49703,
       x__h49878,
       x__h49942,
       x__h50028,
       x__h50159,
       x__h50161,
       x__h50163,
       x__h50338,
       x__h50402,
       x__h50488,
       x__h50618,
       x__h50620,
       x__h50622,
       x__h50731,
       x__h50795,
       x__h50881,
       x__h51011,
       x__h51013,
       x__h51015,
       x__h51124,
       x__h51188,
       x__h51274,
       x__h51404,
       x__h51406,
       x__h51408,
       x__h51517,
       x__h51581,
       x__h51667,
       x__h51798,
       x__h51800,
       x__h51909,
       x__h51973,
       x__h52213,
       x__h52280,
       x__h52651,
       x__h52653,
       x__h52720,
       x__h52784,
       x__h52859,
       x__h52926,
       x__h53091,
       x__h53093,
       x__h53160,
       x__h53224,
       x__h53299,
       x__h53366,
       x__h53531,
       x__h53533,
       x__h53600,
       x__h53664,
       x__h53739,
       x__h53806,
       x__h53971,
       x__h53973,
       x__h54040,
       x__h54104,
       x__h54179,
       x__h54246,
       x__h54411,
       x__h54413,
       x__h54480,
       x__h54544,
       x__h54619,
       x__h54686,
       x__h54851,
       x__h54853,
       x__h54920,
       x__h54984,
       x__h55059,
       x__h55126,
       x__h55291,
       x__h55293,
       x__h55360,
       x__h55424,
       x__h55499,
       x__h55566,
       x__h6363,
       x__h6365,
       x__h6432,
       x__h6496,
       x__h6646,
       x__h6713,
       x__h6825,
       x__h6827,
       x__h6829,
       x__h6896,
       x__h6960,
       x__h7046,
       x__h7624,
       x__h7626,
       x__h7628,
       x__h7652,
       x__h7692,
       x__h7753,
       x__h7852,
       x__h7916,
       x__h8026,
       x__h8028,
       x__h8030,
       x__h8032,
       x__h8094,
       x__h8155,
       x__h8237,
       x__h8982,
       x__h8984,
       x__h9051,
       x__h9115,
       x__h9217,
       x__h9284,
       x__h9396,
       x__h9398,
       x__h9400,
       x__h9467,
       x__h9531,
       x__h9617,
       x__h9978,
       x__h9980,
       y__h10214,
       y__h10216,
       y__h10334,
       y__h10393,
       y__h10395,
       y__h10397,
       y__h10399,
       y__h11248,
       y__h11250,
       y__h11252,
       y__h11483,
       y__h11485,
       y__h11603,
       y__h11662,
       y__h11664,
       y__h11666,
       y__h11668,
       y__h12543,
       y__h12545,
       y__h12751,
       y__h12930,
       y__h12932,
       y__h12934,
       y__h14066,
       y__h14068,
       y__h14070,
       y__h14303,
       y__h14305,
       y__h14423,
       y__h14482,
       y__h14484,
       y__h14486,
       y__h14488,
       y__h15453,
       y__h15455,
       y__h15654,
       y__h15826,
       y__h15828,
       y__h15830,
       y__h16664,
       y__h16666,
       y__h16668,
       y__h16900,
       y__h16902,
       y__h17020,
       y__h17079,
       y__h17081,
       y__h17083,
       y__h17085,
       y__h18299,
       y__h18492,
       y__h18685,
       y__h18878,
       y__h19071,
       y__h20247,
       y__h20249,
       y__h20455,
       y__h20634,
       y__h20636,
       y__h20638,
       y__h21116,
       y__h21118,
       y__h21120,
       y__h21397,
       y__h21399,
       y__h21517,
       y__h21576,
       y__h21578,
       y__h21580,
       y__h21582,
       y__h22063,
       y__h22065,
       y__h22067,
       y__h22347,
       y__h22349,
       y__h22467,
       y__h22526,
       y__h22528,
       y__h22530,
       y__h22532,
       y__h23015,
       y__h23017,
       y__h23019,
       y__h23292,
       y__h23294,
       y__h23407,
       y__h35689,
       y__h35691,
       y__h35693,
       y__h35695,
       y__h36324,
       y__h36326,
       y__h36328,
       y__h36532,
       y__h36534,
       y__h36652,
       y__h36873,
       y__h36875,
       y__h36877,
       y__h36879,
       y__h37472,
       y__h37514,
       y__h37516,
       y__h37575,
       y__h37577,
       y__h37658,
       y__h37805,
       y__h37807,
       y__h37809,
       y__h38004,
       y__h38006,
       y__h38214,
       y__h38550,
       y__h38552,
       y__h38554,
       y__h38556,
       y__h38789,
       y__h38791,
       y__h38793,
       y__h38795,
       y__h38860,
       y__h38862,
       y__h38864,
       y__h38866,
       y__h39290,
       y__h39292,
       y__h39294,
       y__h39498,
       y__h39500,
       y__h39618,
       y__h39854,
       y__h39856,
       y__h39858,
       y__h40066,
       y__h40298,
       y__h40300,
       y__h40497,
       y__h40699,
       y__h40701,
       y__h40703,
       y__h40705,
       y__h41129,
       y__h41131,
       y__h41133,
       y__h41337,
       y__h41339,
       y__h41457,
       y__h41507,
       y__h41549,
       y__h41551,
       y__h41610,
       y__h41612,
       y__h41693,
       y__h41859,
       y__h41861,
       y__h41863,
       y__h42058,
       y__h42060,
       y__h42173,
       y__h42228,
       y__h42426,
       y__h42621,
       y__h42623,
       y__h42625,
       y__h42833,
       y__h43065,
       y__h43067,
       y__h43264,
       y__h43451,
       y__h43708,
       y__h43734,
       y__h43776,
       y__h43778,
       y__h43837,
       y__h43839,
       y__h43920,
       y__h44047,
       y__h44049,
       y__h44051,
       y__h44053,
       y__h44234,
       y__h44236,
       y__h44238,
       y__h44240,
       y__h44305,
       y__h44307,
       y__h44309,
       y__h44311,
       y__h44735,
       y__h44737,
       y__h44739,
       y__h44943,
       y__h44945,
       y__h45063,
       y__h45516,
       y__h45518,
       y__h45520,
       y__h45724,
       y__h45726,
       y__h45844,
       y__h46013,
       y__h46057,
       y__h46537,
       y__h46769,
       y__h46968,
       y__h47191,
       y__h47193,
       y__h47195,
       y__h47390,
       y__h47392,
       y__h47505,
       y__h47617,
       y__h47619,
       y__h47621,
       y__h47816,
       y__h47818,
       y__h47931,
       y__h48069,
       y__h48109,
       y__h48111,
       y__h48171,
       y__h48242,
       y__h48244,
       y__h48357,
       y__h49240,
       y__h49242,
       y__h49244,
       y__h49246,
       y__h49700,
       y__h49702,
       y__h49704,
       y__h49706,
       y__h50160,
       y__h50162,
       y__h50164,
       y__h50166,
       y__h50619,
       y__h50621,
       y__h50623,
       y__h50625,
       y__h51012,
       y__h51014,
       y__h51016,
       y__h51018,
       y__h51405,
       y__h51407,
       y__h51409,
       y__h51411,
       y__h51799,
       y__h51801,
       y__h51803,
       y__h52214,
       y__h52216,
       y__h52422,
       y__h52652,
       y__h52654,
       y__h52656,
       y__h52860,
       y__h52862,
       y__h52980,
       y__h53092,
       y__h53094,
       y__h53096,
       y__h53300,
       y__h53302,
       y__h53420,
       y__h53532,
       y__h53534,
       y__h53536,
       y__h53740,
       y__h53742,
       y__h53860,
       y__h53972,
       y__h53974,
       y__h53976,
       y__h54180,
       y__h54182,
       y__h54300,
       y__h54412,
       y__h54414,
       y__h54416,
       y__h54620,
       y__h54622,
       y__h54740,
       y__h54852,
       y__h54854,
       y__h54856,
       y__h55060,
       y__h55062,
       y__h55180,
       y__h55292,
       y__h55294,
       y__h55296,
       y__h55500,
       y__h55502,
       y__h55620,
       y__h6364,
       y__h6366,
       y__h6368,
       y__h6647,
       y__h6649,
       y__h6767,
       y__h6826,
       y__h6828,
       y__h6830,
       y__h6832,
       y__h7625,
       y__h7627,
       y__h7629,
       y__h7853,
       y__h7855,
       y__h7968,
       y__h8027,
       y__h8029,
       y__h8031,
       y__h8033,
       y__h8983,
       y__h8985,
       y__h8987,
       y__h9218,
       y__h9220,
       y__h9338,
       y__h9397,
       y__h9399,
       y__h9401,
       y__h9403,
       y__h9979,
       y__h9981,
       y__h9983;

  // action method put_inp_A
  assign RDY_put_inp_A = 1'd1 ;
  assign CAN_FIRE_put_inp_A = 1'd1 ;
  assign WILL_FIRE_put_inp_A = EN_put_inp_A ;

  // action method put_inp_B
  assign RDY_put_inp_B = 1'd1 ;
  assign CAN_FIRE_put_inp_B = 1'd1 ;
  assign WILL_FIRE_put_inp_B = EN_put_inp_B ;

  // action method put_inp_C
  assign RDY_put_inp_C = 1'd1 ;
  assign CAN_FIRE_put_inp_C = 1'd1 ;
  assign WILL_FIRE_put_inp_C = EN_put_inp_C ;

  // action method put_inp_sel
  assign RDY_put_inp_sel = 1'd1 ;
  assign CAN_FIRE_put_inp_sel = 1'd1 ;
  assign WILL_FIRE_put_inp_sel = EN_put_inp_sel ;

  // value method get_mac_op
  assign get_mac_op = rg_out ;
  assign RDY_get_mac_op = 1'd1 ;

  // rule RL_out
  assign CAN_FIRE_RL_out = 1'd1 ;
  assign WILL_FIRE_RL_out = 1'd1 ;

  // rule RL_bfloat_stage10
  assign CAN_FIRE_RL_bfloat_stage10 = bfloat_rg_s10_valid ;
  assign WILL_FIRE_RL_bfloat_stage10 = bfloat_rg_s10_valid ;

  // rule RL_bfloat_stage9
  assign CAN_FIRE_RL_bfloat_stage9 = bfloat_rg_s9_valid ;
  assign WILL_FIRE_RL_bfloat_stage9 = bfloat_rg_s9_valid ;

  // rule RL_bfloat_stage8
  assign CAN_FIRE_RL_bfloat_stage8 = bfloat_rg_s8_valid ;
  assign WILL_FIRE_RL_bfloat_stage8 = bfloat_rg_s8_valid ;

  // rule RL_bfloat_stage7
  assign CAN_FIRE_RL_bfloat_stage7 = bfloat_rg_s7_valid ;
  assign WILL_FIRE_RL_bfloat_stage7 = bfloat_rg_s7_valid ;

  // rule RL_bfloat_stage6
  assign CAN_FIRE_RL_bfloat_stage6 = bfloat_rg_s6_valid ;
  assign WILL_FIRE_RL_bfloat_stage6 = bfloat_rg_s6_valid ;

  // rule RL_bfloat_stage5
  assign CAN_FIRE_RL_bfloat_stage5 = bfloat_rg_s5_valid ;
  assign WILL_FIRE_RL_bfloat_stage5 = bfloat_rg_s5_valid ;

  // rule RL_bfloat_stage4
  assign CAN_FIRE_RL_bfloat_stage4 = bfloat_rg_s4_valid ;
  assign WILL_FIRE_RL_bfloat_stage4 = bfloat_rg_s4_valid ;

  // rule RL_bfloat_stage3
  assign CAN_FIRE_RL_bfloat_stage3 = bfloat_rg_s3_valid ;
  assign WILL_FIRE_RL_bfloat_stage3 = bfloat_rg_s3_valid ;

  // rule RL_bfloat_stage2
  assign CAN_FIRE_RL_bfloat_stage2 = bfloat_rg_s2_valid ;
  assign WILL_FIRE_RL_bfloat_stage2 = bfloat_rg_s2_valid ;

  // rule RL_bfloat_stage1
  assign CAN_FIRE_RL_bfloat_stage1 = bfloat_rg_s1_valid ;
  assign WILL_FIRE_RL_bfloat_stage1 = bfloat_rg_s1_valid ;

  // rule RL_bfloat_rg_s2_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_s2_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_s2_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_rg_s3_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_s3_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_s3_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_rg_s4_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_s4_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_s4_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_rg_s5_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_s5_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_s5_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_rg_s6_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_s6_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_s6_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_rg_s7_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_s7_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_s7_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_rg_s8_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_s8_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_s8_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_rg_s9_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_s9_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_s9_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_rg_s10_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_s10_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_s10_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_rg_out_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_out_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_out_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_obj_unsignedmult_s4
  assign CAN_FIRE_RL_bfloat_obj_unsignedmult_s4 =
	     bfloat_obj_unsignedmult_rg_s4_val ;
  assign WILL_FIRE_RL_bfloat_obj_unsignedmult_s4 =
	     bfloat_obj_unsignedmult_rg_s4_val ;

  // rule RL_bfloat_obj_unsignedmult_s3
  assign CAN_FIRE_RL_bfloat_obj_unsignedmult_s3 =
	     bfloat_obj_unsignedmult_rg_s3_val ;
  assign WILL_FIRE_RL_bfloat_obj_unsignedmult_s3 =
	     bfloat_obj_unsignedmult_rg_s3_val ;

  // rule RL_bfloat_obj_unsignedmult_s2
  assign CAN_FIRE_RL_bfloat_obj_unsignedmult_s2 = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_obj_unsignedmult_s2 = 1'd1 ;

  // rule RL_bfloat_obj_unsignedmult_s1
  assign CAN_FIRE_RL_bfloat_obj_unsignedmult_s1 =
	     bfloat_obj_unsignedmult_rg_s1_val ;
  assign WILL_FIRE_RL_bfloat_obj_unsignedmult_s1 =
	     bfloat_obj_unsignedmult_rg_s1_val ;

  // rule RL_bfloat_obj_unsignedmult_rg_s2_val__dreg_update
  assign CAN_FIRE_RL_bfloat_obj_unsignedmult_rg_s2_val__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_obj_unsignedmult_rg_s2_val__dreg_update = 1'd1 ;

  // rule RL_bfloat_obj_unsignedmult_rg_s3_val__dreg_update
  assign CAN_FIRE_RL_bfloat_obj_unsignedmult_rg_s3_val__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_obj_unsignedmult_rg_s3_val__dreg_update = 1'd1 ;

  // rule RL_bfloat_obj_unsignedmult_rg_s4_val__dreg_update
  assign CAN_FIRE_RL_bfloat_obj_unsignedmult_rg_s4_val__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_obj_unsignedmult_rg_s4_val__dreg_update = 1'd1 ;

  // rule RL_bfloat_obj_unsignedmult_rg_s5_val__dreg_update
  assign CAN_FIRE_RL_bfloat_obj_unsignedmult_rg_s5_val__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_obj_unsignedmult_rg_s5_val__dreg_update = 1'd1 ;

  // rule RL_int_8_add
  assign CAN_FIRE_RL_int_8_add = 1'd1 ;
  assign WILL_FIRE_RL_int_8_add = 1'd1 ;

  // rule RL_int_8_multiply
  assign CAN_FIRE_RL_int_8_multiply = 1'd1 ;
  assign WILL_FIRE_RL_int_8_multiply = 1'd1 ;

  // rule RL_inp
  assign CAN_FIRE_RL_inp = 1'd1 ;
  assign WILL_FIRE_RL_inp = 1'd1 ;

  // rule RL_bfloat_rg_s1_valid__dreg_update
  assign CAN_FIRE_RL_bfloat_rg_s1_valid__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_rg_s1_valid__dreg_update = 1'd1 ;

  // rule RL_bfloat_obj_unsignedmult_rg_s1_val__dreg_update
  assign CAN_FIRE_RL_bfloat_obj_unsignedmult_rg_s1_val__dreg_update = 1'd1 ;
  assign WILL_FIRE_RL_bfloat_obj_unsignedmult_rg_s1_val__dreg_update = 1'd1 ;

  // register bfloat_guard_bit_s9
  assign bfloat_guard_bit_s9_D_IN =
	     bfloat_rg_exception_s8 == 2'b0 &&
	     ((bfloat_rg_mant_s8[27:26] == 2'b0) ?
		mantissa__h27163[3] :
		(bfloat_rg_mant_s8[27] ?
		   bfloat_rg_mant_s8[4] :
		   bfloat_rg_mant_s8[3])) ;
  assign bfloat_guard_bit_s9_EN = bfloat_rg_s9_valid ;

  // register bfloat_obj_unsignedmult_rg_a
  assign bfloat_obj_unsignedmult_rg_a_D_IN = { 1'b1, rg_A[6:0] } ;
  assign bfloat_obj_unsignedmult_rg_a_EN = !rg_sel ;

  // register bfloat_obj_unsignedmult_rg_b
  assign bfloat_obj_unsignedmult_rg_b_D_IN = { 1'b1, rg_B[6:0] } ;
  assign bfloat_obj_unsignedmult_rg_b_EN = !rg_sel ;

  // register bfloat_obj_unsignedmult_rg_s1_op_0
  assign bfloat_obj_unsignedmult_rg_s1_op_0_D_IN =
	     { 1'd0,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d54[7],
	       1'b0,
	       x__h8026 | y__h8027,
	       spliced_bits__h5886,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123[7],
	       x__h6825 | y__h6826,
	       spliced_bits__h5937,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123[1:0] } ;
  assign bfloat_obj_unsignedmult_rg_s1_op_0_EN =
	     bfloat_obj_unsignedmult_rg_s1_val ;

  // register bfloat_obj_unsignedmult_rg_s1_op_1
  assign bfloat_obj_unsignedmult_rg_s1_op_1_D_IN =
	     { 1'd0,
	       x__h10392 | y__h10393,
	       spliced_bits__h8727,
	       1'd0,
	       x__h9396 | y__h9397,
	       spliced_bits__h8778,
	       spliced_bits__h8676 } ;
  assign bfloat_obj_unsignedmult_rg_s1_op_1_EN =
	     bfloat_obj_unsignedmult_rg_s1_val ;

  // register bfloat_obj_unsignedmult_rg_s1_op_2
  assign bfloat_obj_unsignedmult_rg_s1_op_2_D_IN =
	     { 3'd0,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[7],
	       1'b0,
	       x__h11661 | y__h11662,
	       spliced_bits__h11043,
	       spliced_bits__h10957 } ;
  assign bfloat_obj_unsignedmult_rg_s1_op_2_EN =
	     bfloat_obj_unsignedmult_rg_s1_val ;

  // register bfloat_obj_unsignedmult_rg_s1_op_3
  assign bfloat_obj_unsignedmult_rg_s1_op_3_D_IN =
	     { 5'd0,
	       x__h12929 | y__h12930,
	       spliced_bits__h12308,
	       spliced_bits__h12223 } ;
  assign bfloat_obj_unsignedmult_rg_s1_op_3_EN =
	     bfloat_obj_unsignedmult_rg_s1_val ;

  // register bfloat_obj_unsignedmult_rg_s1_op_4
  assign bfloat_obj_unsignedmult_rg_s1_op_4_D_IN =
	     { 8'd0,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96[6],
	       7'b0 } ;
  assign bfloat_obj_unsignedmult_rg_s1_op_4_EN =
	     bfloat_obj_unsignedmult_rg_s1_val ;

  // register bfloat_obj_unsignedmult_rg_s1_val
  assign bfloat_obj_unsignedmult_rg_s1_val_D_IN = !rg_sel ;
  assign bfloat_obj_unsignedmult_rg_s1_val_EN = 1'd1 ;

  // register bfloat_obj_unsignedmult_rg_s2_op_0
  assign bfloat_obj_unsignedmult_rg_s2_op_0_D_IN =
	     { 1'd0,
	       bfloat_obj_unsignedmult_rg_s1_op_0[14],
	       bfloat_obj_unsignedmult_rg_s1_op_1[13],
	       bfloat_obj_unsignedmult_rg_s1_op_0[12:9],
	       bfloat_obj_unsignedmult_rg_s1_op_4[8],
	       x__h14481 | y__h14482,
	       spliced_bits__h13852,
	       bfloat_obj_unsignedmult_rg_s1_op_0[2:0] } ;
  assign bfloat_obj_unsignedmult_rg_s2_op_0_EN = 1'd1 ;

  // register bfloat_obj_unsignedmult_rg_s2_op_1
  assign bfloat_obj_unsignedmult_rg_s2_op_1_D_IN =
	     { 1'd0,
	       bfloat_obj_unsignedmult_rg_s1_op_1[14],
	       1'b0,
	       bfloat_obj_unsignedmult_rg_s1_op_1[12:10],
	       x__h15825 | y__h15826,
	       spliced_bits__h15186,
	       3'd0,
	       bfloat_obj_unsignedmult_rg_s1_op_1[1],
	       1'b0 } ;
  assign bfloat_obj_unsignedmult_rg_s2_op_1_EN = 1'd1 ;

  // register bfloat_obj_unsignedmult_rg_s2_op_2
  assign bfloat_obj_unsignedmult_rg_s2_op_2_D_IN =
	     { 3'd0,
	       bfloat_obj_unsignedmult_rg_s1_op_2[12],
	       x__h17078 | y__h17079,
	       spliced_bits__h16457,
	       7'd0 } ;
  assign bfloat_obj_unsignedmult_rg_s2_op_2_EN = 1'd1 ;

  // register bfloat_obj_unsignedmult_rg_s2_val
  assign bfloat_obj_unsignedmult_rg_s2_val_D_IN =
	     bfloat_obj_unsignedmult_rg_s1_val ;
  assign bfloat_obj_unsignedmult_rg_s2_val_EN = 1'd1 ;

  // register bfloat_obj_unsignedmult_rg_s3_op_0
  assign bfloat_obj_unsignedmult_rg_s3_op_0_D_IN =
	     { 1'd0,
	       bfloat_obj_unsignedmult_rg_s2_op_0[14:13],
	       x__h18973 ^ bfloat_obj_unsignedmult_rg_s2_op_2[12],
	       x__h18780 ^ bfloat_obj_unsignedmult_rg_s2_op_2[11],
	       bfloat_obj_unsignedmult_rg_s2_op_0_94_BIT_10_0_ETC___d528,
	       bfloat_obj_unsignedmult_rg_s2_op_0[6:0] } ;
  assign bfloat_obj_unsignedmult_rg_s3_op_0_EN =
	     bfloat_obj_unsignedmult_rg_s3_val ;

  // register bfloat_obj_unsignedmult_rg_s3_op_1
  assign bfloat_obj_unsignedmult_rg_s3_op_1_D_IN =
	     { 1'd0,
	       bfloat_obj_unsignedmult_rg_s2_op_1[14],
	       bfloat_obj_unsignedmult_rg_s2_op_0_94_BIT_12_9_ETC___d552,
	       spliced_bits__h19266 } ;
  assign bfloat_obj_unsignedmult_rg_s3_op_1_EN =
	     bfloat_obj_unsignedmult_rg_s3_val ;

  // register bfloat_obj_unsignedmult_rg_s3_val
  assign bfloat_obj_unsignedmult_rg_s3_val_D_IN = 1'b1 ;
  assign bfloat_obj_unsignedmult_rg_s3_val_EN = 1'd1 ;

  // register bfloat_obj_unsignedmult_rg_s4_op
  assign bfloat_obj_unsignedmult_rg_s4_op_D_IN =
	     { spliced_bits__h19955,
	       spliced_bits__h19983,
	       spliced_bits__h20011,
	       spliced_bits__h20039 } ;
  assign bfloat_obj_unsignedmult_rg_s4_op_EN =
	     bfloat_obj_unsignedmult_rg_s4_val ;

  // register bfloat_obj_unsignedmult_rg_s4_val
  assign bfloat_obj_unsignedmult_rg_s4_val_D_IN =
	     bfloat_obj_unsignedmult_rg_s3_val ;
  assign bfloat_obj_unsignedmult_rg_s4_val_EN = 1'd1 ;

  // register bfloat_obj_unsignedmult_rg_s5_val
  assign bfloat_obj_unsignedmult_rg_s5_val_D_IN =
	     bfloat_obj_unsignedmult_rg_s4_val ;
  assign bfloat_obj_unsignedmult_rg_s5_val_EN = 1'd1 ;

  // register bfloat_out
  assign bfloat_out_D_IN =
	     { bfloat_rg_sign_s9,
	       bfloat_rg_exponent_s9,
	       CASE_grs4745_0b11_bfloat_rg_mant_s9_102_BITS_2_ETC__q6 } ;
  assign bfloat_out_EN = bfloat_rg_s10_valid ;

  // register bfloat_rg_A
  assign bfloat_rg_A_D_IN = rg_A ;
  assign bfloat_rg_A_EN = !rg_sel ;

  // register bfloat_rg_B
  assign bfloat_rg_B_D_IN = rg_B ;
  assign bfloat_rg_B_EN = !rg_sel ;

  // register bfloat_rg_C
  assign bfloat_rg_C_D_IN = rg_C ;
  assign bfloat_rg_C_EN = !rg_sel ;

  // register bfloat_rg_C_s1
  assign bfloat_rg_C_s1_D_IN = bfloat_rg_C ;
  assign bfloat_rg_C_s1_EN = bfloat_rg_s1_valid ;

  // register bfloat_rg_C_s2
  assign bfloat_rg_C_s2_D_IN = bfloat_rg_C_s1 ;
  assign bfloat_rg_C_s2_EN = bfloat_rg_s2_valid ;

  // register bfloat_rg_C_s3
  assign bfloat_rg_C_s3_D_IN = bfloat_rg_C_s2 ;
  assign bfloat_rg_C_s3_EN = bfloat_rg_s3_valid ;

  // register bfloat_rg_C_s4
  assign bfloat_rg_C_s4_D_IN = bfloat_rg_C_s3 ;
  assign bfloat_rg_C_s4_EN = bfloat_rg_s4_valid ;

  // register bfloat_rg_C_s5
  assign bfloat_rg_C_s5_D_IN =
	     IF_bfloat_rg_exception_s1_39_EQ_3_52_THEN_IF_I_ETC___d802 ?
	       mul_result__h25086 :
	       bfloat_rg_C_s4 ;
  assign bfloat_rg_C_s5_EN = bfloat_rg_s5_valid ;

  // register bfloat_rg_C_s6
  assign bfloat_rg_C_s6_D_IN =
	     (bfloat_rg_mult_s5[30:23] != 8'd255 &&
	      bfloat_rg_C_s5[30:23] != 8'd255) ?
	       ((bfloat_rg_mult_s5[30:23] != 8'd0 ||
		 bfloat_rg_C_s5[30:23] != 8'd0) ?
		  bfloat_rg_C_s5 :
		  x__h25935) :
	       x__h26236 ;
  assign bfloat_rg_C_s6_EN = bfloat_rg_s6_valid ;

  // register bfloat_rg_C_s7
  assign bfloat_rg_C_s7_D_IN = bfloat_rg_C_s6 ;
  assign bfloat_rg_C_s7_EN = bfloat_rg_s7_valid ;

  // register bfloat_rg_exception_s1
  assign bfloat_rg_exception_s1_D_IN =
	     (bfloat_rg_A[14:7] == 8'd255 && bfloat_rg_B[14:7] == 8'd0 ||
	      bfloat_rg_A[14:7] == 8'd0 && bfloat_rg_B[14:7] == 8'd255) ?
	       2'd0 :
	       ((bfloat_rg_A[14:7] == 8'd0 || bfloat_rg_B[14:7] == 8'd0) ?
		  2'd1 :
		  ((bfloat_rg_A[14:7] == 8'd255 ||
		    bfloat_rg_B[14:7] == 8'd255) ?
		     2'd2 :
		     2'd3)) ;
  assign bfloat_rg_exception_s1_EN = bfloat_rg_s1_valid ;

  // register bfloat_rg_exception_s2
  assign bfloat_rg_exception_s2_D_IN = bfloat_rg_exception_s1 ;
  assign bfloat_rg_exception_s2_EN = bfloat_rg_s2_valid ;

  // register bfloat_rg_exception_s3
  assign bfloat_rg_exception_s3_D_IN = bfloat_rg_exception_s2 ;
  assign bfloat_rg_exception_s3_EN = bfloat_rg_s3_valid ;

  // register bfloat_rg_exception_s4
  assign bfloat_rg_exception_s4_D_IN = bfloat_rg_exception_s3 ;
  assign bfloat_rg_exception_s4_EN = bfloat_rg_s4_valid ;

  // register bfloat_rg_exception_s6
  assign bfloat_rg_exception_s6_D_IN =
	     (bfloat_rg_mult_s5[30:23] != 8'd255 &&
	      bfloat_rg_C_s5[30:23] != 8'd255) ?
	       2'd0 :
	       x__h26395 ;
  assign bfloat_rg_exception_s6_EN = bfloat_rg_s6_valid ;

  // register bfloat_rg_exception_s7
  assign bfloat_rg_exception_s7_D_IN = bfloat_rg_exception_s6 ;
  assign bfloat_rg_exception_s7_EN = bfloat_rg_s7_valid ;

  // register bfloat_rg_exception_s8
  assign bfloat_rg_exception_s8_D_IN = bfloat_rg_exception_s7 ;
  assign bfloat_rg_exception_s8_EN = bfloat_rg_s8_valid ;

  // register bfloat_rg_exp_add_s1
  assign bfloat_rg_exp_add_s1_D_IN =
	     (bfloat_rg_A[14:7] == 8'd255 && bfloat_rg_B[14:7] == 8'd0 ||
	      bfloat_rg_A[14:7] == 8'd0 && bfloat_rg_B[14:7] == 8'd255) ?
	       8'd255 :
	       y_avValue_snd__h24251 ;
  assign bfloat_rg_exp_add_s1_EN = bfloat_rg_s1_valid ;

  // register bfloat_rg_exp_add_s2
  assign bfloat_rg_exp_add_s2_D_IN = bfloat_rg_exp_add_s1 ;
  assign bfloat_rg_exp_add_s2_EN = bfloat_rg_s2_valid ;

  // register bfloat_rg_exp_add_s3
  assign bfloat_rg_exp_add_s3_D_IN = bfloat_rg_exp_add_s2 ;
  assign bfloat_rg_exp_add_s3_EN = bfloat_rg_s3_valid ;

  // register bfloat_rg_exp_add_s4
  assign bfloat_rg_exp_add_s4_D_IN = bfloat_rg_exp_add_s3 ;
  assign bfloat_rg_exp_add_s4_EN = bfloat_rg_s4_valid ;

  // register bfloat_rg_exp_diff_s6
  assign bfloat_rg_exp_diff_s6_D_IN =
	     (bfloat_rg_mult_s5[30:23] != 8'd255 &&
	      bfloat_rg_C_s5[30:23] != 8'd255) ?
	       exp_diff_s6__h25712 :
	       8'd255 ;
  assign bfloat_rg_exp_diff_s6_EN = bfloat_rg_s6_valid ;

  // register bfloat_rg_exp_diff_s7
  assign bfloat_rg_exp_diff_s7_D_IN = bfloat_rg_exp_diff_s6 ;
  assign bfloat_rg_exp_diff_s7_EN = bfloat_rg_s7_valid ;

  // register bfloat_rg_exponent_s8
  assign bfloat_rg_exponent_s8_D_IN = bfloat_rg_mult_s7[30:23] ;
  assign bfloat_rg_exponent_s8_EN = bfloat_rg_s8_valid ;

  // register bfloat_rg_exponent_s9
  assign bfloat_rg_exponent_s9_D_IN =
	     (bfloat_rg_exception_s8 == 2'b0) ?
	       IF_bfloat_rg_mant_s8_81_BITS_27_TO_26_82_EQ_0b_ETC___d1070 :
	       8'd255 ;
  assign bfloat_rg_exponent_s9_EN = bfloat_rg_s9_valid ;

  // register bfloat_rg_mant_s8
  assign bfloat_rg_mant_s8_D_IN =
	     IF_bfloat_rg_mult_s7_64_BIT_31_65_XOR_bfloat_r_ETC___d875[27:0] ;
  assign bfloat_rg_mant_s8_EN = bfloat_rg_s8_valid ;

  // register bfloat_rg_mant_s9
  always@(bfloat_rg_exception_s8 or
	  IF_bfloat_rg_mant_s8_81_BITS_27_TO_26_82_EQ_0b_ETC___d1061)
  begin
    case (bfloat_rg_exception_s8)
      2'b0:
	  bfloat_rg_mant_s9_D_IN =
	      IF_bfloat_rg_mant_s8_81_BITS_27_TO_26_82_EQ_0b_ETC___d1061;
      2'b01: bfloat_rg_mant_s9_D_IN = 27'd67108864;
      default: bfloat_rg_mant_s9_D_IN = 27'd0;
    endcase
  end
  assign bfloat_rg_mant_s9_EN = bfloat_rg_s9_valid ;

  // register bfloat_rg_mant_shift_s7
  assign bfloat_rg_mant_shift_s7_D_IN =
	     { 1'b1, c_mant_s7__h26489 } >> bfloat_rg_exp_diff_s6 ;
  assign bfloat_rg_mant_shift_s7_EN = bfloat_rg_s7_valid ;

  // register bfloat_rg_mult_mant_s7
  assign bfloat_rg_mult_mant_s7_D_IN =
	     { 1'b1, bfloat_rg_mult_s6[22:0], 3'b0 } ;
  assign bfloat_rg_mult_mant_s7_EN = bfloat_rg_s7_valid ;

  // register bfloat_rg_mult_s5
  assign bfloat_rg_mult_s5_D_IN =
	     IF_bfloat_rg_exception_s1_39_EQ_3_52_THEN_IF_I_ETC___d802 ?
	       bfloat_rg_C_s4 :
	       mul_result__h25086 ;
  assign bfloat_rg_mult_s5_EN = bfloat_rg_s5_valid ;

  // register bfloat_rg_mult_s6
  assign bfloat_rg_mult_s6_D_IN =
	     (bfloat_rg_mult_s5[30:23] != 8'd255 &&
	      bfloat_rg_C_s5[30:23] != 8'd255) ?
	       ((bfloat_rg_mult_s5[30:23] != 8'd0 ||
		 bfloat_rg_C_s5[30:23] != 8'd0) ?
		  bfloat_rg_mult_s5 :
		  x__h25881) :
	       x__h25994 ;
  assign bfloat_rg_mult_s6_EN = bfloat_rg_s6_valid ;

  // register bfloat_rg_mult_s7
  assign bfloat_rg_mult_s7_D_IN = bfloat_rg_mult_s6 ;
  assign bfloat_rg_mult_s7_EN = bfloat_rg_s7_valid ;

  // register bfloat_rg_out_valid
  assign bfloat_rg_out_valid_D_IN = bfloat_rg_s10_valid ;
  assign bfloat_rg_out_valid_EN = 1'd1 ;

  // register bfloat_rg_s10_valid
  assign bfloat_rg_s10_valid_D_IN = bfloat_rg_s9_valid ;
  assign bfloat_rg_s10_valid_EN = 1'd1 ;

  // register bfloat_rg_s1_valid
  assign bfloat_rg_s1_valid_D_IN = !rg_sel ;
  assign bfloat_rg_s1_valid_EN = 1'd1 ;

  // register bfloat_rg_s2_valid
  assign bfloat_rg_s2_valid_D_IN = bfloat_rg_s1_valid ;
  assign bfloat_rg_s2_valid_EN = 1'd1 ;

  // register bfloat_rg_s3_valid
  assign bfloat_rg_s3_valid_D_IN = bfloat_rg_s2_valid ;
  assign bfloat_rg_s3_valid_EN = 1'd1 ;

  // register bfloat_rg_s4_valid
  assign bfloat_rg_s4_valid_D_IN = bfloat_rg_s3_valid ;
  assign bfloat_rg_s4_valid_EN = 1'd1 ;

  // register bfloat_rg_s5_valid
  assign bfloat_rg_s5_valid_D_IN = bfloat_rg_s4_valid ;
  assign bfloat_rg_s5_valid_EN = 1'd1 ;

  // register bfloat_rg_s6_valid
  assign bfloat_rg_s6_valid_D_IN = bfloat_rg_s5_valid ;
  assign bfloat_rg_s6_valid_EN = 1'd1 ;

  // register bfloat_rg_s7_valid
  assign bfloat_rg_s7_valid_D_IN = bfloat_rg_s6_valid ;
  assign bfloat_rg_s7_valid_EN = 1'd1 ;

  // register bfloat_rg_s8_valid
  assign bfloat_rg_s8_valid_D_IN = bfloat_rg_s7_valid ;
  assign bfloat_rg_s8_valid_EN = 1'd1 ;

  // register bfloat_rg_s9_valid
  assign bfloat_rg_s9_valid_D_IN = bfloat_rg_s8_valid ;
  assign bfloat_rg_s9_valid_EN = 1'd1 ;

  // register bfloat_rg_sign_s1
  assign bfloat_rg_sign_s1_D_IN = bfloat_rg_A[15] ^ bfloat_rg_B[15] ;
  assign bfloat_rg_sign_s1_EN = bfloat_rg_s1_valid ;

  // register bfloat_rg_sign_s2
  assign bfloat_rg_sign_s2_D_IN = bfloat_rg_sign_s1 ;
  assign bfloat_rg_sign_s2_EN = bfloat_rg_s2_valid ;

  // register bfloat_rg_sign_s3
  assign bfloat_rg_sign_s3_D_IN = bfloat_rg_sign_s2 ;
  assign bfloat_rg_sign_s3_EN = bfloat_rg_s3_valid ;

  // register bfloat_rg_sign_s4
  assign bfloat_rg_sign_s4_D_IN = bfloat_rg_sign_s3 ;
  assign bfloat_rg_sign_s4_EN = bfloat_rg_s4_valid ;

  // register bfloat_rg_sign_s8
  assign bfloat_rg_sign_s8_D_IN =
	     bfloat_rg_mult_mant_s7_59_ULE_bfloat_rg_mant_s_ETC___d861 ?
	       bfloat_rg_C_s7[31] :
	       bfloat_rg_mult_s7[31] ;
  assign bfloat_rg_sign_s8_EN = bfloat_rg_s8_valid ;

  // register bfloat_rg_sign_s9
  assign bfloat_rg_sign_s9_D_IN = bfloat_rg_sign_s8 ;
  assign bfloat_rg_sign_s9_EN = bfloat_rg_s9_valid ;

  // register bfloat_round_bit_s9
  assign bfloat_round_bit_s9_D_IN =
	     bfloat_rg_exception_s8 == 2'b0 &&
	     ((bfloat_rg_mant_s8[27:26] == 2'b0) ?
		mantissa__h27163[2] :
		(bfloat_rg_mant_s8[27] ?
		   bfloat_rg_mant_s8[3] :
		   bfloat_rg_mant_s8[2])) ;
  assign bfloat_round_bit_s9_EN = bfloat_rg_s9_valid ;

  // register bfloat_sticky_bit_s9
  assign bfloat_sticky_bit_s9_D_IN =
	     bfloat_rg_exception_s8 == 2'b0 &&
	     IF_bfloat_rg_mant_s8_81_BITS_27_TO_26_82_EQ_0b_ETC___d1088 ;
  assign bfloat_sticky_bit_s9_EN = bfloat_rg_s9_valid ;

  // register int_8_out
  assign int_8_out_D_IN =
	     { sum__h48764,
	       sum__h49226,
	       sum__h49686,
	       sum__h50146,
	       sum__h50605,
	       sum__h50998,
	       sum__h51391,
	       sum__h51783 } ;
  assign int_8_out_EN = 1'd1 ;

  // register int_8_rg_a
  assign int_8_rg_a_D_IN = rg_A[7:0] ;
  assign int_8_rg_a_EN = rg_sel ;

  // register int_8_rg_b
  assign int_8_rg_b_D_IN = rg_B[7:0] ;
  assign int_8_rg_b_EN = rg_sel ;

  // register int_8_rg_c
  assign int_8_rg_c_D_IN = rg_C ;
  assign int_8_rg_c_EN = rg_sel ;

  // register int_8_rg_c1
  assign int_8_rg_c1_D_IN = int_8_rg_c ;
  assign int_8_rg_c1_EN = 1'd1 ;

  // register int_8_rg_prod1
  assign int_8_rg_prod1_D_IN =
	     { sum__h35480[2:0],
	       x__h43733 ^ (x__h47616 | y__h47617),
	       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1667 } ;
  assign int_8_rg_prod1_EN = 1'd1 ;

  // register rg_A
  assign rg_A_D_IN = put_inp_A_a ;
  assign rg_A_EN = EN_put_inp_A ;

  // register rg_B
  assign rg_B_D_IN = put_inp_B_b ;
  assign rg_B_EN = EN_put_inp_B ;

  // register rg_C
  assign rg_C_D_IN = put_inp_C_c ;
  assign rg_C_EN = EN_put_inp_C ;

  // register rg_out
  assign rg_out_D_IN = rg_sel ? int_8_out : x__h56194 ;
  assign rg_out_EN = 1'd1 ;

  // register rg_sel
  assign rg_sel_D_IN = put_inp_sel_sel ;
  assign rg_sel_EN = EN_put_inp_sel ;

  // remaining internal signals
  assign IF_IF_IF_IF_bfloat_rg_mant_s8_81_BIT_25_85_THE_ETC___d979 =
	     (spliced_bits__h27539[3] & spliced_bits__h27512[3]) ?
	       5'b10000 :
	       ((~spliced_bits__h27539[3]) ?
		  { 1'b0, spliced_bits__h27539 } :
		  { 2'b01, spliced_bits__h27512[2:0] }) ;
  assign IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755 =
	     bfloat_obj_unsignedmult_rg_s5_val ?
	       bfloat_obj_unsignedmult_rg_s4_op :
	       16'd0 ;
  assign IF_bfloat_rg_exception_s1_39_EQ_3_52_THEN_IF_I_ETC___d798 =
	     (bfloat_rg_exception_s1 == 2'd3) ?
	       { _theResult_____1__h25196,
		 IF_theResult_____15196_EQ_255_THEN_0_ELSE_IF_I_ETC__q2[22:0] } :
	       { CASE_bfloat_rg_exception_s1_1_0_2_255_255__q3,
		 CASE_bfloat_rg_exception_s1_1_0_2_0_4194304__q4 } ;
  assign IF_bfloat_rg_exception_s1_39_EQ_3_52_THEN_IF_I_ETC___d802 =
	     IF_bfloat_rg_exception_s1_39_EQ_3_52_THEN_IF_I_ETC___d798[30:23] <
	     bfloat_rg_C_s4[30:23] ;
  assign IF_bfloat_rg_mant_s8_81_BITS_27_TO_26_82_EQ_0b_ETC___d1061 =
	     (bfloat_rg_mant_s8[27:26] == 2'b0) ?
	       x__h27234 :
	       (bfloat_rg_mant_s8[27] ? bfloat_rg_mant_s8[26:0] : x__h33483) ;
  assign IF_bfloat_rg_mant_s8_81_BITS_27_TO_26_82_EQ_0b_ETC___d1070 =
	     (bfloat_rg_mant_s8[27:26] == 2'b0) ?
	       exponent__h27162 :
	       (bfloat_rg_mant_s8[27] ?
		  exponent__h27191 :
		  bfloat_rg_exponent_s8) ;
  assign IF_bfloat_rg_mant_s8_81_BITS_27_TO_26_82_EQ_0b_ETC___d1088 =
	     (bfloat_rg_mant_s8[27:26] == 2'b0) ?
	       x__h33782 :
	       (bfloat_rg_mant_s8[27] ? x__h34065 : x__h34331) ;
  assign IF_bfloat_rg_mult_s7_64_BIT_31_65_XOR_bfloat_r_ETC___d875 =
	     (bfloat_rg_mult_s7[31] ^ bfloat_rg_C_s7[31]) ?
	       a_temp__h26821 - b_temp__h26822 :
	       a_temp__h26821 + b_temp__h26822 ;
  assign IF_theResult_____15196_EQ_255_THEN_0_ELSE_IF_I_ETC__q2 =
	     (_theResult_____1__h25196 == 8'd255) ?
	       24'd0 :
	       { IF_IF_IF_bfloat_obj_unsignedmult_rg_s5_val_53__ETC___d778[7:0],
		 16'd0 } ;
  assign IF_x0633_OR_y0634_THEN_1_ELSE_0__q1 =
	     (x__h20633 | y__h20634) ? 4'd1 : 4'd0 ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124 =
	     rg_a__h35664 & INV_x5597__q5[6:3] ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1166 =
	     { x__h36323 | y__h36324,
	       x__h36531 | y__h36532,
	       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124[0] |
	       y__h36652,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[5] } ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1215 =
	     x__h38213 | y__h38214 ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1223 =
	     x__h36827 ^ cin__h36787 ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1384 =
	     x__h42227 | y__h42228 ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1387 =
	     x__h38704 ^ cin__h38664 ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1417 =
	     x__h42425 | y__h42426 ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1423 =
	     x__h42356 ^ sum__h38775[3] ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1451 =
	     x__h43450 | y__h43451 ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1457 =
	     x__h42554 ^ sum__h38775[2] ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1607 =
	     x__h38549 | y__h38550 ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1666 =
	     { y__h43920 ^ cin__h38527,
	       x__h46012 ^ (x__h47190 | y__h47191),
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1665 } ;
  assign INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1667 =
	     { y__h43778 ^ (x__h47815 | y__h47816),
	       y__h43839 ^ (y__h43837 | y__h47931),
	       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1666 } ;
  assign INV_x5597__q5 = ~x__h35597 ;
  assign _theResult_____1__h25196 =
	     IF_IF_IF_bfloat_obj_unsignedmult_rg_s5_val_53__ETC___d778[8] ?
	       exp___1__h25471 :
	       exp__h25186 ;
  assign a__h36785 = x__h36872 | y__h36873 ;
  assign a__h38662 = x__h37471 ^ (x__h37804 | y__h37805) ;
  assign a__h42314 = y__h37516 ^ (x__h38003 | y__h38004) ;
  assign a__h42512 = y__h37577 ^ (y__h37575 | y__h37658) ;
  assign a__h44159 = x__h44233 | y__h44234 ;
  assign a_temp__h26821 =
	     { 2'd0,
	       bfloat_rg_mult_mant_s7_59_ULE_bfloat_rg_mant_s_ETC___d861 ?
		 bfloat_rg_mant_shift_s7 :
		 bfloat_rg_mult_mant_s7 } ;
  assign b__h42513 = x__h42620 | y__h42621 ;
  assign b_temp__h26822 =
	     { 2'd0,
	       bfloat_rg_mult_mant_s7_59_ULE_bfloat_rg_mant_s_ETC___d861 ?
		 bfloat_rg_mult_mant_s7 :
		 bfloat_rg_mant_shift_s7 } ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d118 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86 ^
	     { bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d82[0] |
	       y__h7968,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96[7] } ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123 =
	     bfloat_obj_unsignedmult_rg_a &
	     {8{bfloat_obj_unsignedmult_rg_b[0]}} ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123[5:2] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96[4:1] ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d165 =
	     { x__h6363 | y__h6364,
	       x__h6646 | y__h6647,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127[0] |
	       y__h6767,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79[0] } ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d172 =
	     bfloat_obj_unsignedmult_rg_a &
	     {8{bfloat_obj_unsignedmult_rg_b[6]}} ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d172[7:4] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d54[6:3] ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d213 =
	     { x__h9978 | y__h9979,
	       x__h10213 | y__h10214,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175[0] |
	       y__h10334,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[5] } ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79[5:2] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d69[4:1] ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d256 =
	     { x__h8982 | y__h8983,
	       x__h9217 | y__h9218,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218[0] |
	       y__h9338,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[0] } ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[5:2] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[4:1] ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d306 =
	     { x__h11247 | y__h11248,
	       x__h11482 | y__h11483,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268[0] |
	       y__h11603,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123[6] } ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d172[3:0] &
	     rg_b__h12381 ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d54 =
	     bfloat_obj_unsignedmult_rg_a &
	     {8{bfloat_obj_unsignedmult_rg_b[7]}} ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59 =
	     bfloat_obj_unsignedmult_rg_a &
	     {8{bfloat_obj_unsignedmult_rg_b[4]}} ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63 =
	     bfloat_obj_unsignedmult_rg_a &
	     {8{bfloat_obj_unsignedmult_rg_b[5]}} ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d66 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[7] ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[6] ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d69 =
	     bfloat_obj_unsignedmult_rg_a &
	     {8{bfloat_obj_unsignedmult_rg_b[3]}} ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79 =
	     bfloat_obj_unsignedmult_rg_a &
	     {8{bfloat_obj_unsignedmult_rg_b[2]}} ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d82 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79[7:6] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d69[6:5] ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79[7:6] ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d69[6:5] ;
  assign bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96 =
	     bfloat_obj_unsignedmult_rg_a &
	     {8{bfloat_obj_unsignedmult_rg_b[1]}} ;
  assign bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362 =
	     bfloat_obj_unsignedmult_rg_s1_op_0[6:3] &
	     bfloat_obj_unsignedmult_rg_s1_op_1[6:3] ;
  assign bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d401 =
	     { x__h14065 | y__h14066,
	       x__h14302 | y__h14303,
	       bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362[0] |
	       y__h14423,
	       bfloat_obj_unsignedmult_rg_s1_op_2[3] } ;
  assign bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d411 =
	     bfloat_obj_unsignedmult_rg_s1_op_0[8:7] &
	     bfloat_obj_unsignedmult_rg_s1_op_1[8:7] ;
  assign bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d413 =
	     bfloat_obj_unsignedmult_rg_s1_op_0[8:7] ^
	     bfloat_obj_unsignedmult_rg_s1_op_1[8:7] ;
  assign bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451 =
	     bfloat_obj_unsignedmult_rg_s1_op_2[10:7] &
	     bfloat_obj_unsignedmult_rg_s1_op_3[10:7] ;
  assign bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d489 =
	     { x__h16663 | y__h16664,
	       x__h16899 | y__h16900,
	       bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451[0] |
	       y__h17020,
	       bfloat_obj_unsignedmult_rg_s1_op_4[7] } ;
  assign bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d423 =
	     bfloat_obj_unsignedmult_rg_s1_op_2[6:5] &
	     bfloat_obj_unsignedmult_rg_s1_op_3[6:5] ;
  assign bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d427 =
	     bfloat_obj_unsignedmult_rg_s1_op_2[6:5] ^
	     bfloat_obj_unsignedmult_rg_s1_op_3[6:5] ;
  assign bfloat_obj_unsignedmult_rg_s2_op_0_94_BIT_10_0_ETC___d528 =
	     { x__h18587 ^ bfloat_obj_unsignedmult_rg_s2_op_2[10],
	       x__h18394 ^ bfloat_obj_unsignedmult_rg_s2_op_2[9],
	       x__h18200 ^ bfloat_obj_unsignedmult_rg_s2_op_2[8],
	       bfloat_obj_unsignedmult_rg_s2_op_0[7] ^
	       bfloat_obj_unsignedmult_rg_s2_op_1[7] } ;
  assign bfloat_obj_unsignedmult_rg_s2_op_0_94_BIT_10_0_ETC___d551 =
	     { x__h18684 | y__h18685,
	       x__h18491 | y__h18492,
	       x__h18298 | y__h18299,
	       bfloat_obj_unsignedmult_rg_s2_op_0[7] &
	       bfloat_obj_unsignedmult_rg_s2_op_1[7] } ;
  assign bfloat_obj_unsignedmult_rg_s2_op_0_94_BIT_12_9_ETC___d552 =
	     { x__h19070 | y__h19071,
	       x__h18877 | y__h18878,
	       bfloat_obj_unsignedmult_rg_s2_op_0_94_BIT_10_0_ETC___d551 } ;
  assign bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580 =
	     bfloat_obj_unsignedmult_rg_s3_op_0[11:8] &
	     bfloat_obj_unsignedmult_rg_s3_op_1[11:8] ;
  assign bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d673 =
	     { x__h22062 | y__h22063,
	       x__h22346 | y__h22347,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580[0] |
	       y__h22467,
	       cin__h21930 } ;
  assign bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d564 =
	     bfloat_obj_unsignedmult_rg_s3_op_0[14:12] &
	     bfloat_obj_unsignedmult_rg_s3_op_1[14:12] ;
  assign bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566 =
	     bfloat_obj_unsignedmult_rg_s3_op_0[14:12] ^
	     bfloat_obj_unsignedmult_rg_s3_op_1[14:12] ;
  assign bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d654 =
	     { x__h23291 | y__h23292,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d564[0] |
	       y__h23407,
	       cin__h22880 } ;
  assign bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622 =
	     bfloat_obj_unsignedmult_rg_s3_op_0[3:0] &
	     bfloat_obj_unsignedmult_rg_s3_op_1[3:0] ;
  assign bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601 =
	     bfloat_obj_unsignedmult_rg_s3_op_0[7:4] &
	     bfloat_obj_unsignedmult_rg_s3_op_1[7:4] ;
  assign bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d691 =
	     { x__h21115 | y__h21116,
	       x__h21396 | y__h21397,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601[0] |
	       y__h21517,
	       IF_x0633_OR_y0634_THEN_1_ELSE_0__q1[0] } ;
  assign bfloat_rg_mant_s9_102_BITS_26_TO_4_103_PLUS_1___d1104 =
	     bfloat_rg_mant_s9[26:4] + 23'd1 ;
  assign bfloat_rg_mult_mant_s7_59_ULE_bfloat_rg_mant_s_ETC___d861 =
	     bfloat_rg_mult_mant_s7 <= bfloat_rg_mant_shift_s7 ;
  assign c_mant_s7__h26489 = { bfloat_rg_C_s6[22:0], 3'b0 } ;
  assign cin__h21930 = x__h21575 | y__h21576 ;
  assign cin__h22880 = x__h22525 | y__h22526 ;
  assign cin__h36787 = ~x__h36168 ;
  assign cin__h38527 = x__h44046 | y__h44047 ;
  assign cin__h38664 = x__h38788 | y__h38789 ;
  assign cin__h44024 = x__h46536 & y__h46537 ;
  assign cout__h35674 = x__h35688 | y__h35689 ;
  assign cout__h38845 = x__h38859 | y__h38860 ;
  assign cout__h39837 = x__h39853 | y__h39854 ;
  assign cout__h40684 = x__h40698 | y__h40699 ;
  assign cout__h44290 = x__h44304 | y__h44305 ;
  assign e__h24529 = x__h24554 - 8'd127 ;
  assign exp___1__h25263 = bfloat_rg_exp_add_s4 + 8'd1 ;
  assign exp___1__h25471 = exp__h25186 + 8'd1 ;
  assign exp__h25186 =
	     IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755[15] ?
	       exp___1__h25263 :
	       bfloat_rg_exp_add_s4 ;
  assign exp_diff_s6__h25712 =
	     bfloat_rg_mult_s5[30:23] - bfloat_rg_C_s5[30:23] ;
  assign exponent__h27162 = bfloat_rg_exponent_s8 - op2__h33608 ;
  assign exponent__h27191 = bfloat_rg_exponent_s8 + 8'd1 ;
  assign grs__h34745 =
	     { bfloat_guard_bit_s9,
	       bfloat_round_bit_s9,
	       bfloat_sticky_bit_s9 } ;
  assign grs_mul_round__h25194 =
	     IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755[15] ?
	       { IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755[8:7],
		 mul_sticky_bit__h25267 } :
	       { IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755[7:6],
		 mul_sticky_bit__h25294 } ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1117 =
	     int_8_rg_a[6:0] & {7{int_8_rg_b[6]}} ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145 =
	     int_8_rg_a[6:0] & {7{int_8_rg_b[5]}} ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179 =
	     int_8_rg_a[6:0] & {7{int_8_rg_b[4]}} ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190 =
	     int_8_rg_a[6:0] & {7{int_8_rg_b[3]}} ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201 =
	     int_8_rg_a[6:0] & {7{int_8_rg_b[2]}} ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[5:2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[4:1] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1261 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1117[3:1] &
	     INV_x5597__q5[2:0] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1117[3:1] ^
	     INV_x5597__q5[2:0] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1277 =
	     int_8_rg_a[6:0] & {7{int_8_rg_b[0]}} ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280 =
	     int_8_rg_a[6:0] & {7{int_8_rg_b[1]}} ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1303 =
	     { x__h39289 | y__h39290,
	       x__h39497 | y__h39498,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237[0] |
	       y__h39618,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1117[0] } ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1316 =
	     { x__h40297 | y__h40298,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1261[0] |
	       y__h40497,
	       y__h40066,
	       1'b0 } ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201[5:2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[4:1] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1372 =
	     { x__h41128 | y__h41129,
	       x__h41336 | y__h41337,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327[0] |
	       y__h41457,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[0] } ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1413 =
	     { x__h41858 | y__h41859,
	       x__h42057 | y__h42058,
	       y__h41610 | y__h42173,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[6] } ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1428 =
	     sum__h38846[2:0] & sum__h39838[2:0] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430 =
	     sum__h38846[2:0] ^ sum__h39838[2:0] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1469 =
	     { x__h43064 | y__h43065,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1428[0] |
	       y__h43264,
	       y__h42833,
	       1'b0 } ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1476 =
	     x__h43707 | y__h43708 ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1482 =
	     x__h43638 ^ sum__h38775[1] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1277[5:2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[4:1] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1523 =
	     { x__h44734 | y__h44735,
	       x__h44942 | y__h44943,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485[0] |
	       y__h45063,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201[0] } ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530 =
	     rg_a__h44209 & rg_b__h44210 ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1553 =
	     a__h44159 & sum__h42605[2] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1556 =
	     a__h44159 ^ sum__h42605[2] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1579 =
	     { x__h45515 | y__h45516,
	       x__h45723 | y__h45724,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530[0] |
	       y__h45844,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[0] } ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1583 =
	     sum__h44220[3:2] & sum__h42605[1:0] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587 =
	     sum__h44220[3:2] ^ sum__h42605[1:0] ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1653 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587 ^
	     { int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1583[0] |
	       y__h47505,
	       cin__h44024 } ;
  assign int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1665 =
	     { y__h46057 ^ (x__h47389 | y__h47390),
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1653,
	       sum__h46310,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1277[0] } ;
  assign int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_109_BI_ETC___d1111 =
	     int_8_rg_a[7] & int_8_rg_b[7] ;
  assign int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_109_BI_ETC___d1609 =
	     x__h48241 | y__h48242 ;
  assign int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773 =
	     int_8_rg_prod1[11:8] & int_8_rg_c1[11:8] ;
  assign int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1835 =
	     x__h51011 | y__h51012 ;
  assign int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1944 =
	     { x__h53091 | y__h53092,
	       x__h53299 | y__h53300,
	       int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773[0] |
	       y__h53420,
	       int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1833 } ;
  assign int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752 =
	     int_8_rg_prod1[15:12] & int_8_rg_c1[15:12] ;
  assign int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1837 =
	     x__h50618 | y__h50619 ;
  assign int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1926 =
	     { x__h53531 | y__h53532,
	       x__h53739 | y__h53740,
	       int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752[0] |
	       y__h53860,
	       int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1835 } ;
  assign int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815 =
	     int_8_rg_prod1[3:0] & int_8_rg_c1[3:0] ;
  assign int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1831 =
	     x__h51798 | y__h51799 ;
  assign int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794 =
	     int_8_rg_prod1[7:4] & int_8_rg_c1[7:4] ;
  assign int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1833 =
	     x__h51404 | y__h51405 ;
  assign int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1962 =
	     { x__h52651 | y__h52652,
	       x__h52859 | y__h52860,
	       int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794[0] |
	       y__h52980,
	       int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1831 } ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1677 =
	     rg_a__h50135 & int_8_rg_c1[31:28] ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691 =
	     rg_a__h50135 & int_8_rg_c1[27:24] ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711 =
	     rg_a__h50135 & int_8_rg_c1[23:20] ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731 =
	     rg_a__h50135 & int_8_rg_c1[19:16] ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1839 =
	     x__h50159 | y__h50160 ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1841 =
	     x__h49699 | y__h49700 ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1843 =
	     x__h49239 | y__h49240 ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1854 =
	     { x__h55291 | y__h55292,
	       x__h55499 | y__h55500,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1677[0] |
	       y__h55620,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1843 } ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1872 =
	     { x__h54851 | y__h54852,
	       x__h55059 | y__h55060,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691[0] |
	       y__h55180,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1841 } ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1890 =
	     { x__h54411 | y__h54412,
	       x__h54619 | y__h54620,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711[0] |
	       y__h54740,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1839 } ;
  assign int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1908 =
	     { x__h53971 | y__h53972,
	       x__h54179 | y__h54180,
	       int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731[0] |
	       y__h54300,
	       int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1837 } ;
  assign leftshift_count__h27161 = out__h27295 + 5'd1 ;
  assign mant_1__h25188 =
	     IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755[15] ?
	       IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755[15:8] :
	       IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755[14:7] ;
  assign mantissa__h27163 =
	     bfloat_rg_mant_s8[25:0] << leftshift_count__h27161 ;
  assign mantissa_round__h25426 = { 1'd0, mant_1__h25188 } + 9'd1 ;
  assign mul_result__h25086 =
	     { bfloat_rg_sign_s4,
	       IF_bfloat_rg_exception_s1_39_EQ_3_52_THEN_IF_I_ETC___d798 } ;
  assign mul_sticky_bit__h25267 =
	     IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755[6:0] !=
	     7'd0 ;
  assign mul_sticky_bit__h25294 =
	     IF_bfloat_obj_unsignedmult_rg_s5_val_53_THEN_b_ETC___d755[5:0] !=
	     6'd0 ;
  assign op2__h33608 = { 3'd0, leftshift_count__h27161 } ;
  assign out__h27295 =
	     (IF_IF_IF_IF_bfloat_rg_mant_s8_81_BIT_25_85_THE_ETC___d979[4] &
	      spliced_bits__h27338[4]) ?
	       5'b0 :
	       ((~IF_IF_IF_IF_bfloat_rg_mant_s8_81_BIT_25_85_THE_ETC___d979[4]) ?
		  IF_IF_IF_IF_bfloat_rg_mant_s8_81_BIT_25_85_THE_ETC___d979 :
		  { 1'b1, spliced_bits__h27338[3:0] }) ;
  assign p__h11124 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[5:2] ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[4:1] ;
  assign p__h12388 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d172[3:0] ^
	     rg_b__h12381 ;
  assign p__h13938 =
	     bfloat_obj_unsignedmult_rg_s1_op_0[6:3] ^
	     bfloat_obj_unsignedmult_rg_s1_op_1[6:3] ;
  assign p__h15266 =
	     { bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d413,
	       bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d427 } ;
  assign p__h16538 =
	     bfloat_obj_unsignedmult_rg_s1_op_2[10:7] ^
	     bfloat_obj_unsignedmult_rg_s1_op_3[10:7] ;
  assign p__h20117 =
	     bfloat_obj_unsignedmult_rg_s3_op_0[3:0] ^
	     bfloat_obj_unsignedmult_rg_s3_op_1[3:0] ;
  assign p__h20990 =
	     bfloat_obj_unsignedmult_rg_s3_op_0[7:4] ^
	     bfloat_obj_unsignedmult_rg_s3_op_1[7:4] ;
  assign p__h21937 =
	     bfloat_obj_unsignedmult_rg_s3_op_0[11:8] ^
	     bfloat_obj_unsignedmult_rg_s3_op_1[11:8] ;
  assign p__h35478 = { 2'd1, y__h48111, y__h48171 } ;
  assign p__h35673 = rg_a__h35664 ^ INV_x5597__q5[6:3] ;
  assign p__h38773 = { x__h41506, y__h41551, y__h41612, y__h41693 } ;
  assign p__h38844 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[5:2] ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[4:1] ;
  assign p__h39836 =
	     { int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1277[6] ^
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[5] } ;
  assign p__h40683 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201[5:2] ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[4:1] ;
  assign p__h42603 =
	     { int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[1] ^
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[0] } ;
  assign p__h44218 = rg_a__h44209 ^ rg_b__h44210 ;
  assign p__h44289 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1277[5:2] ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[4:1] ;
  assign p__h46308 =
	     { sum__h44220[1:0],
	       sum__h44291[0],
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1277[1] ^
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[0] } ;
  assign p__h48762 = rg_a__h50135 ^ int_8_rg_c1[31:28] ;
  assign p__h49224 = rg_a__h50135 ^ int_8_rg_c1[27:24] ;
  assign p__h49684 = rg_a__h50135 ^ int_8_rg_c1[23:20] ;
  assign p__h50144 = rg_a__h50135 ^ int_8_rg_c1[19:16] ;
  assign p__h50603 = int_8_rg_prod1[15:12] ^ int_8_rg_c1[15:12] ;
  assign p__h50996 = int_8_rg_prod1[11:8] ^ int_8_rg_c1[11:8] ;
  assign p__h51389 = int_8_rg_prod1[7:4] ^ int_8_rg_c1[7:4] ;
  assign p__h51781 = int_8_rg_prod1[3:0] ^ int_8_rg_c1[3:0] ;
  assign p__h6024 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123[5:2] ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96[4:1] ;
  assign p__h8859 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79[5:2] ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d69[4:1] ;
  assign p__h9807 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d172[7:4] ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d54[6:3] ;
  assign rg_a__h35664 =
	     { ~x__h35747,
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1117[6:4] } ;
  assign rg_a__h44209 = { cout__h44290, sum__h44291[3:1] } ;
  assign rg_a__h50135 = {4{int_8_rg_prod1[15]}} ;
  assign rg_b__h12381 =
	     { bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d54[2:0],
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96[5] } ;
  assign rg_b__h44210 =
	     { sum__h40685[2:0],
	       int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201[1] } ;
  assign spliced_bits__h10957 =
	     { bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[1],
	       1'b0,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d69[0],
	       3'b0 } ;
  assign spliced_bits__h11043 =
	     p__h11124 ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d306 ;
  assign spliced_bits__h12223 =
	     { bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[0],
	       5'b0 } ;
  assign spliced_bits__h12308 =
	     p__h12388 ^
	     { x__h12542 | y__h12543,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318[1] |
	       y__h12751,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318[0],
	       1'b0 } ;
  assign spliced_bits__h13852 =
	     p__h13938 ^
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d401 ;
  assign spliced_bits__h15186 =
	     p__h15266 ^
	     { x__h15452 | y__h15453,
	       bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d423[1] |
	       y__h15654,
	       bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d423[0],
	       1'b0 } ;
  assign spliced_bits__h16457 =
	     p__h16538 ^
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d489 ;
  assign spliced_bits__h19266 =
	     { bfloat_obj_unsignedmult_rg_s2_op_2[7],
	       bfloat_obj_unsignedmult_rg_s2_op_1[6:5],
	       3'b0,
	       bfloat_obj_unsignedmult_rg_s2_op_1[1],
	       1'b0 } ;
  assign spliced_bits__h19955 =
	     { x__h23014 | y__h23015,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566 ^
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d654 } ;
  assign spliced_bits__h19983 =
	     p__h21937 ^
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d673 ;
  assign spliced_bits__h20011 =
	     p__h20990 ^
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d691 ;
  assign spliced_bits__h20039 =
	     p__h20117 ^
	     { x__h20246 | y__h20247,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622[1] |
	       y__h20455,
	       bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622[0],
	       1'b0 } ;
  assign spliced_bits__h27338 =
	     (spliced_bits__h27484[3] & spliced_bits__h27456[3]) ?
	       5'b10000 :
	       ((~spliced_bits__h27484[3]) ?
		  { 1'b0, spliced_bits__h27484 } :
		  { 2'b01, spliced_bits__h27456[2:0] }) ;
  assign spliced_bits__h27456 =
	     spliced_bits__h27658[2] ?
	       4'b1000 :
	       ((~spliced_bits__h27658[2]) ?
		  { 1'b0, spliced_bits__h27658 } :
		  4'd4) ;
  assign spliced_bits__h27484 =
	     (spliced_bits__h27714[2] & spliced_bits__h27686[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h27714[2]) ?
		  { 1'b0, spliced_bits__h27714 } :
		  { 2'b01, spliced_bits__h27686[1:0] }) ;
  assign spliced_bits__h27512 =
	     (spliced_bits__h27770[2] & spliced_bits__h27742[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h27770[2]) ?
		  { 1'b0, spliced_bits__h27770 } :
		  { 2'b01, spliced_bits__h27742[1:0] }) ;
  assign spliced_bits__h27539 =
	     (spliced_bits__h27825[2] & spliced_bits__h27798[2]) ?
	       4'b1000 :
	       ((~spliced_bits__h27825[2]) ?
		  { 1'b0, spliced_bits__h27825 } :
		  { 2'b01, spliced_bits__h27798[1:0] }) ;
  assign spliced_bits__h27658 =
	     spliced_bits__h28868[1] ?
	       3'b100 :
	       ((~spliced_bits__h28868[1]) ?
		  { 1'b0, spliced_bits__h28868 } :
		  3'd2) ;
  assign spliced_bits__h27686 =
	     (spliced_bits__h28730[1] & spliced_bits__h28799[1]) ?
	       3'b100 :
	       ((~spliced_bits__h28730[1]) ?
		  { 1'b0, spliced_bits__h28730 } :
		  { 2'b01, spliced_bits__h28799[0] }) ;
  assign spliced_bits__h27714 =
	     (spliced_bits__h28592[1] & spliced_bits__h28661[1]) ?
	       3'b100 :
	       ((~spliced_bits__h28592[1]) ?
		  { 1'b0, spliced_bits__h28592 } :
		  { 2'b01, spliced_bits__h28661[0] }) ;
  assign spliced_bits__h27742 =
	     (spliced_bits__h28454[1] & spliced_bits__h28523[1]) ?
	       3'b100 :
	       ((~spliced_bits__h28454[1]) ?
		  { 1'b0, spliced_bits__h28454 } :
		  { 2'b01, spliced_bits__h28523[0] }) ;
  assign spliced_bits__h27770 =
	     (spliced_bits__h28316[1] & spliced_bits__h28385[1]) ?
	       3'b100 :
	       ((~spliced_bits__h28316[1]) ?
		  { 1'b0, spliced_bits__h28316 } :
		  { 2'b01, spliced_bits__h28385[0] }) ;
  assign spliced_bits__h27798 =
	     (spliced_bits__h28178[1] & spliced_bits__h28247[1]) ?
	       3'b100 :
	       ((~spliced_bits__h28178[1]) ?
		  { 1'b0, spliced_bits__h28178 } :
		  { 2'b01, spliced_bits__h28247[0] }) ;
  assign spliced_bits__h27825 =
	     (spliced_bits__h28040[1] & spliced_bits__h28109[1]) ?
	       3'b100 :
	       ((~spliced_bits__h28040[1]) ?
		  { 1'b0, spliced_bits__h28040 } :
		  { 2'b01, spliced_bits__h28109[0] }) ;
  assign spliced_bits__h28040 =
	     bfloat_rg_mant_s8[25] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[24] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28109 =
	     bfloat_rg_mant_s8[23] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[22] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28178 =
	     bfloat_rg_mant_s8[21] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[20] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28247 =
	     bfloat_rg_mant_s8[19] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[18] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28316 =
	     bfloat_rg_mant_s8[17] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[16] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28385 =
	     bfloat_rg_mant_s8[15] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[14] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28454 =
	     bfloat_rg_mant_s8[13] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[12] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28523 =
	     bfloat_rg_mant_s8[11] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[10] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28592 =
	     bfloat_rg_mant_s8[9] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[8] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28661 =
	     bfloat_rg_mant_s8[7] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[6] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28730 =
	     bfloat_rg_mant_s8[5] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[4] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28799 =
	     bfloat_rg_mant_s8[3] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[2] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h28868 =
	     bfloat_rg_mant_s8[1] ?
	       2'b0 :
	       (bfloat_rg_mant_s8[0] ? 2'b01 : 2'b10) ;
  assign spliced_bits__h5886 =
	     { bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d66 ^
	       (x__h7624 | y__h7625),
	       x__h7652 ^ (x__h7852 | y__h7853),
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d118 } ;
  assign spliced_bits__h5937 =
	     p__h6024 ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d165 ;
  assign spliced_bits__h8676 =
	     { bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79[1],
	       1'b0,
	       bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96[0],
	       1'b0 } ;
  assign spliced_bits__h8727 =
	     p__h9807 ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d213 ;
  assign spliced_bits__h8778 =
	     p__h8859 ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d256 ;
  assign sum_BIT_0___h39684 = ~y__h37658 ;
  assign sum__h35480 =
	     p__h35478 ^
	     { int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_109_BI_ETC___d1609,
	       int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_109_BI_ETC___d1609,
	       y__h48109 | y__h48357,
	       INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1607 } ;
  assign sum__h35675 =
	     p__h35673 ^
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1166 ;
  assign sum__h38775 =
	     p__h38773 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1413 ;
  assign sum__h38846 =
	     p__h38844 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1303 ;
  assign sum__h39838 =
	     p__h39836 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1316 ;
  assign sum__h40685 =
	     p__h40683 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1372 ;
  assign sum__h42605 =
	     p__h42603 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1469 ;
  assign sum__h44220 =
	     p__h44218 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1579 ;
  assign sum__h44291 =
	     p__h44289 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1523 ;
  assign sum__h46310 = p__h46308 ^ { y__h46769, y__h46968, y__h46537, 1'b0 } ;
  assign sum__h48764 =
	     p__h48762 ^
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1854 ;
  assign sum__h49226 =
	     p__h49224 ^
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1872 ;
  assign sum__h49686 =
	     p__h49684 ^
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1890 ;
  assign sum__h50146 =
	     p__h50144 ^
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1908 ;
  assign sum__h50605 =
	     p__h50603 ^
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1926 ;
  assign sum__h50998 =
	     p__h50996 ^
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1944 ;
  assign sum__h51391 =
	     p__h51389 ^
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1962 ;
  assign sum__h51783 =
	     p__h51781 ^
	     { x__h52213 | y__h52214,
	       int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815[1] |
	       y__h52422,
	       int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815[0],
	       1'b0 } ;
  assign x__h10047 = p__h9807[2] & p__h9807[1] ;
  assign x__h10111 = x__h10047 & p__h9807[0] ;
  assign x__h10213 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175[1] |
	     y__h10216 ;
  assign x__h10280 = p__h9807[1] & p__h9807[0] ;
  assign x__h10392 = x__h10394 | y__h10395 ;
  assign x__h10394 = x__h10396 | y__h10397 ;
  assign x__h10396 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175[3] |
	     y__h10399 ;
  assign x__h10463 = p__h9807[3] & p__h9807[2] ;
  assign x__h10527 = x__h10463 & p__h9807[1] ;
  assign x__h10613 = x__h10527 & p__h9807[0] ;
  assign x__h11247 = x__h11249 | y__h11250 ;
  assign x__h11249 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268[2] |
	     y__h11252 ;
  assign x__h11316 = p__h11124[2] & p__h11124[1] ;
  assign x__h11380 = x__h11316 & p__h11124[0] ;
  assign x__h11482 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268[1] |
	     y__h11485 ;
  assign x__h11549 = p__h11124[1] & p__h11124[0] ;
  assign x__h11661 = x__h11663 | y__h11664 ;
  assign x__h11663 = x__h11665 | y__h11666 ;
  assign x__h11665 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268[3] |
	     y__h11668 ;
  assign x__h11732 = p__h11124[3] & p__h11124[2] ;
  assign x__h11796 = x__h11732 & p__h11124[1] ;
  assign x__h11882 = x__h11796 & p__h11124[0] ;
  assign x__h12542 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318[2] |
	     y__h12545 ;
  assign x__h12609 = p__h12388[2] & p__h12388[1] ;
  assign x__h12929 = x__h12931 | y__h12932 ;
  assign x__h12931 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318[3] |
	     y__h12934 ;
  assign x__h12998 = p__h12388[3] & p__h12388[2] ;
  assign x__h13062 = x__h12998 & p__h12388[1] ;
  assign x__h14065 = x__h14067 | y__h14068 ;
  assign x__h14067 =
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362[2] |
	     y__h14070 ;
  assign x__h14134 = p__h13938[2] & p__h13938[1] ;
  assign x__h14198 = x__h14134 & p__h13938[0] ;
  assign x__h14302 =
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362[1] |
	     y__h14305 ;
  assign x__h14369 = p__h13938[1] & p__h13938[0] ;
  assign x__h14481 = x__h14483 | y__h14484 ;
  assign x__h14483 = x__h14485 | y__h14486 ;
  assign x__h14485 =
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362[3] |
	     y__h14488 ;
  assign x__h14552 = p__h13938[3] & p__h13938[2] ;
  assign x__h14616 = x__h14552 & p__h13938[1] ;
  assign x__h14702 = x__h14616 & p__h13938[0] ;
  assign x__h15452 =
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d411[0] |
	     y__h15455 ;
  assign x__h15518 =
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d413[0] &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d427[1] ;
  assign x__h15825 = x__h15827 | y__h15828 ;
  assign x__h15827 =
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d411[1] |
	     y__h15830 ;
  assign x__h15891 =
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d413[1] &
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d413[0] ;
  assign x__h15952 =
	     x__h15891 &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d427[1] ;
  assign x__h16663 = x__h16665 | y__h16666 ;
  assign x__h16665 =
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451[2] |
	     y__h16668 ;
  assign x__h16732 = p__h16538[2] & p__h16538[1] ;
  assign x__h16796 = x__h16732 & p__h16538[0] ;
  assign x__h16899 =
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451[1] |
	     y__h16902 ;
  assign x__h16966 = p__h16538[1] & p__h16538[0] ;
  assign x__h17078 = x__h17080 | y__h17081 ;
  assign x__h17080 = x__h17082 | y__h17083 ;
  assign x__h17082 =
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451[3] |
	     y__h17085 ;
  assign x__h17149 = p__h16538[3] & p__h16538[2] ;
  assign x__h17213 = x__h17149 & p__h16538[1] ;
  assign x__h17299 = x__h17213 & p__h16538[0] ;
  assign x__h18200 =
	     bfloat_obj_unsignedmult_rg_s2_op_0[8] ^
	     bfloat_obj_unsignedmult_rg_s2_op_1[8] ;
  assign x__h18298 =
	     bfloat_obj_unsignedmult_rg_s2_op_0[8] &
	     bfloat_obj_unsignedmult_rg_s2_op_1[8] ;
  assign x__h18394 =
	     bfloat_obj_unsignedmult_rg_s2_op_0[9] ^
	     bfloat_obj_unsignedmult_rg_s2_op_1[9] ;
  assign x__h18491 =
	     bfloat_obj_unsignedmult_rg_s2_op_0[9] &
	     bfloat_obj_unsignedmult_rg_s2_op_1[9] ;
  assign x__h18587 =
	     bfloat_obj_unsignedmult_rg_s2_op_0[10] ^
	     bfloat_obj_unsignedmult_rg_s2_op_1[10] ;
  assign x__h18684 =
	     bfloat_obj_unsignedmult_rg_s2_op_0[10] &
	     bfloat_obj_unsignedmult_rg_s2_op_1[10] ;
  assign x__h18780 =
	     bfloat_obj_unsignedmult_rg_s2_op_0[11] ^
	     bfloat_obj_unsignedmult_rg_s2_op_1[11] ;
  assign x__h18877 =
	     bfloat_obj_unsignedmult_rg_s2_op_0[11] &
	     bfloat_obj_unsignedmult_rg_s2_op_1[11] ;
  assign x__h18973 =
	     bfloat_obj_unsignedmult_rg_s2_op_0[12] ^
	     bfloat_obj_unsignedmult_rg_s2_op_1[12] ;
  assign x__h19070 =
	     bfloat_obj_unsignedmult_rg_s2_op_0[12] &
	     bfloat_obj_unsignedmult_rg_s2_op_1[12] ;
  assign x__h20246 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622[2] |
	     y__h20249 ;
  assign x__h20313 = p__h20117[2] & p__h20117[1] ;
  assign x__h20633 = x__h20635 | y__h20636 ;
  assign x__h20635 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622[3] |
	     y__h20638 ;
  assign x__h20702 = p__h20117[3] & p__h20117[2] ;
  assign x__h20766 = x__h20702 & p__h20117[1] ;
  assign x__h21115 = x__h21117 | y__h21118 ;
  assign x__h21117 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601[2] |
	     y__h21120 ;
  assign x__h21184 = p__h20990[2] & p__h20990[1] ;
  assign x__h21248 = x__h21184 & p__h20990[0] ;
  assign x__h21396 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601[1] |
	     y__h21399 ;
  assign x__h21463 = p__h20990[1] & p__h20990[0] ;
  assign x__h21575 = x__h21577 | y__h21578 ;
  assign x__h21577 = x__h21579 | y__h21580 ;
  assign x__h21579 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601[3] |
	     y__h21582 ;
  assign x__h21646 = p__h20990[3] & p__h20990[2] ;
  assign x__h21710 = x__h21646 & p__h20990[1] ;
  assign x__h21796 = x__h21710 & p__h20990[0] ;
  assign x__h22062 = x__h22064 | y__h22065 ;
  assign x__h22064 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580[2] |
	     y__h22067 ;
  assign x__h22131 = p__h21937[2] & p__h21937[1] ;
  assign x__h22195 = x__h22131 & p__h21937[0] ;
  assign x__h22346 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580[1] |
	     y__h22349 ;
  assign x__h22413 = p__h21937[1] & p__h21937[0] ;
  assign x__h22525 = x__h22527 | y__h22528 ;
  assign x__h22527 = x__h22529 | y__h22530 ;
  assign x__h22529 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580[3] |
	     y__h22532 ;
  assign x__h22596 = p__h21937[3] & p__h21937[2] ;
  assign x__h22660 = x__h22596 & p__h21937[1] ;
  assign x__h22746 = x__h22660 & p__h21937[0] ;
  assign x__h23014 = x__h23016 | y__h23017 ;
  assign x__h23016 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d564[2] |
	     y__h23019 ;
  assign x__h23081 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566[2] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566[1] ;
  assign x__h23142 =
	     x__h23081 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566[0] ;
  assign x__h23291 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d564[1] |
	     y__h23294 ;
  assign x__h23355 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566[1] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566[0] ;
  assign x__h24554 = bfloat_rg_A[14:7] + bfloat_rg_B[14:7] ;
  assign x__h25881 = { bfloat_rg_mult_s5[31], 31'd0 } ;
  assign x__h25935 = { bfloat_rg_C_s5[31], 31'd0 } ;
  assign x__h25994 =
	     { bfloat_rg_mult_s5[31],
	       (bfloat_rg_mult_s5[22:0] == 23'd0) ?
		 31'h7F800000 :
		 { 8'd255, bfloat_rg_mult_s5[22:0] } } ;
  assign x__h26236 =
	     { bfloat_rg_C_s5[31],
	       (bfloat_rg_C_s5[22:0] == 23'd0) ?
		 31'h7F800000 :
		 { 8'd255, bfloat_rg_C_s5[22:0] } } ;
  assign x__h26395 =
	     (bfloat_rg_C_s5[22:0] != 23'd0 ||
	      bfloat_rg_mult_s5[22:0] != 23'd0) ?
	       2'd1 :
	       2'd2 ;
  assign x__h27234 = { mantissa__h27163, 1'b0 } ;
  assign x__h33483 = { bfloat_rg_mant_s8[25:0], 1'b0 } ;
  assign x__h33782 = mantissa__h27163[1] | mantissa__h27163[0] ;
  assign x__h34065 = x__h34084 | bfloat_rg_mant_s8[0] ;
  assign x__h34084 = bfloat_rg_mant_s8[2] | bfloat_rg_mant_s8[1] ;
  assign x__h34331 = bfloat_rg_mant_s8[1] | bfloat_rg_mant_s8[0] ;
  assign x__h35597 = int_8_rg_a[6:0] & y__h35599 ;
  assign x__h35688 = x__h35690 | y__h35691 ;
  assign x__h35690 = x__h35692 | y__h35693 ;
  assign x__h35692 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124[3] |
	     y__h35695 ;
  assign x__h35747 = int_8_rg_a[7] & int_8_rg_b[6] ;
  assign x__h35900 = p__h35673[3] & p__h35673[2] ;
  assign x__h35964 = x__h35900 & p__h35673[1] ;
  assign x__h36050 = x__h35964 & p__h35673[0] ;
  assign x__h36168 = int_8_rg_a[7] & int_8_rg_b[5] ;
  assign x__h36323 = x__h36325 | y__h36326 ;
  assign x__h36325 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124[2] |
	     y__h36328 ;
  assign x__h36392 = p__h35673[2] & p__h35673[1] ;
  assign x__h36456 = x__h36392 & p__h35673[0] ;
  assign x__h36531 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124[1] |
	     y__h36534 ;
  assign x__h36598 = p__h35673[1] & p__h35673[0] ;
  assign x__h36827 = a__h36785 ^ sum__h35675[2] ;
  assign x__h36872 = x__h36874 | y__h36875 ;
  assign x__h36874 = x__h36876 | y__h36877 ;
  assign x__h36876 = x__h36878 | y__h36879 ;
  assign x__h36878 =
	     ~x__h36932 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[6] ;
  assign x__h36932 = int_8_rg_a[7] & int_8_rg_b[4] ;
  assign x__h37053 = int_8_rg_a[7] & int_8_rg_b[3] ;
  assign x__h37174 = int_8_rg_a[7] & int_8_rg_b[2] ;
  assign x__h37295 = int_8_rg_a[7] & int_8_rg_b[1] ;
  assign x__h37471 =
	     ~x__h36932 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[6] ;
  assign x__h37513 = x__h37471 & y__h37516 ;
  assign x__h37574 = x__h37513 & y__h37577 ;
  assign x__h37804 = x__h37806 | y__h37807 ;
  assign x__h37806 = y__h37472 | y__h37809 ;
  assign x__h37870 = y__h37516 & y__h37577 ;
  assign x__h38003 = y__h37514 | y__h38006 ;
  assign x__h38213 = a__h36785 & sum__h35675[2] ;
  assign x__h38549 = x__h38551 | y__h38552 ;
  assign x__h38551 = x__h38553 | y__h38554 ;
  assign x__h38553 = x__h38555 | y__h38556 ;
  assign x__h38555 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1223 &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1384 ;
  assign x__h38704 = a__h38662 ^ sum__h35675[1] ;
  assign x__h38788 = x__h38790 | y__h38791 ;
  assign x__h38790 = x__h38792 | y__h38793 ;
  assign x__h38792 = x__h38794 | y__h38795 ;
  assign x__h38794 = cout__h38845 & cout__h39837 ;
  assign x__h38859 = x__h38861 | y__h38862 ;
  assign x__h38861 = x__h38863 | y__h38864 ;
  assign x__h38863 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237[3] |
	     y__h38866 ;
  assign x__h38968 = p__h38844[3] & p__h38844[2] ;
  assign x__h39032 = x__h38968 & p__h38844[1] ;
  assign x__h39118 = x__h39032 & p__h38844[0] ;
  assign x__h39289 = x__h39291 | y__h39292 ;
  assign x__h39291 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237[2] |
	     y__h39294 ;
  assign x__h39358 = p__h38844[2] & p__h38844[1] ;
  assign x__h39422 = x__h39358 & p__h38844[0] ;
  assign x__h39497 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237[1] |
	     y__h39500 ;
  assign x__h39564 = p__h38844[1] & p__h38844[0] ;
  assign x__h39717 = int_8_rg_a[7] & int_8_rg_b[0] ;
  assign x__h39853 = x__h39855 | y__h39856 ;
  assign x__h39855 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1261[2] |
	     y__h39858 ;
  assign x__h40004 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263[2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263[1] ;
  assign x__h40065 =
	     x__h40004 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263[0] ;
  assign x__h40297 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1261[1] |
	     y__h40300 ;
  assign x__h40361 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263[0] ;
  assign x__h40698 = x__h40700 | y__h40701 ;
  assign x__h40700 = x__h40702 | y__h40703 ;
  assign x__h40702 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327[3] |
	     y__h40705 ;
  assign x__h40807 = p__h40683[3] & p__h40683[2] ;
  assign x__h40871 = x__h40807 & p__h40683[1] ;
  assign x__h40957 = x__h40871 & p__h40683[0] ;
  assign x__h41128 = x__h41130 | y__h41131 ;
  assign x__h41130 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327[2] |
	     y__h41133 ;
  assign x__h41197 = p__h40683[2] & p__h40683[1] ;
  assign x__h41261 = x__h41197 & p__h40683[0] ;
  assign x__h41336 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327[1] |
	     y__h41339 ;
  assign x__h41403 = p__h40683[1] & p__h40683[0] ;
  assign x__h41506 = cout__h38845 ^ cout__h39837 ;
  assign x__h41548 = x__h41506 & y__h41551 ;
  assign x__h41609 = x__h41548 & y__h41612 ;
  assign x__h41691 = x__h41609 & y__h41693 ;
  assign x__h41858 = x__h41860 | y__h41861 ;
  assign x__h41860 = y__h41507 | y__h41863 ;
  assign x__h41924 = y__h41551 & y__h41612 ;
  assign x__h41985 = x__h41924 & y__h41693 ;
  assign x__h42057 = y__h41549 | y__h42060 ;
  assign x__h42121 = y__h41612 & y__h41693 ;
  assign x__h42227 = a__h38662 & sum__h35675[1] ;
  assign x__h42356 = a__h42314 ^ sum__h35675[0] ;
  assign x__h42425 = a__h42314 & sum__h35675[0] ;
  assign x__h42554 = a__h42512 ^ b__h42513 ;
  assign x__h42620 = x__h42622 | y__h42623 ;
  assign x__h42622 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1428[2] |
	     y__h42625 ;
  assign x__h42771 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430[2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430[1] ;
  assign x__h42832 =
	     x__h42771 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430[0] ;
  assign x__h43064 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1428[1] |
	     y__h43067 ;
  assign x__h43128 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430[0] ;
  assign x__h43450 = a__h42512 & b__h42513 ;
  assign x__h43638 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[5] ^
	     sum__h42605[3] ;
  assign x__h43707 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[5] &
	     sum__h42605[3] ;
  assign x__h43733 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1223 ^
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1384 ;
  assign x__h43775 = x__h43733 & y__h43778 ;
  assign x__h43836 = x__h43775 & y__h43839 ;
  assign x__h43918 = x__h43836 & y__h43920 ;
  assign x__h44046 = x__h44048 | y__h44049 ;
  assign x__h44048 = x__h44050 | y__h44051 ;
  assign x__h44050 = x__h44052 | y__h44053 ;
  assign x__h44052 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1482 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1553 ;
  assign x__h44233 = x__h44235 | y__h44236 ;
  assign x__h44235 = x__h44237 | y__h44238 ;
  assign x__h44237 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530[3] |
	     y__h44240 ;
  assign x__h44304 = x__h44306 | y__h44307 ;
  assign x__h44306 = x__h44308 | y__h44309 ;
  assign x__h44308 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485[3] |
	     y__h44311 ;
  assign x__h44413 = p__h44289[3] & p__h44289[2] ;
  assign x__h44477 = x__h44413 & p__h44289[1] ;
  assign x__h44563 = x__h44477 & p__h44289[0] ;
  assign x__h44734 = x__h44736 | y__h44737 ;
  assign x__h44736 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485[2] |
	     y__h44739 ;
  assign x__h44803 = p__h44289[2] & p__h44289[1] ;
  assign x__h44867 = x__h44803 & p__h44289[0] ;
  assign x__h44942 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485[1] |
	     y__h44945 ;
  assign x__h45009 = p__h44289[1] & p__h44289[0] ;
  assign x__h45194 = p__h44218[3] & p__h44218[2] ;
  assign x__h45258 = x__h45194 & p__h44218[1] ;
  assign x__h45344 = x__h45258 & p__h44218[0] ;
  assign x__h45515 = x__h45517 | y__h45518 ;
  assign x__h45517 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530[2] |
	     y__h45520 ;
  assign x__h45584 = p__h44218[2] & p__h44218[1] ;
  assign x__h45648 = x__h45584 & p__h44218[0] ;
  assign x__h45723 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530[1] |
	     y__h45726 ;
  assign x__h45790 = p__h44218[1] & p__h44218[0] ;
  assign x__h46012 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1482 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1553 ;
  assign x__h46054 = x__h46012 & y__h46057 ;
  assign x__h46115 =
	     x__h46054 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587[1] ;
  assign x__h46197 =
	     x__h46115 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587[0] ;
  assign x__h46475 = sum__h44220[1] & sum__h44220[0] ;
  assign x__h46536 = x__h46475 & sum__h44291[0] ;
  assign x__h46832 = sum__h44220[0] & sum__h44291[0] ;
  assign x__h47190 = x__h47192 | y__h47193 ;
  assign x__h47192 = y__h46013 | y__h47195 ;
  assign x__h47256 =
	     y__h46057 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587[1] ;
  assign x__h47317 =
	     x__h47256 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587[0] ;
  assign x__h47389 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1583[1] |
	     y__h47392 ;
  assign x__h47453 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587[0] ;
  assign x__h47616 = x__h47618 | y__h47619 ;
  assign x__h47618 = y__h43734 | y__h47621 ;
  assign x__h47682 = y__h43778 & y__h43839 ;
  assign x__h47743 = x__h47682 & y__h43920 ;
  assign x__h47815 = y__h43776 | y__h47818 ;
  assign x__h47879 = y__h43839 & y__h43920 ;
  assign x__h48241 = y__h48069 | y__h48244 ;
  assign x__h48305 = y__h48111 & y__h48171 ;
  assign x__h49239 = x__h49241 | y__h49242 ;
  assign x__h49241 = x__h49243 | y__h49244 ;
  assign x__h49243 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691[3] |
	     y__h49246 ;
  assign x__h49418 = p__h49224[3] & p__h49224[2] ;
  assign x__h49482 = x__h49418 & p__h49224[1] ;
  assign x__h49568 = x__h49482 & p__h49224[0] ;
  assign x__h49699 = x__h49701 | y__h49702 ;
  assign x__h49701 = x__h49703 | y__h49704 ;
  assign x__h49703 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711[3] |
	     y__h49706 ;
  assign x__h49878 = p__h49684[3] & p__h49684[2] ;
  assign x__h49942 = x__h49878 & p__h49684[1] ;
  assign x__h50028 = x__h49942 & p__h49684[0] ;
  assign x__h50159 = x__h50161 | y__h50162 ;
  assign x__h50161 = x__h50163 | y__h50164 ;
  assign x__h50163 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731[3] |
	     y__h50166 ;
  assign x__h50338 = p__h50144[3] & p__h50144[2] ;
  assign x__h50402 = x__h50338 & p__h50144[1] ;
  assign x__h50488 = x__h50402 & p__h50144[0] ;
  assign x__h50618 = x__h50620 | y__h50621 ;
  assign x__h50620 = x__h50622 | y__h50623 ;
  assign x__h50622 =
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752[3] |
	     y__h50625 ;
  assign x__h50731 = p__h50603[3] & p__h50603[2] ;
  assign x__h50795 = x__h50731 & p__h50603[1] ;
  assign x__h50881 = x__h50795 & p__h50603[0] ;
  assign x__h51011 = x__h51013 | y__h51014 ;
  assign x__h51013 = x__h51015 | y__h51016 ;
  assign x__h51015 =
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773[3] |
	     y__h51018 ;
  assign x__h51124 = p__h50996[3] & p__h50996[2] ;
  assign x__h51188 = x__h51124 & p__h50996[1] ;
  assign x__h51274 = x__h51188 & p__h50996[0] ;
  assign x__h51404 = x__h51406 | y__h51407 ;
  assign x__h51406 = x__h51408 | y__h51409 ;
  assign x__h51408 =
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794[3] |
	     y__h51411 ;
  assign x__h51517 = p__h51389[3] & p__h51389[2] ;
  assign x__h51581 = x__h51517 & p__h51389[1] ;
  assign x__h51667 = x__h51581 & p__h51389[0] ;
  assign x__h51798 = x__h51800 | y__h51801 ;
  assign x__h51800 =
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815[3] |
	     y__h51803 ;
  assign x__h51909 = p__h51781[3] & p__h51781[2] ;
  assign x__h51973 = x__h51909 & p__h51781[1] ;
  assign x__h52213 =
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815[2] |
	     y__h52216 ;
  assign x__h52280 = p__h51781[2] & p__h51781[1] ;
  assign x__h52651 = x__h52653 | y__h52654 ;
  assign x__h52653 =
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794[2] |
	     y__h52656 ;
  assign x__h52720 = p__h51389[2] & p__h51389[1] ;
  assign x__h52784 = x__h52720 & p__h51389[0] ;
  assign x__h52859 =
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794[1] |
	     y__h52862 ;
  assign x__h52926 = p__h51389[1] & p__h51389[0] ;
  assign x__h53091 = x__h53093 | y__h53094 ;
  assign x__h53093 =
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773[2] |
	     y__h53096 ;
  assign x__h53160 = p__h50996[2] & p__h50996[1] ;
  assign x__h53224 = x__h53160 & p__h50996[0] ;
  assign x__h53299 =
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773[1] |
	     y__h53302 ;
  assign x__h53366 = p__h50996[1] & p__h50996[0] ;
  assign x__h53531 = x__h53533 | y__h53534 ;
  assign x__h53533 =
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752[2] |
	     y__h53536 ;
  assign x__h53600 = p__h50603[2] & p__h50603[1] ;
  assign x__h53664 = x__h53600 & p__h50603[0] ;
  assign x__h53739 =
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752[1] |
	     y__h53742 ;
  assign x__h53806 = p__h50603[1] & p__h50603[0] ;
  assign x__h53971 = x__h53973 | y__h53974 ;
  assign x__h53973 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731[2] |
	     y__h53976 ;
  assign x__h54040 = p__h50144[2] & p__h50144[1] ;
  assign x__h54104 = x__h54040 & p__h50144[0] ;
  assign x__h54179 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731[1] |
	     y__h54182 ;
  assign x__h54246 = p__h50144[1] & p__h50144[0] ;
  assign x__h54411 = x__h54413 | y__h54414 ;
  assign x__h54413 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711[2] |
	     y__h54416 ;
  assign x__h54480 = p__h49684[2] & p__h49684[1] ;
  assign x__h54544 = x__h54480 & p__h49684[0] ;
  assign x__h54619 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711[1] |
	     y__h54622 ;
  assign x__h54686 = p__h49684[1] & p__h49684[0] ;
  assign x__h54851 = x__h54853 | y__h54854 ;
  assign x__h54853 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691[2] |
	     y__h54856 ;
  assign x__h54920 = p__h49224[2] & p__h49224[1] ;
  assign x__h54984 = x__h54920 & p__h49224[0] ;
  assign x__h55059 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691[1] |
	     y__h55062 ;
  assign x__h55126 = p__h49224[1] & p__h49224[0] ;
  assign x__h55291 = x__h55293 | y__h55294 ;
  assign x__h55293 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1677[2] |
	     y__h55296 ;
  assign x__h55360 = p__h48762[2] & p__h48762[1] ;
  assign x__h55424 = x__h55360 & p__h48762[0] ;
  assign x__h55499 =
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1677[1] |
	     y__h55502 ;
  assign x__h55566 = p__h48762[1] & p__h48762[0] ;
  assign x__h56194 = bfloat_rg_out_valid ? bfloat_out : 32'b0 ;
  assign x__h6363 = x__h6365 | y__h6366 ;
  assign x__h6365 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127[2] |
	     y__h6368 ;
  assign x__h6432 = p__h6024[2] & p__h6024[1] ;
  assign x__h6496 = x__h6432 & p__h6024[0] ;
  assign x__h6646 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127[1] |
	     y__h6649 ;
  assign x__h6713 = p__h6024[1] & p__h6024[0] ;
  assign x__h6825 = x__h6827 | y__h6828 ;
  assign x__h6827 = x__h6829 | y__h6830 ;
  assign x__h6829 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127[3] |
	     y__h6832 ;
  assign x__h6896 = p__h6024[3] & p__h6024[2] ;
  assign x__h6960 = x__h6896 & p__h6024[1] ;
  assign x__h7046 = x__h6960 & p__h6024[0] ;
  assign x__h7624 = x__h7626 | y__h7627 ;
  assign x__h7626 = x__h7628 | y__h7629 ;
  assign x__h7628 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d69[7] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[6] ;
  assign x__h7652 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d69[7] ^
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[6] ;
  assign x__h7692 =
	     x__h7652 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86[1] ;
  assign x__h7753 =
	     x__h7692 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86[0] ;
  assign x__h7852 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d82[1] |
	     y__h7855 ;
  assign x__h7916 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86[1] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86[0] ;
  assign x__h8026 = x__h8028 | y__h8029 ;
  assign x__h8028 = x__h8030 | y__h8031 ;
  assign x__h8030 = x__h8032 | y__h8033 ;
  assign x__h8032 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[7] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[6] ;
  assign x__h8094 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d66 &
	     x__h7652 ;
  assign x__h8155 =
	     x__h8094 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86[1] ;
  assign x__h8237 =
	     x__h8155 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86[0] ;
  assign x__h8982 = x__h8984 | y__h8985 ;
  assign x__h8984 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218[2] |
	     y__h8987 ;
  assign x__h9051 = p__h8859[2] & p__h8859[1] ;
  assign x__h9115 = x__h9051 & p__h8859[0] ;
  assign x__h9217 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218[1] |
	     y__h9220 ;
  assign x__h9284 = p__h8859[1] & p__h8859[0] ;
  assign x__h9396 = x__h9398 | y__h9399 ;
  assign x__h9398 = x__h9400 | y__h9401 ;
  assign x__h9400 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218[3] |
	     y__h9403 ;
  assign x__h9467 = p__h8859[3] & p__h8859[2] ;
  assign x__h9531 = x__h9467 & p__h8859[1] ;
  assign x__h9617 = x__h9531 & p__h8859[0] ;
  assign x__h9978 = x__h9980 | y__h9981 ;
  assign x__h9980 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175[2] |
	     y__h9983 ;
  assign y__h10214 =
	     x__h10280 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[5] ;
  assign y__h10216 =
	     p__h9807[1] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175[0] ;
  assign y__h10334 =
	     p__h9807[0] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[5] ;
  assign y__h10393 =
	     x__h10613 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[5] ;
  assign y__h10395 =
	     x__h10527 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175[0] ;
  assign y__h10397 =
	     x__h10463 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175[1] ;
  assign y__h10399 =
	     p__h9807[3] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175[2] ;
  assign y__h11248 =
	     x__h11380 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123[6] ;
  assign y__h11250 =
	     x__h11316 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268[0] ;
  assign y__h11252 =
	     p__h11124[2] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268[1] ;
  assign y__h11483 =
	     x__h11549 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123[6] ;
  assign y__h11485 =
	     p__h11124[1] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268[0] ;
  assign y__h11603 =
	     p__h11124[0] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123[6] ;
  assign y__h11662 =
	     x__h11882 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d123[6] ;
  assign y__h11664 =
	     x__h11796 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268[0] ;
  assign y__h11666 =
	     x__h11732 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268[1] ;
  assign y__h11668 =
	     p__h11124[3] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d268[2] ;
  assign y__h12543 =
	     x__h12609 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318[0] ;
  assign y__h12545 =
	     p__h12388[2] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318[1] ;
  assign y__h12751 =
	     p__h12388[1] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318[0] ;
  assign y__h12930 =
	     x__h13062 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318[0] ;
  assign y__h12932 =
	     x__h12998 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318[1] ;
  assign y__h12934 =
	     p__h12388[3] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d318[2] ;
  assign y__h14066 = x__h14198 & bfloat_obj_unsignedmult_rg_s1_op_2[3] ;
  assign y__h14068 =
	     x__h14134 &
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362[0] ;
  assign y__h14070 =
	     p__h13938[2] &
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362[1] ;
  assign y__h14303 = x__h14369 & bfloat_obj_unsignedmult_rg_s1_op_2[3] ;
  assign y__h14305 =
	     p__h13938[1] &
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362[0] ;
  assign y__h14423 = p__h13938[0] & bfloat_obj_unsignedmult_rg_s1_op_2[3] ;
  assign y__h14482 = x__h14702 & bfloat_obj_unsignedmult_rg_s1_op_2[3] ;
  assign y__h14484 =
	     x__h14616 &
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362[0] ;
  assign y__h14486 =
	     x__h14552 &
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362[1] ;
  assign y__h14488 =
	     p__h13938[3] &
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_6_T_ETC___d362[2] ;
  assign y__h15453 =
	     x__h15518 &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d423[0] ;
  assign y__h15455 =
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d413[0] &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d423[1] ;
  assign y__h15654 =
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d427[1] &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d423[0] ;
  assign y__h15826 =
	     x__h15952 &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d423[0] ;
  assign y__h15828 =
	     x__h15891 &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_6_T_ETC___d423[1] ;
  assign y__h15830 =
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d413[1] &
	     bfloat_obj_unsignedmult_rg_s1_op_0_51_BITS_8_T_ETC___d411[0] ;
  assign y__h16664 = x__h16796 & bfloat_obj_unsignedmult_rg_s1_op_4[7] ;
  assign y__h16666 =
	     x__h16732 &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451[0] ;
  assign y__h16668 =
	     p__h16538[2] &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451[1] ;
  assign y__h16900 = x__h16966 & bfloat_obj_unsignedmult_rg_s1_op_4[7] ;
  assign y__h16902 =
	     p__h16538[1] &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451[0] ;
  assign y__h17020 = p__h16538[0] & bfloat_obj_unsignedmult_rg_s1_op_4[7] ;
  assign y__h17079 = x__h17299 & bfloat_obj_unsignedmult_rg_s1_op_4[7] ;
  assign y__h17081 =
	     x__h17213 &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451[0] ;
  assign y__h17083 =
	     x__h17149 &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451[1] ;
  assign y__h17085 =
	     p__h16538[3] &
	     bfloat_obj_unsignedmult_rg_s1_op_2_81_BITS_10__ETC___d451[2] ;
  assign y__h18299 = x__h18200 & bfloat_obj_unsignedmult_rg_s2_op_2[8] ;
  assign y__h18492 = x__h18394 & bfloat_obj_unsignedmult_rg_s2_op_2[9] ;
  assign y__h18685 = x__h18587 & bfloat_obj_unsignedmult_rg_s2_op_2[10] ;
  assign y__h18878 = x__h18780 & bfloat_obj_unsignedmult_rg_s2_op_2[11] ;
  assign y__h19071 = x__h18973 & bfloat_obj_unsignedmult_rg_s2_op_2[12] ;
  assign y__h20247 =
	     x__h20313 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622[0] ;
  assign y__h20249 =
	     p__h20117[2] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622[1] ;
  assign y__h20455 =
	     p__h20117[1] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622[0] ;
  assign y__h20634 =
	     x__h20766 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622[0] ;
  assign y__h20636 =
	     x__h20702 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622[1] ;
  assign y__h20638 =
	     p__h20117[3] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_3_T_ETC___d622[2] ;
  assign y__h21116 = x__h21248 & IF_x0633_OR_y0634_THEN_1_ELSE_0__q1[0] ;
  assign y__h21118 =
	     x__h21184 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601[0] ;
  assign y__h21120 =
	     p__h20990[2] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601[1] ;
  assign y__h21397 = x__h21463 & IF_x0633_OR_y0634_THEN_1_ELSE_0__q1[0] ;
  assign y__h21399 =
	     p__h20990[1] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601[0] ;
  assign y__h21517 = p__h20990[0] & IF_x0633_OR_y0634_THEN_1_ELSE_0__q1[0] ;
  assign y__h21576 = x__h21796 & IF_x0633_OR_y0634_THEN_1_ELSE_0__q1[0] ;
  assign y__h21578 =
	     x__h21710 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601[0] ;
  assign y__h21580 =
	     x__h21646 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601[1] ;
  assign y__h21582 =
	     p__h20990[3] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_7_T_ETC___d601[2] ;
  assign y__h22063 = x__h22195 & cin__h21930 ;
  assign y__h22065 =
	     x__h22131 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580[0] ;
  assign y__h22067 =
	     p__h21937[2] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580[1] ;
  assign y__h22347 = x__h22413 & cin__h21930 ;
  assign y__h22349 =
	     p__h21937[1] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580[0] ;
  assign y__h22467 = p__h21937[0] & cin__h21930 ;
  assign y__h22526 = x__h22746 & cin__h21930 ;
  assign y__h22528 =
	     x__h22660 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580[0] ;
  assign y__h22530 =
	     x__h22596 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580[1] ;
  assign y__h22532 =
	     p__h21937[3] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_11__ETC___d580[2] ;
  assign y__h23015 = x__h23142 & cin__h22880 ;
  assign y__h23017 =
	     x__h23081 &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d564[0] ;
  assign y__h23019 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566[2] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d564[1] ;
  assign y__h23292 = x__h23355 & cin__h22880 ;
  assign y__h23294 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566[1] &
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d564[0] ;
  assign y__h23407 =
	     bfloat_obj_unsignedmult_rg_s3_op_0_60_BITS_14__ETC___d566[0] &
	     cin__h22880 ;
  assign y__h35599 = {7{int_8_rg_b[7]}} ;
  assign y__h35689 =
	     x__h36050 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[5] ;
  assign y__h35691 =
	     x__h35964 &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124[0] ;
  assign y__h35693 =
	     x__h35900 &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124[1] ;
  assign y__h35695 =
	     p__h35673[3] &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124[2] ;
  assign y__h36324 =
	     x__h36456 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[5] ;
  assign y__h36326 =
	     x__h36392 &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124[0] ;
  assign y__h36328 =
	     p__h35673[2] &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124[1] ;
  assign y__h36532 =
	     x__h36598 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[5] ;
  assign y__h36534 =
	     p__h35673[1] &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1124[0] ;
  assign y__h36652 =
	     p__h35673[0] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[5] ;
  assign y__h36873 = x__h37574 & y__h37658 ;
  assign y__h36875 = x__h37574 & y__h37575 ;
  assign y__h36877 = x__h37513 & y__h37514 ;
  assign y__h36879 = x__h37471 & y__h37472 ;
  assign y__h37472 =
	     ~x__h37053 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[6] ;
  assign y__h37514 =
	     ~x__h37174 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[6] ;
  assign y__h37516 =
	     ~x__h37053 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[6] ;
  assign y__h37575 =
	     ~x__h37295 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201[6] ;
  assign y__h37577 =
	     ~x__h37174 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[6] ;
  assign y__h37658 =
	     ~x__h37295 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201[6] ;
  assign y__h37805 = x__h37870 & y__h37658 ;
  assign y__h37807 = x__h37870 & y__h37575 ;
  assign y__h37809 = y__h37516 & y__h37514 ;
  assign y__h38004 = y__h37577 & y__h37658 ;
  assign y__h38006 = y__h37577 & y__h37575 ;
  assign y__h38214 = x__h36827 & cin__h36787 ;
  assign y__h38550 = x__h43918 & cin__h38527 ;
  assign y__h38552 = x__h43836 & y__h43837 ;
  assign y__h38554 = x__h43775 & y__h43776 ;
  assign y__h38556 = x__h43733 & y__h43734 ;
  assign y__h38789 =
	     x__h41691 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[6] ;
  assign y__h38791 = x__h41609 & y__h41610 ;
  assign y__h38793 = x__h41548 & y__h41549 ;
  assign y__h38795 = x__h41506 & y__h41507 ;
  assign y__h38860 =
	     x__h39118 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1117[0] ;
  assign y__h38862 =
	     x__h39032 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237[0] ;
  assign y__h38864 =
	     x__h38968 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237[1] ;
  assign y__h38866 =
	     p__h38844[3] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237[2] ;
  assign y__h39290 =
	     x__h39422 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1117[0] ;
  assign y__h39292 =
	     x__h39358 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237[0] ;
  assign y__h39294 =
	     p__h38844[2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237[1] ;
  assign y__h39498 =
	     x__h39564 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1117[0] ;
  assign y__h39500 =
	     p__h38844[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1237[0] ;
  assign y__h39618 =
	     p__h38844[0] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1117[0] ;
  assign y__h39854 = x__h40065 & y__h40066 ;
  assign y__h39856 =
	     x__h40004 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1261[0] ;
  assign y__h39858 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263[2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1261[1] ;
  assign y__h40066 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1277[6] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[5] ;
  assign y__h40298 = x__h40361 & y__h40066 ;
  assign y__h40300 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1261[0] ;
  assign y__h40497 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1263[0] &
	     y__h40066 ;
  assign y__h40699 =
	     x__h40957 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[0] ;
  assign y__h40701 =
	     x__h40871 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327[0] ;
  assign y__h40703 =
	     x__h40807 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327[1] ;
  assign y__h40705 =
	     p__h40683[3] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327[2] ;
  assign y__h41129 =
	     x__h41261 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[0] ;
  assign y__h41131 =
	     x__h41197 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327[0] ;
  assign y__h41133 =
	     p__h40683[2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327[1] ;
  assign y__h41337 =
	     x__h41403 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[0] ;
  assign y__h41339 =
	     p__h40683[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1327[0] ;
  assign y__h41457 =
	     p__h40683[0] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[0] ;
  assign y__h41507 = sum__h38846[3] & sum__h39838[3] ;
  assign y__h41549 = sum_BIT_0___h39684 & cout__h40684 ;
  assign y__h41551 = sum__h38846[3] ^ sum__h39838[3] ;
  assign y__h41610 = ~x__h39717 & sum__h40685[3] ;
  assign y__h41612 = sum_BIT_0___h39684 ^ cout__h40684 ;
  assign y__h41693 = ~x__h39717 ^ sum__h40685[3] ;
  assign y__h41859 =
	     x__h41985 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[6] ;
  assign y__h41861 = x__h41924 & y__h41610 ;
  assign y__h41863 = y__h41551 & y__h41549 ;
  assign y__h42058 =
	     x__h42121 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[6] ;
  assign y__h42060 = y__h41612 & y__h41610 ;
  assign y__h42173 =
	     y__h41693 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[6] ;
  assign y__h42228 = x__h38704 & cin__h38664 ;
  assign y__h42426 = x__h42356 & sum__h38775[3] ;
  assign y__h42621 = x__h42832 & y__h42833 ;
  assign y__h42623 =
	     x__h42771 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1428[0] ;
  assign y__h42625 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430[2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1428[1] ;
  assign y__h42833 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1179[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1145[0] ;
  assign y__h43065 = x__h43128 & y__h42833 ;
  assign y__h43067 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1428[0] ;
  assign y__h43264 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1430[0] &
	     y__h42833 ;
  assign y__h43451 = x__h42554 & sum__h38775[2] ;
  assign y__h43708 = x__h43638 & sum__h38775[1] ;
  assign y__h43734 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1387 &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1417 ;
  assign y__h43776 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1423 &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1451 ;
  assign y__h43778 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1387 ^
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1417 ;
  assign y__h43837 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1457 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1476 ;
  assign y__h43839 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1423 ^
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1451 ;
  assign y__h43920 =
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1457 ^
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1476 ;
  assign y__h44047 = x__h46197 & cin__h44024 ;
  assign y__h44049 =
	     x__h46115 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1583[0] ;
  assign y__h44051 =
	     x__h46054 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1583[1] ;
  assign y__h44053 = x__h46012 & y__h46013 ;
  assign y__h44234 =
	     x__h45344 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[0] ;
  assign y__h44236 =
	     x__h45258 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530[0] ;
  assign y__h44238 =
	     x__h45194 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530[1] ;
  assign y__h44240 =
	     p__h44218[3] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530[2] ;
  assign y__h44305 =
	     x__h44563 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201[0] ;
  assign y__h44307 =
	     x__h44477 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485[0] ;
  assign y__h44309 =
	     x__h44413 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485[1] ;
  assign y__h44311 =
	     p__h44289[3] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485[2] ;
  assign y__h44735 =
	     x__h44867 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201[0] ;
  assign y__h44737 =
	     x__h44803 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485[0] ;
  assign y__h44739 =
	     p__h44289[2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485[1] ;
  assign y__h44943 =
	     x__h45009 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201[0] ;
  assign y__h44945 =
	     p__h44289[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1485[0] ;
  assign y__h45063 =
	     p__h44289[0] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1201[0] ;
  assign y__h45516 =
	     x__h45648 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[0] ;
  assign y__h45518 =
	     x__h45584 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530[0] ;
  assign y__h45520 =
	     p__h44218[2] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530[1] ;
  assign y__h45724 =
	     x__h45790 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[0] ;
  assign y__h45726 =
	     p__h44218[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1530[0] ;
  assign y__h45844 =
	     p__h44218[0] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1190[0] ;
  assign y__h46013 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1556 &
	     sum__h38775[0] ;
  assign y__h46057 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1556 ^
	     sum__h38775[0] ;
  assign y__h46537 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1277[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1280[0] ;
  assign y__h46769 = x__h46832 & y__h46537 ;
  assign y__h46968 = sum__h44291[0] & y__h46537 ;
  assign y__h47191 = x__h47317 & cin__h44024 ;
  assign y__h47193 =
	     x__h47256 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1583[0] ;
  assign y__h47195 =
	     y__h46057 &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1583[1] ;
  assign y__h47390 = x__h47453 & cin__h44024 ;
  assign y__h47392 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587[1] &
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1583[0] ;
  assign y__h47505 =
	     int_8_rg_a_107_BITS_6_TO_0_115_AND_SEXT_int_8__ETC___d1587[0] &
	     cin__h44024 ;
  assign y__h47617 = x__h47743 & cin__h38527 ;
  assign y__h47619 = x__h47682 & y__h43837 ;
  assign y__h47621 = y__h43778 & y__h43776 ;
  assign y__h47816 = x__h47879 & cin__h38527 ;
  assign y__h47818 = y__h43839 & y__h43837 ;
  assign y__h47931 = y__h43920 & cin__h38527 ;
  assign y__h48069 =
	     int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_109_BI_ETC___d1111 &
	     cout__h35674 ;
  assign y__h48109 =
	     sum__h35675[3] &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1215 ;
  assign y__h48111 =
	     int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_109_BI_ETC___d1111 ^
	     cout__h35674 ;
  assign y__h48171 =
	     sum__h35675[3] ^
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1215 ;
  assign y__h48242 =
	     x__h48305 &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1607 ;
  assign y__h48244 = y__h48111 & y__h48109 ;
  assign y__h48357 =
	     y__h48171 &
	     INV_int_8_rg_a_107_BIT_7_108_AND_int_8_rg_b_10_ETC___d1607 ;
  assign y__h49240 =
	     x__h49568 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1841 ;
  assign y__h49242 =
	     x__h49482 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691[0] ;
  assign y__h49244 =
	     x__h49418 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691[1] ;
  assign y__h49246 =
	     p__h49224[3] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691[2] ;
  assign y__h49700 =
	     x__h50028 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1839 ;
  assign y__h49702 =
	     x__h49942 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711[0] ;
  assign y__h49704 =
	     x__h49878 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711[1] ;
  assign y__h49706 =
	     p__h49684[3] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711[2] ;
  assign y__h50160 =
	     x__h50488 &
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1837 ;
  assign y__h50162 =
	     x__h50402 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731[0] ;
  assign y__h50164 =
	     x__h50338 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731[1] ;
  assign y__h50166 =
	     p__h50144[3] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731[2] ;
  assign y__h50619 =
	     x__h50881 &
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1835 ;
  assign y__h50621 =
	     x__h50795 &
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752[0] ;
  assign y__h50623 =
	     x__h50731 &
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752[1] ;
  assign y__h50625 =
	     p__h50603[3] &
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752[2] ;
  assign y__h51012 =
	     x__h51274 &
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1833 ;
  assign y__h51014 =
	     x__h51188 &
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773[0] ;
  assign y__h51016 =
	     x__h51124 &
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773[1] ;
  assign y__h51018 =
	     p__h50996[3] &
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773[2] ;
  assign y__h51405 =
	     x__h51667 &
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1831 ;
  assign y__h51407 =
	     x__h51581 &
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794[0] ;
  assign y__h51409 =
	     x__h51517 &
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794[1] ;
  assign y__h51411 =
	     p__h51389[3] &
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794[2] ;
  assign y__h51799 =
	     x__h51973 &
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815[0] ;
  assign y__h51801 =
	     x__h51909 &
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815[1] ;
  assign y__h51803 =
	     p__h51781[3] &
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815[2] ;
  assign y__h52214 =
	     x__h52280 &
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815[0] ;
  assign y__h52216 =
	     p__h51781[2] &
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815[1] ;
  assign y__h52422 =
	     p__h51781[1] &
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1815[0] ;
  assign y__h52652 =
	     x__h52784 &
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1831 ;
  assign y__h52654 =
	     x__h52720 &
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794[0] ;
  assign y__h52656 =
	     p__h51389[2] &
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794[1] ;
  assign y__h52860 =
	     x__h52926 &
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1831 ;
  assign y__h52862 =
	     p__h51389[1] &
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1794[0] ;
  assign y__h52980 =
	     p__h51389[0] &
	     int_8_rg_prod1_670_BITS_3_TO_0_813_AND_int_8_r_ETC___d1831 ;
  assign y__h53092 =
	     x__h53224 &
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1833 ;
  assign y__h53094 =
	     x__h53160 &
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773[0] ;
  assign y__h53096 =
	     p__h50996[2] &
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773[1] ;
  assign y__h53300 =
	     x__h53366 &
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1833 ;
  assign y__h53302 =
	     p__h50996[1] &
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1773[0] ;
  assign y__h53420 =
	     p__h50996[0] &
	     int_8_rg_prod1_670_BITS_7_TO_4_792_AND_int_8_r_ETC___d1833 ;
  assign y__h53532 =
	     x__h53664 &
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1835 ;
  assign y__h53534 =
	     x__h53600 &
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752[0] ;
  assign y__h53536 =
	     p__h50603[2] &
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752[1] ;
  assign y__h53740 =
	     x__h53806 &
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1835 ;
  assign y__h53742 =
	     p__h50603[1] &
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1752[0] ;
  assign y__h53860 =
	     p__h50603[0] &
	     int_8_rg_prod1_670_BITS_11_TO_8_771_AND_int_8__ETC___d1835 ;
  assign y__h53972 =
	     x__h54104 &
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1837 ;
  assign y__h53974 =
	     x__h54040 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731[0] ;
  assign y__h53976 =
	     p__h50144[2] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731[1] ;
  assign y__h54180 =
	     x__h54246 &
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1837 ;
  assign y__h54182 =
	     p__h50144[1] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1731[0] ;
  assign y__h54300 =
	     p__h50144[0] &
	     int_8_rg_prod1_670_BITS_15_TO_12_750_AND_int_8_ETC___d1837 ;
  assign y__h54412 =
	     x__h54544 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1839 ;
  assign y__h54414 =
	     x__h54480 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711[0] ;
  assign y__h54416 =
	     p__h49684[2] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711[1] ;
  assign y__h54620 =
	     x__h54686 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1839 ;
  assign y__h54622 =
	     p__h49684[1] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1711[0] ;
  assign y__h54740 =
	     p__h49684[0] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1839 ;
  assign y__h54852 =
	     x__h54984 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1841 ;
  assign y__h54854 =
	     x__h54920 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691[0] ;
  assign y__h54856 =
	     p__h49224[2] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691[1] ;
  assign y__h55060 =
	     x__h55126 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1841 ;
  assign y__h55062 =
	     p__h49224[1] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1691[0] ;
  assign y__h55180 =
	     p__h49224[0] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1841 ;
  assign y__h55292 =
	     x__h55424 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1843 ;
  assign y__h55294 =
	     x__h55360 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1677[0] ;
  assign y__h55296 =
	     p__h48762[2] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1677[1] ;
  assign y__h55500 =
	     x__h55566 &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1843 ;
  assign y__h55502 =
	     p__h48762[1] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1677[0] ;
  assign y__h55620 =
	     p__h48762[0] &
	     int_8_rg_prod1_670_BIT_15_671_CONCAT_int_8_rg__ETC___d1843 ;
  assign y__h6364 =
	     x__h6496 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79[0] ;
  assign y__h6366 =
	     x__h6432 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127[0] ;
  assign y__h6368 =
	     p__h6024[2] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127[1] ;
  assign y__h6647 =
	     x__h6713 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79[0] ;
  assign y__h6649 =
	     p__h6024[1] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127[0] ;
  assign y__h6767 =
	     p__h6024[0] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79[0] ;
  assign y__h6826 =
	     x__h7046 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d79[0] ;
  assign y__h6828 =
	     x__h6960 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127[0] ;
  assign y__h6830 =
	     x__h6896 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127[1] ;
  assign y__h6832 =
	     p__h6024[3] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d127[2] ;
  assign y__h7625 =
	     x__h7753 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96[7] ;
  assign y__h7627 =
	     x__h7692 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d82[0] ;
  assign y__h7629 =
	     x__h7652 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d82[1] ;
  assign y__h7853 =
	     x__h7916 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96[7] ;
  assign y__h7855 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86[1] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d82[0] ;
  assign y__h7968 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d86[0] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96[7] ;
  assign y__h8027 =
	     x__h8237 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d96[7] ;
  assign y__h8029 =
	     x__h8155 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d82[0] ;
  assign y__h8031 =
	     x__h8094 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d82[1] ;
  assign y__h8033 =
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d66 &
	     x__h7628 ;
  assign y__h8983 =
	     x__h9115 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[0] ;
  assign y__h8985 =
	     x__h9051 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218[0] ;
  assign y__h8987 =
	     p__h8859[2] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218[1] ;
  assign y__h9218 =
	     x__h9284 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[0] ;
  assign y__h9220 =
	     p__h8859[1] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218[0] ;
  assign y__h9338 =
	     p__h8859[0] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[0] ;
  assign y__h9397 =
	     x__h9617 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d59[0] ;
  assign y__h9399 =
	     x__h9531 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218[0] ;
  assign y__h9401 =
	     x__h9467 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218[1] ;
  assign y__h9403 =
	     p__h8859[3] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d218[2] ;
  assign y__h9979 =
	     x__h10111 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d63[5] ;
  assign y__h9981 =
	     x__h10047 &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175[0] ;
  assign y__h9983 =
	     p__h9807[2] &
	     bfloat_obj_unsignedmult_rg_a_0_AND_SEXT_bfloat_ETC___d175[1] ;
  assign y_avValue_snd__h24219 =
	     (e__h24529 > 8'd1 && e__h24529 < 8'd254) ? e__h24529 : 8'd0 ;
  assign y_avValue_snd__h24235 =
	     (bfloat_rg_A[14:7] == 8'd255 || bfloat_rg_B[14:7] == 8'd255) ?
	       8'd255 :
	       y_avValue_snd__h24219 ;
  assign y_avValue_snd__h24251 =
	     (bfloat_rg_A[14:7] == 8'd0 || bfloat_rg_B[14:7] == 8'd0) ?
	       8'd0 :
	       y_avValue_snd__h24235 ;
  always@(grs_mul_round__h25194 or mant_1__h25188 or mantissa_round__h25426)
  begin
    case (grs_mul_round__h25194)
      3'b011, 3'b110, 3'b111:
	  IF_IF_IF_bfloat_obj_unsignedmult_rg_s5_val_53__ETC___d778 =
	      mantissa_round__h25426;
      default: IF_IF_IF_bfloat_obj_unsignedmult_rg_s5_val_53__ETC___d778 =
		   { 1'd0, mant_1__h25188 };
    endcase
  end
  always@(bfloat_rg_exception_s1)
  begin
    case (bfloat_rg_exception_s1)
      2'd1: CASE_bfloat_rg_exception_s1_1_0_2_255_255__q3 = 8'd0;
      2'd2: CASE_bfloat_rg_exception_s1_1_0_2_255_255__q3 = 8'd255;
      default: CASE_bfloat_rg_exception_s1_1_0_2_255_255__q3 = 8'd255;
    endcase
  end
  always@(bfloat_rg_exception_s1)
  begin
    case (bfloat_rg_exception_s1)
      2'd1, 2'd2: CASE_bfloat_rg_exception_s1_1_0_2_0_4194304__q4 = 23'd0;
      default: CASE_bfloat_rg_exception_s1_1_0_2_0_4194304__q4 = 23'd4194304;
    endcase
  end
  always@(grs__h34745 or
	  bfloat_rg_mant_s9 or
	  bfloat_rg_mant_s9_102_BITS_26_TO_4_103_PLUS_1___d1104)
  begin
    case (grs__h34745)
      3'b011, 3'b110, 3'b111:
	  CASE_grs4745_0b11_bfloat_rg_mant_s9_102_BITS_2_ETC__q6 =
	      bfloat_rg_mant_s9_102_BITS_26_TO_4_103_PLUS_1___d1104;
      default: CASE_grs4745_0b11_bfloat_rg_mant_s9_102_BITS_2_ETC__q6 =
		   bfloat_rg_mant_s9[26:4];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        bfloat_guard_bit_s9 <= `BSV_ASSIGNMENT_DELAY
	    1'bx /* unspecified value */ ;
	bfloat_obj_unsignedmult_rg_a <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	bfloat_obj_unsignedmult_rg_b <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	bfloat_obj_unsignedmult_rg_s1_op_0 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	bfloat_obj_unsignedmult_rg_s1_op_1 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	bfloat_obj_unsignedmult_rg_s1_op_2 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	bfloat_obj_unsignedmult_rg_s1_op_3 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	bfloat_obj_unsignedmult_rg_s1_op_4 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	bfloat_obj_unsignedmult_rg_s1_val <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_obj_unsignedmult_rg_s2_op_0 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	bfloat_obj_unsignedmult_rg_s2_op_1 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	bfloat_obj_unsignedmult_rg_s2_op_2 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	bfloat_obj_unsignedmult_rg_s2_val <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_obj_unsignedmult_rg_s3_op_0 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	bfloat_obj_unsignedmult_rg_s3_op_1 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	bfloat_obj_unsignedmult_rg_s3_val <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_obj_unsignedmult_rg_s4_op <= `BSV_ASSIGNMENT_DELAY
	    16'bxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_obj_unsignedmult_rg_s4_val <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_obj_unsignedmult_rg_s5_val <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_out <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_A <= `BSV_ASSIGNMENT_DELAY
	    16'bxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_B <= `BSV_ASSIGNMENT_DELAY
	    16'bxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_C <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_C_s1 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_C_s2 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_C_s3 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_C_s4 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_C_s5 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_C_s6 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_C_s7 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_exception_s1 <= `BSV_ASSIGNMENT_DELAY
	    2'bxx /* unspecified value */ ;
	bfloat_rg_exception_s2 <= `BSV_ASSIGNMENT_DELAY
	    2'bxx /* unspecified value */ ;
	bfloat_rg_exception_s3 <= `BSV_ASSIGNMENT_DELAY
	    2'bxx /* unspecified value */ ;
	bfloat_rg_exception_s4 <= `BSV_ASSIGNMENT_DELAY
	    2'bxx /* unspecified value */ ;
	bfloat_rg_exception_s6 <= `BSV_ASSIGNMENT_DELAY
	    2'bxx /* unspecified value */ ;
	bfloat_rg_exception_s7 <= `BSV_ASSIGNMENT_DELAY
	    2'bxx /* unspecified value */ ;
	bfloat_rg_exception_s8 <= `BSV_ASSIGNMENT_DELAY
	    2'bxx /* unspecified value */ ;
	bfloat_rg_exp_add_s1 <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	bfloat_rg_exp_add_s2 <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	bfloat_rg_exp_add_s3 <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	bfloat_rg_exp_add_s4 <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	bfloat_rg_exp_diff_s6 <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	bfloat_rg_exp_diff_s7 <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	bfloat_rg_exponent_s8 <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	bfloat_rg_exponent_s9 <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	bfloat_rg_mant_s8 <= `BSV_ASSIGNMENT_DELAY
	    28'bxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_mant_s9 <= `BSV_ASSIGNMENT_DELAY
	    27'bxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_mant_shift_s7 <= `BSV_ASSIGNMENT_DELAY
	    27'bxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_mult_mant_s7 <= `BSV_ASSIGNMENT_DELAY
	    27'bxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_mult_s5 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_mult_s6 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_mult_s7 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	bfloat_rg_out_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_s10_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_s1_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_s2_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_s3_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_s4_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_s5_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_s6_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_s7_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_s8_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_s9_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	bfloat_rg_sign_s1 <= `BSV_ASSIGNMENT_DELAY
	    1'bx /* unspecified value */ ;
	bfloat_rg_sign_s2 <= `BSV_ASSIGNMENT_DELAY
	    1'bx /* unspecified value */ ;
	bfloat_rg_sign_s3 <= `BSV_ASSIGNMENT_DELAY
	    1'bx /* unspecified value */ ;
	bfloat_rg_sign_s4 <= `BSV_ASSIGNMENT_DELAY
	    1'bx /* unspecified value */ ;
	bfloat_rg_sign_s8 <= `BSV_ASSIGNMENT_DELAY
	    1'bx /* unspecified value */ ;
	bfloat_rg_sign_s9 <= `BSV_ASSIGNMENT_DELAY
	    1'bx /* unspecified value */ ;
	bfloat_round_bit_s9 <= `BSV_ASSIGNMENT_DELAY
	    1'bx /* unspecified value */ ;
	bfloat_sticky_bit_s9 <= `BSV_ASSIGNMENT_DELAY
	    1'bx /* unspecified value */ ;
	int_8_out <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	int_8_rg_a <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	int_8_rg_b <= `BSV_ASSIGNMENT_DELAY
	    8'bxxxxxxxx /* unspecified value */ ;
	int_8_rg_c <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	int_8_rg_c1 <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	int_8_rg_prod1 <= `BSV_ASSIGNMENT_DELAY
	    16'bxxxxxxxxxxxxxxxx /* unspecified value */ ;
	rg_A <= `BSV_ASSIGNMENT_DELAY
	    16'bxxxxxxxxxxxxxxxx /* unspecified value */ ;
	rg_B <= `BSV_ASSIGNMENT_DELAY
	    16'bxxxxxxxxxxxxxxxx /* unspecified value */ ;
	rg_C <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	rg_out <= `BSV_ASSIGNMENT_DELAY
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	rg_sel <= `BSV_ASSIGNMENT_DELAY 1'bx /* unspecified value */ ;
      end
    else
      begin
        if (bfloat_guard_bit_s9_EN)
	  bfloat_guard_bit_s9 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_guard_bit_s9_D_IN;
	if (bfloat_obj_unsignedmult_rg_a_EN)
	  bfloat_obj_unsignedmult_rg_a <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_a_D_IN;
	if (bfloat_obj_unsignedmult_rg_b_EN)
	  bfloat_obj_unsignedmult_rg_b <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_b_D_IN;
	if (bfloat_obj_unsignedmult_rg_s1_op_0_EN)
	  bfloat_obj_unsignedmult_rg_s1_op_0 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s1_op_0_D_IN;
	if (bfloat_obj_unsignedmult_rg_s1_op_1_EN)
	  bfloat_obj_unsignedmult_rg_s1_op_1 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s1_op_1_D_IN;
	if (bfloat_obj_unsignedmult_rg_s1_op_2_EN)
	  bfloat_obj_unsignedmult_rg_s1_op_2 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s1_op_2_D_IN;
	if (bfloat_obj_unsignedmult_rg_s1_op_3_EN)
	  bfloat_obj_unsignedmult_rg_s1_op_3 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s1_op_3_D_IN;
	if (bfloat_obj_unsignedmult_rg_s1_op_4_EN)
	  bfloat_obj_unsignedmult_rg_s1_op_4 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s1_op_4_D_IN;
	if (bfloat_obj_unsignedmult_rg_s1_val_EN)
	  bfloat_obj_unsignedmult_rg_s1_val <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s1_val_D_IN;
	if (bfloat_obj_unsignedmult_rg_s2_op_0_EN)
	  bfloat_obj_unsignedmult_rg_s2_op_0 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s2_op_0_D_IN;
	if (bfloat_obj_unsignedmult_rg_s2_op_1_EN)
	  bfloat_obj_unsignedmult_rg_s2_op_1 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s2_op_1_D_IN;
	if (bfloat_obj_unsignedmult_rg_s2_op_2_EN)
	  bfloat_obj_unsignedmult_rg_s2_op_2 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s2_op_2_D_IN;
	if (bfloat_obj_unsignedmult_rg_s2_val_EN)
	  bfloat_obj_unsignedmult_rg_s2_val <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s2_val_D_IN;
	if (bfloat_obj_unsignedmult_rg_s3_op_0_EN)
	  bfloat_obj_unsignedmult_rg_s3_op_0 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s3_op_0_D_IN;
	if (bfloat_obj_unsignedmult_rg_s3_op_1_EN)
	  bfloat_obj_unsignedmult_rg_s3_op_1 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s3_op_1_D_IN;
	if (bfloat_obj_unsignedmult_rg_s3_val_EN)
	  bfloat_obj_unsignedmult_rg_s3_val <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s3_val_D_IN;
	if (bfloat_obj_unsignedmult_rg_s4_op_EN)
	  bfloat_obj_unsignedmult_rg_s4_op <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s4_op_D_IN;
	if (bfloat_obj_unsignedmult_rg_s4_val_EN)
	  bfloat_obj_unsignedmult_rg_s4_val <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s4_val_D_IN;
	if (bfloat_obj_unsignedmult_rg_s5_val_EN)
	  bfloat_obj_unsignedmult_rg_s5_val <= `BSV_ASSIGNMENT_DELAY
	      bfloat_obj_unsignedmult_rg_s5_val_D_IN;
	if (bfloat_out_EN)
	  bfloat_out <= `BSV_ASSIGNMENT_DELAY bfloat_out_D_IN;
	if (bfloat_rg_A_EN)
	  bfloat_rg_A <= `BSV_ASSIGNMENT_DELAY bfloat_rg_A_D_IN;
	if (bfloat_rg_B_EN)
	  bfloat_rg_B <= `BSV_ASSIGNMENT_DELAY bfloat_rg_B_D_IN;
	if (bfloat_rg_C_EN)
	  bfloat_rg_C <= `BSV_ASSIGNMENT_DELAY bfloat_rg_C_D_IN;
	if (bfloat_rg_C_s1_EN)
	  bfloat_rg_C_s1 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_C_s1_D_IN;
	if (bfloat_rg_C_s2_EN)
	  bfloat_rg_C_s2 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_C_s2_D_IN;
	if (bfloat_rg_C_s3_EN)
	  bfloat_rg_C_s3 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_C_s3_D_IN;
	if (bfloat_rg_C_s4_EN)
	  bfloat_rg_C_s4 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_C_s4_D_IN;
	if (bfloat_rg_C_s5_EN)
	  bfloat_rg_C_s5 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_C_s5_D_IN;
	if (bfloat_rg_C_s6_EN)
	  bfloat_rg_C_s6 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_C_s6_D_IN;
	if (bfloat_rg_C_s7_EN)
	  bfloat_rg_C_s7 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_C_s7_D_IN;
	if (bfloat_rg_exception_s1_EN)
	  bfloat_rg_exception_s1 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exception_s1_D_IN;
	if (bfloat_rg_exception_s2_EN)
	  bfloat_rg_exception_s2 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exception_s2_D_IN;
	if (bfloat_rg_exception_s3_EN)
	  bfloat_rg_exception_s3 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exception_s3_D_IN;
	if (bfloat_rg_exception_s4_EN)
	  bfloat_rg_exception_s4 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exception_s4_D_IN;
	if (bfloat_rg_exception_s6_EN)
	  bfloat_rg_exception_s6 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exception_s6_D_IN;
	if (bfloat_rg_exception_s7_EN)
	  bfloat_rg_exception_s7 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exception_s7_D_IN;
	if (bfloat_rg_exception_s8_EN)
	  bfloat_rg_exception_s8 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exception_s8_D_IN;
	if (bfloat_rg_exp_add_s1_EN)
	  bfloat_rg_exp_add_s1 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exp_add_s1_D_IN;
	if (bfloat_rg_exp_add_s2_EN)
	  bfloat_rg_exp_add_s2 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exp_add_s2_D_IN;
	if (bfloat_rg_exp_add_s3_EN)
	  bfloat_rg_exp_add_s3 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exp_add_s3_D_IN;
	if (bfloat_rg_exp_add_s4_EN)
	  bfloat_rg_exp_add_s4 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exp_add_s4_D_IN;
	if (bfloat_rg_exp_diff_s6_EN)
	  bfloat_rg_exp_diff_s6 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exp_diff_s6_D_IN;
	if (bfloat_rg_exp_diff_s7_EN)
	  bfloat_rg_exp_diff_s7 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exp_diff_s7_D_IN;
	if (bfloat_rg_exponent_s8_EN)
	  bfloat_rg_exponent_s8 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exponent_s8_D_IN;
	if (bfloat_rg_exponent_s9_EN)
	  bfloat_rg_exponent_s9 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_exponent_s9_D_IN;
	if (bfloat_rg_mant_s8_EN)
	  bfloat_rg_mant_s8 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_mant_s8_D_IN;
	if (bfloat_rg_mant_s9_EN)
	  bfloat_rg_mant_s9 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_mant_s9_D_IN;
	if (bfloat_rg_mant_shift_s7_EN)
	  bfloat_rg_mant_shift_s7 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_mant_shift_s7_D_IN;
	if (bfloat_rg_mult_mant_s7_EN)
	  bfloat_rg_mult_mant_s7 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_mult_mant_s7_D_IN;
	if (bfloat_rg_mult_s5_EN)
	  bfloat_rg_mult_s5 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_mult_s5_D_IN;
	if (bfloat_rg_mult_s6_EN)
	  bfloat_rg_mult_s6 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_mult_s6_D_IN;
	if (bfloat_rg_mult_s7_EN)
	  bfloat_rg_mult_s7 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_mult_s7_D_IN;
	if (bfloat_rg_out_valid_EN)
	  bfloat_rg_out_valid <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_out_valid_D_IN;
	if (bfloat_rg_s10_valid_EN)
	  bfloat_rg_s10_valid <= `BSV_ASSIGNMENT_DELAY
	      bfloat_rg_s10_valid_D_IN;
	if (bfloat_rg_s1_valid_EN)
	  bfloat_rg_s1_valid <= `BSV_ASSIGNMENT_DELAY bfloat_rg_s1_valid_D_IN;
	if (bfloat_rg_s2_valid_EN)
	  bfloat_rg_s2_valid <= `BSV_ASSIGNMENT_DELAY bfloat_rg_s2_valid_D_IN;
	if (bfloat_rg_s3_valid_EN)
	  bfloat_rg_s3_valid <= `BSV_ASSIGNMENT_DELAY bfloat_rg_s3_valid_D_IN;
	if (bfloat_rg_s4_valid_EN)
	  bfloat_rg_s4_valid <= `BSV_ASSIGNMENT_DELAY bfloat_rg_s4_valid_D_IN;
	if (bfloat_rg_s5_valid_EN)
	  bfloat_rg_s5_valid <= `BSV_ASSIGNMENT_DELAY bfloat_rg_s5_valid_D_IN;
	if (bfloat_rg_s6_valid_EN)
	  bfloat_rg_s6_valid <= `BSV_ASSIGNMENT_DELAY bfloat_rg_s6_valid_D_IN;
	if (bfloat_rg_s7_valid_EN)
	  bfloat_rg_s7_valid <= `BSV_ASSIGNMENT_DELAY bfloat_rg_s7_valid_D_IN;
	if (bfloat_rg_s8_valid_EN)
	  bfloat_rg_s8_valid <= `BSV_ASSIGNMENT_DELAY bfloat_rg_s8_valid_D_IN;
	if (bfloat_rg_s9_valid_EN)
	  bfloat_rg_s9_valid <= `BSV_ASSIGNMENT_DELAY bfloat_rg_s9_valid_D_IN;
	if (bfloat_rg_sign_s1_EN)
	  bfloat_rg_sign_s1 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_sign_s1_D_IN;
	if (bfloat_rg_sign_s2_EN)
	  bfloat_rg_sign_s2 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_sign_s2_D_IN;
	if (bfloat_rg_sign_s3_EN)
	  bfloat_rg_sign_s3 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_sign_s3_D_IN;
	if (bfloat_rg_sign_s4_EN)
	  bfloat_rg_sign_s4 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_sign_s4_D_IN;
	if (bfloat_rg_sign_s8_EN)
	  bfloat_rg_sign_s8 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_sign_s8_D_IN;
	if (bfloat_rg_sign_s9_EN)
	  bfloat_rg_sign_s9 <= `BSV_ASSIGNMENT_DELAY bfloat_rg_sign_s9_D_IN;
	if (bfloat_round_bit_s9_EN)
	  bfloat_round_bit_s9 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_round_bit_s9_D_IN;
	if (bfloat_sticky_bit_s9_EN)
	  bfloat_sticky_bit_s9 <= `BSV_ASSIGNMENT_DELAY
	      bfloat_sticky_bit_s9_D_IN;
	if (int_8_out_EN) int_8_out <= `BSV_ASSIGNMENT_DELAY int_8_out_D_IN;
	if (int_8_rg_a_EN)
	  int_8_rg_a <= `BSV_ASSIGNMENT_DELAY int_8_rg_a_D_IN;
	if (int_8_rg_b_EN)
	  int_8_rg_b <= `BSV_ASSIGNMENT_DELAY int_8_rg_b_D_IN;
	if (int_8_rg_c_EN)
	  int_8_rg_c <= `BSV_ASSIGNMENT_DELAY int_8_rg_c_D_IN;
	if (int_8_rg_c1_EN)
	  int_8_rg_c1 <= `BSV_ASSIGNMENT_DELAY int_8_rg_c1_D_IN;
	if (int_8_rg_prod1_EN)
	  int_8_rg_prod1 <= `BSV_ASSIGNMENT_DELAY int_8_rg_prod1_D_IN;
	if (rg_A_EN) rg_A <= `BSV_ASSIGNMENT_DELAY rg_A_D_IN;
	if (rg_B_EN) rg_B <= `BSV_ASSIGNMENT_DELAY rg_B_D_IN;
	if (rg_C_EN) rg_C <= `BSV_ASSIGNMENT_DELAY rg_C_D_IN;
	if (rg_out_EN) rg_out <= `BSV_ASSIGNMENT_DELAY rg_out_D_IN;
	if (rg_sel_EN) rg_sel <= `BSV_ASSIGNMENT_DELAY rg_sel_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    bfloat_guard_bit_s9 = 1'h0;
    bfloat_obj_unsignedmult_rg_a = 8'hAA;
    bfloat_obj_unsignedmult_rg_b = 8'hAA;
    bfloat_obj_unsignedmult_rg_s1_op_0 = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s1_op_1 = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s1_op_2 = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s1_op_3 = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s1_op_4 = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s1_val = 1'h0;
    bfloat_obj_unsignedmult_rg_s2_op_0 = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s2_op_1 = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s2_op_2 = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s2_val = 1'h0;
    bfloat_obj_unsignedmult_rg_s3_op_0 = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s3_op_1 = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s3_val = 1'h0;
    bfloat_obj_unsignedmult_rg_s4_op = 16'hAAAA;
    bfloat_obj_unsignedmult_rg_s4_val = 1'h0;
    bfloat_obj_unsignedmult_rg_s5_val = 1'h0;
    bfloat_out = 32'hAAAAAAAA;
    bfloat_rg_A = 16'hAAAA;
    bfloat_rg_B = 16'hAAAA;
    bfloat_rg_C = 32'hAAAAAAAA;
    bfloat_rg_C_s1 = 32'hAAAAAAAA;
    bfloat_rg_C_s2 = 32'hAAAAAAAA;
    bfloat_rg_C_s3 = 32'hAAAAAAAA;
    bfloat_rg_C_s4 = 32'hAAAAAAAA;
    bfloat_rg_C_s5 = 32'hAAAAAAAA;
    bfloat_rg_C_s6 = 32'hAAAAAAAA;
    bfloat_rg_C_s7 = 32'hAAAAAAAA;
    bfloat_rg_exception_s1 = 2'h2;
    bfloat_rg_exception_s2 = 2'h2;
    bfloat_rg_exception_s3 = 2'h2;
    bfloat_rg_exception_s4 = 2'h2;
    bfloat_rg_exception_s6 = 2'h2;
    bfloat_rg_exception_s7 = 2'h2;
    bfloat_rg_exception_s8 = 2'h2;
    bfloat_rg_exp_add_s1 = 8'hAA;
    bfloat_rg_exp_add_s2 = 8'hAA;
    bfloat_rg_exp_add_s3 = 8'hAA;
    bfloat_rg_exp_add_s4 = 8'hAA;
    bfloat_rg_exp_diff_s6 = 8'hAA;
    bfloat_rg_exp_diff_s7 = 8'hAA;
    bfloat_rg_exponent_s8 = 8'hAA;
    bfloat_rg_exponent_s9 = 8'hAA;
    bfloat_rg_mant_s8 = 28'hAAAAAAA;
    bfloat_rg_mant_s9 = 27'h2AAAAAA;
    bfloat_rg_mant_shift_s7 = 27'h2AAAAAA;
    bfloat_rg_mult_mant_s7 = 27'h2AAAAAA;
    bfloat_rg_mult_s5 = 32'hAAAAAAAA;
    bfloat_rg_mult_s6 = 32'hAAAAAAAA;
    bfloat_rg_mult_s7 = 32'hAAAAAAAA;
    bfloat_rg_out_valid = 1'h0;
    bfloat_rg_s10_valid = 1'h0;
    bfloat_rg_s1_valid = 1'h0;
    bfloat_rg_s2_valid = 1'h0;
    bfloat_rg_s3_valid = 1'h0;
    bfloat_rg_s4_valid = 1'h0;
    bfloat_rg_s5_valid = 1'h0;
    bfloat_rg_s6_valid = 1'h0;
    bfloat_rg_s7_valid = 1'h0;
    bfloat_rg_s8_valid = 1'h0;
    bfloat_rg_s9_valid = 1'h0;
    bfloat_rg_sign_s1 = 1'h0;
    bfloat_rg_sign_s2 = 1'h0;
    bfloat_rg_sign_s3 = 1'h0;
    bfloat_rg_sign_s4 = 1'h0;
    bfloat_rg_sign_s8 = 1'h0;
    bfloat_rg_sign_s9 = 1'h0;
    bfloat_round_bit_s9 = 1'h0;
    bfloat_sticky_bit_s9 = 1'h0;
    int_8_out = 32'hAAAAAAAA;
    int_8_rg_a = 8'hAA;
    int_8_rg_b = 8'hAA;
    int_8_rg_c = 32'hAAAAAAAA;
    int_8_rg_c1 = 32'hAAAAAAAA;
    int_8_rg_prod1 = 16'hAAAA;
    rg_A = 16'hAAAA;
    rg_B = 16'hAAAA;
    rg_C = 32'hAAAAAAAA;
    rg_out = 32'hAAAAAAAA;
    rg_sel = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mk_mac

